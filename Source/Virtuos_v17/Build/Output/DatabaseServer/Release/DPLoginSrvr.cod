; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	.\DPLoginSrvr.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetHandler@CDPLoginSrvr@@AAEP81@AEXAAVCAr@@KPAEK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDPLoginSrvr@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDPLoginSrvr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDPLoginSrvr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddConnection@CDPLoginSrvr@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveConnection@CDPLoginSrvr@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendError@CDPLoginSrvr@@QAEXJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendFail@CDPLoginSrvr@@QAEXJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendPlayerList@CDPLoginSrvr@@QAEXPBD0KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@QAE@ABKABQ8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Send@CDPMng@@QAEHPAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?nSize@?1??UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z@4IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDPLoginSrvr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?s_dpid@@3KA					; s_dpid
_DATA	SEGMENT
?s_dpid@@3KA DD	0ffffffffH				; s_dpid
_DATA	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?OnAddConnection@CDPLoginSrvr@@QAEXK@Z		; CDPLoginSrvr::OnAddConnection
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
;	COMDAT ?OnAddConnection@CDPLoginSrvr@@QAEXK@Z
_TEXT	SEGMENT
_dpid$ = 8						; size = 4
?OnAddConnection@CDPLoginSrvr@@QAEXK@Z PROC NEAR	; CDPLoginSrvr::OnAddConnection, COMDAT
; _this$ = ecx

; 72   : 	if( s_dpid == 0xFFFFFFFF )

  00000	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?s_dpid@@3KA, -1 ; s_dpid
  00007	75 09		 jne	 SHORT $L189572

; 73   : 		s_dpid	= dpid;

  00009	8b 44 24 04	 mov	 eax, DWORD PTR _dpid$[esp-4]
  0000d	a3 00 00 00 00	 mov	 DWORD PTR ?s_dpid@@3KA, eax ; s_dpid
$L189572:

; 74   : }

  00012	c2 04 00	 ret	 4
?OnAddConnection@CDPLoginSrvr@@QAEXK@Z ENDP		; CDPLoginSrvr::OnAddConnection
_TEXT	ENDS
PUBLIC	?OnRemoveConnection@CDPLoginSrvr@@QAEXK@Z	; CDPLoginSrvr::OnRemoveConnection
EXTRN	?SendRemoveAllAccounts@CDPAccountClient@@QAEXXZ:NEAR ; CDPAccountClient::SendRemoveAllAccounts
EXTRN	?g_dpAccountClient@@3VCDPAccountClient@@A:BYTE	; g_dpAccountClient
; Function compile flags: /Ogty
;	COMDAT ?OnRemoveConnection@CDPLoginSrvr@@QAEXK@Z
_TEXT	SEGMENT
_dpid$ = 8						; size = 4
?OnRemoveConnection@CDPLoginSrvr@@QAEXK@Z PROC NEAR	; CDPLoginSrvr::OnRemoveConnection, COMDAT
; _this$ = ecx

; 78   : 	if( s_dpid == dpid )

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dpid@@3KA ; s_dpid
  00005	3b 44 24 04	 cmp	 eax, DWORD PTR _dpid$[esp-4]
  00009	75 14		 jne	 SHORT $L189577

; 79   : 	{
; 80   : 		g_dpAccountClient.SendRemoveAllAccounts();

  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpAccountClient@@3VCDPAccountClient@@A
  00010	e8 00 00 00 00	 call	 ?SendRemoveAllAccounts@CDPAccountClient@@QAEXXZ ; CDPAccountClient::SendRemoveAllAccounts

; 81   : 		s_dpid	= 0xFFFFFFFF;

  00015	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?s_dpid@@3KA, -1 ; s_dpid
$L189577:

; 82   : 	}
; 83   : }

  0001f	c2 04 00	 ret	 4
?OnRemoveConnection@CDPLoginSrvr@@QAEXK@Z ENDP		; CDPLoginSrvr::OnRemoveConnection
_TEXT	ENDS
PUBLIC	?SendPlayerList@CDPLoginSrvr@@QAEXPBD0KK@Z	; CDPLoginSrvr::SendPlayerList
EXTRN	?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ:NEAR ; CDbManager::AllocRequest
EXTRN	?g_DbManager@@3AAVCDbManager@@A:DWORD		; g_DbManager
EXTRN	__imp__PostQueuedCompletionStatus@16:NEAR
EXTRN	?prj@@3VCProject@@A:BYTE			; prj
EXTRN	?IsAllowedLetter@CProject@@QAEHPBDH@Z:NEAR	; CProject::IsAllowedLetter
; Function compile flags: /Ogty
;	COMDAT ?SendPlayerList@CDPLoginSrvr@@QAEXPBD0KK@Z
_TEXT	SEGMENT
_lpszAccount$ = 8					; size = 4
_lpszPassword$ = 12					; size = 4
_dpid$ = 16						; size = 4
_dwAuthKey$ = 20					; size = 4
?SendPlayerList@CDPLoginSrvr@@QAEXPBD0KK@Z PROC NEAR	; CDPLoginSrvr::SendPlayerList, COMDAT
; _this$ = ecx

; 117  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus	= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 118  : #ifdef __SECURITY_FIXES
; 119  : 	if(!prj.IsAllowedLetter(lpszAccount,FALSE) || 
; 120  : 		!prj.IsAllowedLetter(lpszPassword,FALSE))

  0000d	8b 7c 24 0c	 mov	 edi, DWORD PTR _lpszAccount$[esp+4]
  00011	6a 00		 push	 0
  00013	57		 push	 edi
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00019	8b f0		 mov	 esi, eax
  0001b	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  00020	85 c0		 test	 eax, eax
  00022	74 70		 je	 SHORT $L189626
  00024	53		 push	 ebx
  00025	8b 5c 24 14	 mov	 ebx, DWORD PTR _lpszPassword$[esp+8]
  00029	6a 00		 push	 0
  0002b	53		 push	 ebx
  0002c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00031	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  00036	85 c0		 test	 eax, eax
  00038	74 59		 je	 SHORT $L190532

; 121  : 	{
; 122  : 		return;
; 123  : 	}
; 124  : #endif // __SECURITY_FIXES
; 125  : 	lpDbOverlappedPlus->dpid	= dpid;

  0003a	8b 44 24 18	 mov	 eax, DWORD PTR _dpid$[esp+8]

; 126  : 	lpDbOverlappedPlus->nQueryMode	= SENDPLAYERLIST;
; 127  : 	lpDbOverlappedPlus->dwAuthKey	= dwAuthKey;

  0003e	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwAuthKey$[esp+8]

; 128  : 	strcpy( lpDbOverlappedPlus->AccountInfo.szAccount, lpszAccount );

  00042	8d 56 20	 lea	 edx, DWORD PTR [esi+32]
  00045	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  0004b	c7 46 14 07 00
	00 00		 mov	 DWORD PTR [esi+20], 7
  00052	89 8e b4 00 00
	00		 mov	 DWORD PTR [esi+180], ecx
  00058	8b c7		 mov	 eax, edi
  0005a	2b d7		 sub	 edx, edi
  0005c	8d 64 24 00	 npad	 4
$L190528:
  00060	8a 08		 mov	 cl, BYTE PTR [eax]
  00062	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00065	40		 inc	 eax
  00066	84 c9		 test	 cl, cl
  00068	75 f6		 jne	 SHORT $L190528

; 129  : 	strcpy( lpDbOverlappedPlus->AccountInfo.szPassword, lpszPassword );

  0006a	8d 56 4a	 lea	 edx, DWORD PTR [esi+74]
  0006d	8b c3		 mov	 eax, ebx
  0006f	2b d3		 sub	 edx, ebx
$L190529:
  00071	8a 08		 mov	 cl, BYTE PTR [eax]
  00073	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00076	40		 inc	 eax
  00077	84 c9		 test	 cl, cl
  00079	75 f6		 jne	 SHORT $L190529

; 130  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGet, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00081	8b 82 48 03 00
	00		 mov	 eax, DWORD PTR [edx+840]
  00087	56		 push	 esi
  00088	6a 00		 push	 0
  0008a	6a 01		 push	 1
  0008c	50		 push	 eax
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
$L190532:
  00093	5b		 pop	 ebx
$L189626:
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi

; 131  : }

  00096	c2 10 00	 ret	 16			; 00000010H
?SendPlayerList@CDPLoginSrvr@@QAEXPBD0KK@Z ENDP		; CDPLoginSrvr::SendPlayerList
_TEXT	ENDS
PUBLIC	?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnCreatePlayer
EXTRN	__except_list:DWORD
EXTRN	__chkstk:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z:NEAR ; CDbManager::MakeRequest
EXTRN	??0CAr@@QAE@PAXI@Z:NEAR				; CAr::CAr
EXTRN	??1CAr@@QAE@XZ:NEAR				; CAr::~CAr
EXTRN	?ReadString@CAr@@QAEPADPADH@Z:NEAR		; CAr::ReadString
;	COMDAT xdata$x
xdata$x	SEGMENT
$T190548 DD	0ffffffffH
	DD	FLAT:$L190536
$T190541 DD	019930520H
	DD	01H
	DD	FLAT:$T190548
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_arRead$ = -16508					; size = 16404
_szPassword$ = -104					; size = 42
_szAccount$ = -60					; size = 42
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR ; CDPLoginSrvr::OnCreatePlayer, COMDAT
; _this$ = ecx

; 134  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 70 40 00 00	 mov	 eax, 16496		; 00004070H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx

; 135  : #ifdef __SECURITY_FIXES
; 136  : 	CAr arRead(lpBuf,uBufSize);

  00027	8b 9c 24 90 40
	00 00		 mov	 ebx, DWORD PTR _uBufSize$[esp+16508]
  0002e	55		 push	 ebp
  0002f	8b ac 24 90 40
	00 00		 mov	 ebp, DWORD PTR _lpBuf$[esp+16512]
  00036	57		 push	 edi
  00037	53		 push	 ebx
  00038	55		 push	 ebp
  00039	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+16528]
  0003d	89 84 24 80 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16528], eax
  00044	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 137  : 	char szAccount[MAX_ACCOUNT] = {0,};

  00049	33 c0		 xor	 eax, eax
  0004b	c6 84 24 4c 40
	00 00 00	 mov	 BYTE PTR _szAccount$[esp+16520], 0
  00053	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00058	8d bc 24 4d 40
	00 00		 lea	 edi, DWORD PTR _szAccount$[esp+16521]
  0005f	f3 ab		 rep stosd
  00061	aa		 stosb

; 138  : 	char szPassword[MAX_PASSWORD] = {0,};

  00062	33 c0		 xor	 eax, eax
  00064	c6 84 24 20 40
	00 00 00	 mov	 BYTE PTR _szPassword$[esp+16520], 0
  0006c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00071	8d bc 24 21 40
	00 00		 lea	 edi, DWORD PTR _szPassword$[esp+16521]
  00078	f3 ab		 rep stosd
  0007a	aa		 stosb

; 139  : 	arRead.ReadString(szAccount,MAX_ACCOUNT);

  0007b	6a 2a		 push	 42			; 0000002aH
  0007d	8d 84 24 50 40
	00 00		 lea	 eax, DWORD PTR _szAccount$[esp+16524]
  00084	50		 push	 eax
  00085	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+16528]
  00089	c7 84 24 8c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16536], 0
  00094	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 140  : 	arRead.ReadString(szPassword,MAX_PASSWORD);

  00099	6a 2a		 push	 42			; 0000002aH
  0009b	8d 8c 24 24 40
	00 00		 lea	 ecx, DWORD PTR _szPassword$[esp+16524]
  000a2	51		 push	 ecx
  000a3	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+16528]
  000a7	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 141  : 	if(!prj.IsAllowedLetter(szAccount,FALSE) || 
; 142  : 		!prj.IsAllowedLetter(szPassword,FALSE))

  000ac	6a 00		 push	 0
  000ae	8d 94 24 50 40
	00 00		 lea	 edx, DWORD PTR _szAccount$[esp+16524]
  000b5	52		 push	 edx
  000b6	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000bb	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000c0	85 c0		 test	 eax, eax
  000c2	74 77		 je	 SHORT $L189638
  000c4	6a 00		 push	 0
  000c6	8d 84 24 24 40
	00 00		 lea	 eax, DWORD PTR _szPassword$[esp+16524]
  000cd	50		 push	 eax
  000ce	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000d3	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000d8	85 c0		 test	 eax, eax
  000da	74 5f		 je	 SHORT $L189638

; 145  : 	}
; 146  : #endif // __SECURITY_FIXES
; 147  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus = g_DbManager.AllocRequest();

  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  000e2	56		 push	 esi
  000e3	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 148  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  000ee	53		 push	 ebx
  000ef	8b f0		 mov	 esi, eax
  000f1	55		 push	 ebp
  000f2	56		 push	 esi
  000f3	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 149  : 	lpDbOverlappedPlus->dpid = dpid;

  000f8	8b 8c 24 94 40
	00 00		 mov	 ecx, DWORD PTR _dpid$[esp+16520]

; 150  : 	lpDbOverlappedPlus->nQueryMode = CREATEPLAYER;
; 151  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGet, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  000ff	56		 push	 esi
  00100	89 8e a8 00 00
	00		 mov	 DWORD PTR [esi+168], ecx
  00106	c7 46 14 03 00
	00 00		 mov	 DWORD PTR [esi+20], 3
  0010d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00113	8b 82 48 03 00
	00		 mov	 eax, DWORD PTR [edx+840]
  00119	6a 00		 push	 0
  0011b	6a 01		 push	 1
  0011d	50		 push	 eax
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16

; 152  : }

  00124	8d 4c 24 10	 lea	 ecx, DWORD PTR _arRead$[esp+16524]
  00128	c7 84 24 88 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16532], -1
  00133	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  00138	5e		 pop	 esi
  00139	eb 14		 jmp	 SHORT $L189633
$L189638:

; 143  : 	{
; 144  : 		return;

  0013b	8d 4c 24 0c	 lea	 ecx, DWORD PTR _arRead$[esp+16520]
  0013f	c7 84 24 84 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16528], -1
  0014a	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L189633:

; 152  : }

  0014f	8b 8c 24 7c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16520]
  00156	5f		 pop	 edi
  00157	5d		 pop	 ebp
  00158	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0015f	8b 8c 24 70 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16512]
  00166	5b		 pop	 ebx
  00167	33 cc		 xor	 ecx, esp
  00169	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016e	81 c4 7c 40 00
	00		 add	 esp, 16508		; 0000407cH
  00174	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190536:
  00000	8d 8d 84 bf ff
	ff		 lea	 ecx, DWORD PTR _arRead$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190541
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP	; CDPLoginSrvr::OnCreatePlayer
PUBLIC	?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z	; CDPLoginSrvr::OnCloseError
EXTRN	?SendRemoveAccount@CDPAccountClient@@QAEXPAD@Z:NEAR ; CDPAccountClient::SendRemoveAccount
; Function compile flags: /Ogty
;	COMDAT ?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_lpszAccount$ = -48					; size = 42
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR ; CDPLoginSrvr::OnCloseError, COMDAT
; _this$ = ecx

; 255  : {

  00000	83 ec 30	 sub	 esp, 48			; 00000030H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	8b 54 24 34	 mov	 edx, DWORD PTR _ar$[esp+44]
  0000c	33 c4		 xor	 eax, esp
  0000e	57		 push	 edi
  0000f	89 44 24 30	 mov	 DWORD PTR __$ArrayPad$[esp+52], eax

; 256  : 	char lpszAccount[MAX_ACCOUNT]	= { 0, };

  00013	33 c0		 xor	 eax, eax
  00015	c6 44 24 04 00	 mov	 BYTE PTR _lpszAccount$[esp+52], 0
  0001a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0001f	8d 7c 24 05	 lea	 edi, DWORD PTR _lpszAccount$[esp+53]
  00023	f3 ab		 rep stosd
  00025	aa		 stosb

; 257  : 	ar.ReadString( lpszAccount, MAX_ACCOUNT );

  00026	6a 2a		 push	 42			; 0000002aH
  00028	8d 44 24 08	 lea	 eax, DWORD PTR _lpszAccount$[esp+56]
  0002c	50		 push	 eax
  0002d	8b ca		 mov	 ecx, edx
  0002f	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 258  : #ifdef __SECURITY_FIXES
; 259  : 	if(!prj.IsAllowedLetter(lpszAccount,FALSE))

  00034	6a 00		 push	 0
  00036	8d 4c 24 08	 lea	 ecx, DWORD PTR _lpszAccount$[esp+56]
  0003a	51		 push	 ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00040	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  00045	85 c0		 test	 eax, eax
  00047	5f		 pop	 edi
  00048	74 0e		 je	 SHORT $L189696

; 260  : 	{
; 261  : 		return;
; 262  : 	}
; 263  : #endif // __SECURITY_FIXES
; 264  : 	g_dpAccountClient.SendRemoveAccount( lpszAccount );

  0004a	8d 14 24	 lea	 edx, DWORD PTR _lpszAccount$[esp+48]
  0004d	52		 push	 edx
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpAccountClient@@3VCDPAccountClient@@A
  00053	e8 00 00 00 00	 call	 ?SendRemoveAccount@CDPAccountClient@@QAEXPAD@Z ; CDPAccountClient::SendRemoveAccount
$L189696:

; 265  : 
; 266  : #ifdef __INTERNALSERVER
; 267  : 	time_t cur = time(NULL);
; 268  : 	WriteLog( "CDPLoginSrvr::OnCloseError(%s) - %s\n", lpszAccount, ctime( &cur ));
; 269  : #endif
; 270  : }

  00058	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  0005c	33 cc		 xor	 ecx, esp
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	83 c4 30	 add	 esp, 48			; 00000030H
  00066	c2 10 00	 ret	 16			; 00000010H
?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP	; CDPLoginSrvr::OnCloseError
_TEXT	ENDS
PUBLIC	?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnLoginProtect
; Function compile flags: /Ogty
;	COMDAT ?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR ; CDPLoginSrvr::OnLoginProtect, COMDAT
; _this$ = ecx

; 275  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus = g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 276  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 10	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 14	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 277  : 	lpDbOverlappedPlus->dpid = dpid;

  00024	8b 54 24 0c	 mov	 edx, DWORD PTR _dpid$[esp]

; 278  : 	lpDbOverlappedPlus->nQueryMode = QM_LOGIN_PROTECT;
; 279  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGet, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00028	56		 push	 esi
  00029	89 96 a8 00 00
	00		 mov	 DWORD PTR [esi+168], edx
  0002f	c7 46 14 69 00
	00 00		 mov	 DWORD PTR [esi+20], 105	; 00000069H
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0003b	8b 88 48 03 00
	00		 mov	 ecx, DWORD PTR [eax+840]
  00041	6a 00		 push	 0
  00043	6a 01		 push	 1
  00045	51		 push	 ecx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  0004c	5e		 pop	 esi

; 280  : }

  0004d	c2 10 00	 ret	 16			; 00000010H
?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP	; CDPLoginSrvr::OnLoginProtect
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@QAE@ABKABQ8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@Z ; std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@QAE@ABKABQ8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@QAE@ABKABQ8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@Z PROC NEAR ; std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@QAE@ABKABQ8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@Z ENDP ; std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)>
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ENDP ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >::max_size
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L190153
  0000e	8b ff		 npad	 2
$L190152:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L190152
$L190153:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L190157
  0000d	8d 49 00	 npad	 3
$L190156:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L190156
$L190157:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0>
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L190189

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L190691

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L190679
  0001d	8d 49 00	 npad	 3
$L190678:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L190678
$L190679:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L190691:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L190193
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L190192:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L190193

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L190192
$L190193:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L190189:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L190708
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L190708:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L190717:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L190717
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@J@Z				; CAr::operator<<
EXTRN	?CheckBuf@CAr@@QAEXI@Z:NEAR			; CAr::CheckBuf
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??6CAr@@QAEAAV0@J@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 113  : 	{ CheckBuf( sizeof(LONG) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 114  : 		*(UNALIGNED LONG*)m_lpBufCur = l; m_lpBufCur += sizeof(LONG); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _l$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@J@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@K@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??6CAr@@QAEAAV0@K@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 116  : 	{ CheckBuf( sizeof(DWORD) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 117  : 		*(UNALIGNED DWORD*)m_lpBufCur = dw; m_lpBufCur += sizeof(DWORD); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _dw$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@K@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAK@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??5CAr@@QAEAAV0@AAK@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 146  : 	{	CAR_SAFE_READ( DWORD, dw );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L162868
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _dw$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L162868:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _dw$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAK@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	?Send@CDPMng@@QAEHPAXKK@Z			; CDPMng::Send
EXTRN	?Send@CDPSock@@QAEHPADKK@Z:NEAR			; CDPSock::Send
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
;	COMDAT ?Send@CDPMng@@QAEHPAXKK@Z
_TEXT	SEGMENT
_lpData$ = 8						; size = 4
_dwDataSize$ = 12					; size = 4
_dpidTo$ = 16						; size = 4
?Send@CDPMng@@QAEHPAXKK@Z PROC NEAR			; CDPMng::Send, COMDAT
; _this$ = ecx

; 171  : 	if( !m_pDPSock )

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 05		 jne	 SHORT $L165681

; 172  : 		return FALSE;

  00007	33 c0		 xor	 eax, eax

; 174  : }

  00009	c2 0c 00	 ret	 12			; 0000000cH
$L165681:

; 173  : 	return m_pDPSock->Send( (char*)lpData, dwDataSize, dpidTo );

  0000c	e9 00 00 00 00	 jmp	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
?Send@CDPMng@@QAEHPAXKK@Z ENDP				; CDPMng::Send
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L190735
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L190735:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L190745
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L190745:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L190755
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L190756
$L190755:
  00011	8b d0		 mov	 edx, eax
$L190756:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L185560
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L190763
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L190763:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L185560
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L185560:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ; CDPLoginSrvr::SysMessageHandler
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
;	COMDAT ?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_dwMsgSize$ = 12					; size = 4
_idFrom$ = 16						; size = 4
?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z PROC NEAR ; CDPLoginSrvr::SysMessageHandler, COMDAT
; _this$ = ecx

; 34   : 	switch( lpMsg->dwType )

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _lpMsg$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	83 e8 03	 sub	 eax, 3
  00009	74 26		 je	 SHORT $L189540
  0000b	83 e8 02	 sub	 eax, 2
  0000e	75 33		 jne	 SHORT $L190777

; 41   : 				break;
; 42   : 			}
; 43   : 		case DPSYS_DESTROYPLAYERORGROUP:
; 44   : 			{
; 45   : 				LPDPMSG_DESTROYPLAYERORGROUP lpDestroyPlayer	= (LPDPMSG_DESTROYPLAYERORGROUP)lpMsg;
; 46   : //				g_MyTrace.Add( CMyTrace::Key("Login" ), TRUE, "" );
; 47   : 				OnRemoveConnection( lpDestroyPlayer->dpId );

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dpid@@3KA ; s_dpid
  00015	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00018	75 29		 jne	 SHORT $L190777
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpAccountClient@@3VCDPAccountClient@@A
  0001f	e8 00 00 00 00	 call	 ?SendRemoveAllAccounts@CDPAccountClient@@QAEXXZ ; CDPAccountClient::SendRemoveAllAccounts
  00024	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?s_dpid@@3KA, -1 ; s_dpid

; 48   : 				break;
; 49   : 			}
; 50   : 	}
; 51   : }

  0002e	c2 0c 00	 ret	 12			; 0000000cH
$L189540:

; 35   : 	{
; 36   : 		case DPSYS_CREATEPLAYERORGROUP:
; 37   : 			{
; 38   : 				LPDPMSG_CREATEPLAYERORGROUP lpCreatePlayer	= (LPDPMSG_CREATEPLAYERORGROUP)lpMsg;
; 39   : //				g_MyTrace.Add( CMyTrace::Key("Login" ), FALSE, "" );
; 40   : 				OnAddConnection( lpCreatePlayer->dpId );

  00031	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?s_dpid@@3KA, -1 ; s_dpid
  00038	75 09		 jne	 SHORT $L190777
  0003a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0003d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_dpid@@3KA, ecx ; s_dpid
$L190777:

; 48   : 				break;
; 49   : 			}
; 50   : 	}
; 51   : }

  00043	c2 0c 00	 ret	 12			; 0000000cH
?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ENDP ; CDPLoginSrvr::SysMessageHandler
_TEXT	ENDS
PUBLIC	?SendError@CDPLoginSrvr@@QAEXJK@Z		; CDPLoginSrvr::SendError
EXTRN	?GetBuffer@CAr@@QAEPAEPAH@Z:NEAR		; CAr::GetBuffer
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T190808 DD	0ffffffffH
	DD	FLAT:$L190788
$T190805 DD	019930520H
	DD	01H
	DD	FLAT:$T190808
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendError@CDPLoginSrvr@@QAEXJK@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lError$ = 8						; size = 4
_dpid$ = 12						; size = 4
?SendError@CDPLoginSrvr@@QAEXJK@Z PROC NEAR		; CDPLoginSrvr::SendError, COMDAT
; _this$ = ecx

; 86   : {

  00000	6a ff		 push	 -1
  00002	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00008	68 00 00 00 00	 push	 __ehhandler$?SendError@CDPLoginSrvr@@QAEXJK@Z
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi

; 87   : 	BEFORESENDSOLE( ar, PACKETTYPE_ERROR, dpid );

  00027	6a 00		 push	 0
  00029	8b f1		 mov	 esi, ecx
  0002b	6a 00		 push	 0
  0002d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00031	89 84 24 24 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16436], eax
  00038	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0003d	6a 04		 push	 4
  0003f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  00043	c7 84 24 2c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16440], 0
  0004e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00053	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00057	8b 8c 24 34 40
	00 00		 mov	 ecx, DWORD PTR _dpid$[esp+16424]
  0005e	89 08		 mov	 DWORD PTR [eax], ecx
  00060	8b 54 24 10	 mov	 edx, DWORD PTR _ar$[esp+16436]
  00064	83 c2 04	 add	 edx, 4
  00067	6a 04		 push	 4
  00069	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0006d	89 54 24 14	 mov	 DWORD PTR _ar$[esp+16440], edx
  00071	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00076	8b 54 24 10	 mov	 edx, DWORD PTR _ar$[esp+16436]
  0007a	c7 02 fe 00 00
	00		 mov	 DWORD PTR [edx], 254	; 000000feH
  00080	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00084	83 c0 04	 add	 eax, 4

; 88   : 	ar << lError;

  00087	6a 04		 push	 4
  00089	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0008d	89 44 24 14	 mov	 DWORD PTR _ar$[esp+16440], eax
  00091	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00096	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  0009a	8b 8c 24 30 40
	00 00		 mov	 ecx, DWORD PTR _lError$[esp+16424]
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  000a7	83 c1 04	 add	 ecx, 4

; 89   : 	SEND( ar, this, DPID_ALLPLAYERS );

  000aa	8d 54 24 04	 lea	 edx, DWORD PTR _nBufSize$[esp+16428]
  000ae	89 4c 24 10	 mov	 DWORD PTR _ar$[esp+16436], ecx
  000b2	52		 push	 edx
  000b3	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  000b7	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000bc	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000bf	85 c9		 test	 ecx, ecx
  000c1	5e		 pop	 esi
  000c2	74 0c		 je	 SHORT $L190800
  000c4	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000c7	6a 00		 push	 0
  000c9	52		 push	 edx
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L190800:

; 90   : }

  000d0	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000d4	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000df	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000e4	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f2	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000f9	33 cc		 xor	 ecx, esp
  000fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00100	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00106	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190788:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendError@CDPLoginSrvr@@QAEXJK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190805
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendError@CDPLoginSrvr@@QAEXJK@Z ENDP			; CDPLoginSrvr::SendError
PUBLIC	?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnRemovePlayer
EXTRN	?Write@CAr@@QAEXPBXI@Z:NEAR			; CAr::Write
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T190832 DD	0ffffffffH
	DD	FLAT:$L190814
	DD	00H
	DD	FLAT:$L190815
$T190829 DD	019930520H
	DD	02H
	DD	FLAT:$T190832
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_nBlockSize$ = -32960					; size = 4
_arRead$ = -32956					; size = 16404
_ar1$ = -16552						; size = 16404
_szPassword$ = -148					; size = 42
_szAccount$ = -104					; size = 42
_szNo$ = -60						; size = 42
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR ; CDPLoginSrvr::OnRemovePlayer, COMDAT
; _this$ = ecx

; 155  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 b4 80 00 00	 mov	 eax, 32948		; 000080b4H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	55		 push	 ebp

; 156  : #ifdef __REMOVE_PLAYER_0221
; 157  : #ifdef __SECURITY_FIXES
; 158  : 	CAr arRead(lpBuf,uBufSize);

  00028	8b ac 24 d8 80
	00 00		 mov	 ebp, DWORD PTR _uBufSize$[esp+32964]
  0002f	56		 push	 esi
  00030	8b b4 24 d8 80
	00 00		 mov	 esi, DWORD PTR _lpBuf$[esp+32968]
  00037	57		 push	 edi
  00038	55		 push	 ebp
  00039	56		 push	 esi
  0003a	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32984]
  0003e	89 84 24 c8 80
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+32984], eax
  00045	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 159  : 	char szAccount[MAX_ACCOUNT] = {0,};

  0004a	33 c0		 xor	 eax, eax
  0004c	33 db		 xor	 ebx, ebx
  0004e	88 9c 24 68 80
	00 00		 mov	 BYTE PTR _szAccount$[esp+32976], bl
  00055	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005a	8d bc 24 69 80
	00 00		 lea	 edi, DWORD PTR _szAccount$[esp+32977]
  00061	f3 ab		 rep stosd
  00063	aa		 stosb

; 160  : 	char szPassword[MAX_PASSWORD] = {0,};

  00064	33 c0		 xor	 eax, eax
  00066	88 9c 24 3c 80
	00 00		 mov	 BYTE PTR _szPassword$[esp+32976], bl
  0006d	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00072	8d bc 24 3d 80
	00 00		 lea	 edi, DWORD PTR _szPassword$[esp+32977]
  00079	f3 ab		 rep stosd
  0007b	aa		 stosb

; 161  : 	char szNo[MAX_PASSWORD] = {0,};

  0007c	33 c0		 xor	 eax, eax
  0007e	88 9c 24 94 80
	00 00		 mov	 BYTE PTR _szNo$[esp+32976], bl
  00085	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0008a	8d bc 24 95 80
	00 00		 lea	 edi, DWORD PTR _szNo$[esp+32977]
  00091	f3 ab		 rep stosd
  00093	aa		 stosb

; 162  : 
; 163  : 	arRead.ReadString( szAccount,MAX_ACCOUNT );

  00094	6a 2a		 push	 42			; 0000002aH
  00096	8d 84 24 6c 80
	00 00		 lea	 eax, DWORD PTR _szAccount$[esp+32980]
  0009d	50		 push	 eax
  0009e	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32984]
  000a2	89 9c 24 d4 80
	00 00		 mov	 DWORD PTR __$EHRec$[esp+32992], ebx
  000a9	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 164  : 	arRead.ReadString( szPassword,MAX_PASSWORD );

  000ae	6a 2a		 push	 42			; 0000002aH
  000b0	8d 8c 24 40 80
	00 00		 lea	 ecx, DWORD PTR _szPassword$[esp+32980]
  000b7	51		 push	 ecx
  000b8	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32984]
  000bc	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 165  : 	arRead.ReadString( szNo, MAX_PASSWORD );

  000c1	6a 2a		 push	 42			; 0000002aH
  000c3	8d 94 24 98 80
	00 00		 lea	 edx, DWORD PTR _szNo$[esp+32980]
  000ca	52		 push	 edx
  000cb	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32984]
  000cf	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 166  : 	if(!prj.IsAllowedLetter(szAccount,FALSE) || 
; 167  : 		!prj.IsAllowedLetter(szPassword,FALSE) || 
; 168  : 		!prj.IsAllowedLetter(szNo,FALSE))

  000d4	53		 push	 ebx
  000d5	8d 84 24 6c 80
	00 00		 lea	 eax, DWORD PTR _szAccount$[esp+32980]
  000dc	50		 push	 eax
  000dd	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000e2	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000e7	85 c0		 test	 eax, eax
  000e9	0f 84 f1 00 00
	00		 je	 $L189652
  000ef	53		 push	 ebx
  000f0	8d 8c 24 40 80
	00 00		 lea	 ecx, DWORD PTR _szPassword$[esp+32980]
  000f7	51		 push	 ecx
  000f8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000fd	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  00102	85 c0		 test	 eax, eax
  00104	0f 84 d6 00 00
	00		 je	 $L189652
  0010a	53		 push	 ebx
  0010b	8d 94 24 98 80
	00 00		 lea	 edx, DWORD PTR _szNo$[esp+32980]
  00112	52		 push	 edx
  00113	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00118	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  0011d	85 c0		 test	 eax, eax
  0011f	0f 84 bb 00 00
	00		 je	 $L189652

; 169  : 	{
; 170  : 		return;
; 171  : 	}
; 172  : #endif // __SECURITY_FIXES
; 173  : 	CAr ar1;

  00125	53		 push	 ebx
  00126	53		 push	 ebx
  00127	8d 8c 24 30 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32984]
  0012e	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 174  : 	ar1 << PACKETTYPE_DEL_PLAYER;

  00133	bf 04 00 00 00	 mov	 edi, 4
  00138	57		 push	 edi
  00139	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32980]
  00140	c6 84 24 d0 80
	00 00 01	 mov	 BYTE PTR __$EHRec$[esp+32988], 1
  00148	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0014d	8b 84 24 30 40
	00 00		 mov	 eax, DWORD PTR _ar1$[esp+32984]
  00154	c7 00 f5 00 00
	00		 mov	 DWORD PTR [eax], 245	; 000000f5H
  0015a	8b 84 24 30 40
	00 00		 mov	 eax, DWORD PTR _ar1$[esp+32984]

; 175  : 	ar1.Write( lpBuf, uBufSize );

  00161	55		 push	 ebp
  00162	03 c7		 add	 eax, edi
  00164	56		 push	 esi
  00165	8d 8c 24 30 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32984]
  0016c	89 84 24 38 40
	00 00		 mov	 DWORD PTR _ar1$[esp+32992], eax
  00173	e8 00 00 00 00	 call	 ?Write@CAr@@QAEXPBXI@Z	; CAr::Write

; 176  : 	ar1 << dpid;

  00178	57		 push	 edi
  00179	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32980]
  00180	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00185	8b 8c 24 30 40
	00 00		 mov	 ecx, DWORD PTR _ar1$[esp+32984]
  0018c	8b 94 24 d8 80
	00 00		 mov	 edx, DWORD PTR _dpid$[esp+32972]
  00193	89 11		 mov	 DWORD PTR [ecx], edx
  00195	8b ac 24 30 40
	00 00		 mov	 ebp, DWORD PTR _ar1$[esp+32984]

; 177  : 	int nBlockSize;
; 178  : 	LPBYTE pBlock	= ar1.GetBuffer( &nBlockSize );

  0019c	8d 44 24 10	 lea	 eax, DWORD PTR _nBlockSize$[esp+32976]
  001a0	03 ef		 add	 ebp, edi
  001a2	50		 push	 eax
  001a3	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32980]
  001aa	89 ac 24 34 40
	00 00		 mov	 DWORD PTR _ar1$[esp+32988], ebp
  001b1	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer

; 179  : 	g_dpAccountClient.Send( pBlock, nBlockSize, DPID_SERVERPLAYER );

  001b6	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?g_dpAccountClient@@3VCDPAccountClient@@A+4
  001bc	3b cb		 cmp	 ecx, ebx
  001be	74 0d		 je	 SHORT $L190824
  001c0	8b 54 24 10	 mov	 edx, DWORD PTR _nBlockSize$[esp+32976]
  001c4	6a 01		 push	 1
  001c6	52		 push	 edx
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L190824:

; 180  : #else	// __REMOVE_PLAYER_0221
; 181  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus = g_DbManager.AllocRequest();
; 182  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );
; 183  : 	lpDbOverlappedPlus->dpid = dpid;
; 184  : 	lpDbOverlappedPlus->nQueryMode = REMOVEPLAYER;
; 185  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGet, 1, NULL, &lpDbOverlappedPlus->Overlapped );
; 186  : #endif	// __REMOVE_PLAYER_0221
; 187  : }

  001cd	8d 8c 24 28 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32976]
  001d4	88 9c 24 cc 80
	00 00		 mov	 BYTE PTR __$EHRec$[esp+32984], bl
  001db	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L189652:
  001e0	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+32976]
  001e4	c7 84 24 cc 80
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+32984], -1
  001ef	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  001f4	8b 8c 24 c4 80
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+32976]
  001fb	5f		 pop	 edi
  001fc	5e		 pop	 esi
  001fd	5d		 pop	 ebp
  001fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00205	8b 8c 24 b4 80
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+32964]
  0020c	5b		 pop	 ebx
  0020d	33 cc		 xor	 ecx, esp
  0020f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00214	81 c4 c0 80 00
	00		 add	 esp, 32960		; 000080c0H
  0021a	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190814:
  00000	8d 8d 44 7f ff
	ff		 lea	 ecx, DWORD PTR _arRead$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L190815:
  0000b	8d 8d 58 bf ff
	ff		 lea	 ecx, DWORD PTR _ar1$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190829
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP	; CDPLoginSrvr::OnRemovePlayer
PUBLIC	?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnGetPlayerList
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T190866 DD	0ffffffffH
	DD	FLAT:$L190838
	DD	00H
	DD	FLAT:$L190839
$T190863 DD	019930520H
	DD	02H
	DD	FLAT:$T190866
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_nBlockSize$ = -32916					; size = 4
_arRead$ = -32912					; size = 16404
_ar1$ = -16508						; size = 16404
_szPassword$ = -104					; size = 42
_szAccount$ = -60					; size = 42
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR ; CDPLoginSrvr::OnGetPlayerList, COMDAT
; _this$ = ecx

; 190  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 88 80 00 00	 mov	 eax, 32904		; 00008088H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	55		 push	 ebp

; 191  : #ifdef __SECURITY_FIXES
; 192  : 	CAr arRead(lpBuf,uBufSize);

  00028	8b ac 24 ac 80
	00 00		 mov	 ebp, DWORD PTR _uBufSize$[esp+32920]
  0002f	56		 push	 esi
  00030	8b b4 24 ac 80
	00 00		 mov	 esi, DWORD PTR _lpBuf$[esp+32924]
  00037	57		 push	 edi
  00038	55		 push	 ebp
  00039	56		 push	 esi
  0003a	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32940]
  0003e	89 84 24 9c 80
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+32940], eax
  00045	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 193  : 	DWORD dwAuthKey;
; 194  : 	arRead >> dwAuthKey;

  0004a	8b 44 24 1c	 mov	 eax, DWORD PTR _arRead$[esp+32940]
  0004e	8b 4c 24 20	 mov	 ecx, DWORD PTR _arRead$[esp+32944]
  00052	33 db		 xor	 ebx, ebx
  00054	83 c0 04	 add	 eax, 4
  00057	3b c1		 cmp	 eax, ecx
  00059	89 9c 24 a0 80
	00 00		 mov	 DWORD PTR __$EHRec$[esp+32940], ebx
  00060	76 02		 jbe	 SHORT $L190843
  00062	8b c1		 mov	 eax, ecx
$L190843:

; 195  : 	u_long uIdofMulti;
; 196  : 	arRead >> uIdofMulti;

  00064	83 c0 04	 add	 eax, 4
  00067	3b c1		 cmp	 eax, ecx
  00069	89 44 24 1c	 mov	 DWORD PTR _arRead$[esp+32940], eax
  0006d	76 04		 jbe	 SHORT $L190848
  0006f	89 4c 24 1c	 mov	 DWORD PTR _arRead$[esp+32940], ecx
$L190848:

; 197  : 	char szAccount[MAX_ACCOUNT] = {0,};

  00073	33 c0		 xor	 eax, eax
  00075	88 9c 24 68 80
	00 00		 mov	 BYTE PTR _szAccount$[esp+32932], bl
  0007c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00081	8d bc 24 69 80
	00 00		 lea	 edi, DWORD PTR _szAccount$[esp+32933]
  00088	f3 ab		 rep stosd
  0008a	aa		 stosb

; 198  : 	char szPassword[MAX_PASSWORD] = {0,};

  0008b	33 c0		 xor	 eax, eax
  0008d	88 9c 24 3c 80
	00 00		 mov	 BYTE PTR _szPassword$[esp+32932], bl
  00094	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00099	8d bc 24 3d 80
	00 00		 lea	 edi, DWORD PTR _szPassword$[esp+32933]
  000a0	f3 ab		 rep stosd
  000a2	aa		 stosb

; 199  : 	arRead.ReadString( szAccount, MAX_ACCOUNT );

  000a3	6a 2a		 push	 42			; 0000002aH
  000a5	8d 84 24 6c 80
	00 00		 lea	 eax, DWORD PTR _szAccount$[esp+32936]
  000ac	50		 push	 eax
  000ad	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32940]
  000b1	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 200  : 	arRead.ReadString( szPassword, MAX_PASSWORD );

  000b6	6a 2a		 push	 42			; 0000002aH
  000b8	8d 8c 24 40 80
	00 00		 lea	 ecx, DWORD PTR _szPassword$[esp+32936]
  000bf	51		 push	 ecx
  000c0	8d 4c 24 1c	 lea	 ecx, DWORD PTR _arRead$[esp+32940]
  000c4	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 201  : 	if(!prj.IsAllowedLetter(szAccount,FALSE) || 
; 202  : 		!prj.IsAllowedLetter(szPassword,FALSE))

  000c9	53		 push	 ebx
  000ca	8d 94 24 6c 80
	00 00		 lea	 edx, DWORD PTR _szAccount$[esp+32936]
  000d1	52		 push	 edx
  000d2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000d7	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000dc	85 c0		 test	 eax, eax
  000de	0f 84 d6 00 00
	00		 je	 $L189670
  000e4	53		 push	 ebx
  000e5	8d 84 24 40 80
	00 00		 lea	 eax, DWORD PTR _szPassword$[esp+32936]
  000ec	50		 push	 eax
  000ed	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000f2	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000f7	85 c0		 test	 eax, eax
  000f9	0f 84 bb 00 00
	00		 je	 $L189670

; 203  : 	{
; 204  : 		return;
; 205  : 	}
; 206  : #endif // __SECURITY_FIXES
; 207  : 	CAr ar1;

  000ff	53		 push	 ebx
  00100	53		 push	 ebx
  00101	8d 8c 24 30 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32940]
  00108	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 208  : 	ar1 << PACKETTYPE_GETPLAYERLIST;

  0010d	bf 04 00 00 00	 mov	 edi, 4
  00112	57		 push	 edi
  00113	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32936]
  0011a	c6 84 24 a4 80
	00 00 01	 mov	 BYTE PTR __$EHRec$[esp+32944], 1
  00122	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00127	8b 8c 24 30 40
	00 00		 mov	 ecx, DWORD PTR _ar1$[esp+32940]
  0012e	c7 01 f6 00 00
	00		 mov	 DWORD PTR [ecx], 246	; 000000f6H
  00134	8b 84 24 30 40
	00 00		 mov	 eax, DWORD PTR _ar1$[esp+32940]

; 209  : 	ar1.Write( lpBuf, uBufSize );

  0013b	55		 push	 ebp
  0013c	03 c7		 add	 eax, edi
  0013e	56		 push	 esi
  0013f	8d 8c 24 30 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32940]
  00146	89 84 24 38 40
	00 00		 mov	 DWORD PTR _ar1$[esp+32948], eax
  0014d	e8 00 00 00 00	 call	 ?Write@CAr@@QAEXPBXI@Z	; CAr::Write

; 210  : 	ar1 << dpid;

  00152	57		 push	 edi
  00153	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32936]
  0015a	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0015f	8b 94 24 30 40
	00 00		 mov	 edx, DWORD PTR _ar1$[esp+32940]
  00166	8b 84 24 ac 80
	00 00		 mov	 eax, DWORD PTR _dpid$[esp+32928]
  0016d	89 02		 mov	 DWORD PTR [edx], eax
  0016f	8b ac 24 30 40
	00 00		 mov	 ebp, DWORD PTR _ar1$[esp+32940]

; 211  : 	int nBlockSize;
; 212  : 	LPBYTE pBlock	= ar1.GetBuffer( &nBlockSize );

  00176	8d 4c 24 10	 lea	 ecx, DWORD PTR _nBlockSize$[esp+32932]
  0017a	51		 push	 ecx
  0017b	03 ef		 add	 ebp, edi
  0017d	8d 8c 24 2c 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32936]
  00184	89 ac 24 34 40
	00 00		 mov	 DWORD PTR _ar1$[esp+32944], ebp
  0018b	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer

; 213  : 	g_dpAccountClient.Send( pBlock, nBlockSize, DPID_SERVERPLAYER );

  00190	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?g_dpAccountClient@@3VCDPAccountClient@@A+4
  00196	3b cb		 cmp	 ecx, ebx
  00198	74 0d		 je	 SHORT $L190858
  0019a	8b 54 24 10	 mov	 edx, DWORD PTR _nBlockSize$[esp+32932]
  0019e	6a 01		 push	 1
  001a0	52		 push	 edx
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L190858:

; 214  : }

  001a7	8d 8c 24 28 40
	00 00		 lea	 ecx, DWORD PTR _ar1$[esp+32932]
  001ae	88 9c 24 a0 80
	00 00		 mov	 BYTE PTR __$EHRec$[esp+32940], bl
  001b5	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L189670:
  001ba	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+32932]
  001be	c7 84 24 a0 80
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+32940], -1
  001c9	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  001ce	8b 8c 24 98 80
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+32932]
  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5d		 pop	 ebp
  001d8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001df	8b 8c 24 88 80
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+32920]
  001e6	5b		 pop	 ebx
  001e7	33 cc		 xor	 ecx, esp
  001e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ee	81 c4 94 80 00
	00		 add	 esp, 32916		; 00008094H
  001f4	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190838:
  00000	8d 8d 70 7f ff
	ff		 lea	 ecx, DWORD PTR _arRead$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L190839:
  0000b	8d 8d 84 bf ff
	ff		 lea	 ecx, DWORD PTR _ar1$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190863
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP	; CDPLoginSrvr::OnGetPlayerList
PUBLIC	?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z	; CDPLoginSrvr::OnLeave
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
xdata$x	SEGMENT
$T190886 DD	0ffffffffH
	DD	FLAT:$L190872
$T190881 DD	019930520H
	DD	01H
	DD	FLAT:$T190886
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
_TEXT	SEGMENT
_arRead$ = -16508					; size = 16404
_lpszAccount$ = -104					; size = 42
_szAccount$ = -60					; size = 42
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_dpid$ = 12						; size = 4
_lpBuf$ = 16						; size = 4
_uBufSize$ = 20						; size = 4
?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z PROC NEAR	; CDPLoginSrvr::OnLeave, COMDAT
; _this$ = ecx

; 217  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 70 40 00 00	 mov	 eax, 16496		; 00004070H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	55		 push	 ebp
  00027	8b ac 24 8c 40
	00 00		 mov	 ebp, DWORD PTR _lpBuf$[esp+16508]
  0002e	56		 push	 esi
  0002f	8b b4 24 88 40
	00 00		 mov	 esi, DWORD PTR _ar$[esp+16512]
  00036	89 84 24 74 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16516], eax

; 218  : #ifdef __SECURITY_FIXES
; 219  : 	CAr arRead(lpBuf,uBufSize);

  0003d	8b 84 24 94 40
	00 00		 mov	 eax, DWORD PTR _uBufSize$[esp+16512]
  00044	57		 push	 edi
  00045	50		 push	 eax
  00046	55		 push	 ebp
  00047	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+16528]
  0004b	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 220  : 	char szAccount[MAX_ACCOUNT] = {0,};

  00050	c6 84 24 4c 40
	00 00 00	 mov	 BYTE PTR _szAccount$[esp+16520], 0
  00058	33 c0		 xor	 eax, eax
  0005a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005f	8d bc 24 4d 40
	00 00		 lea	 edi, DWORD PTR _szAccount$[esp+16521]
  00066	f3 ab		 rep stosd

; 221  : 	arRead.ReadString( szAccount, MAX_ACCOUNT );

  00068	6a 2a		 push	 42			; 0000002aH
  0006a	8d 8c 24 50 40
	00 00		 lea	 ecx, DWORD PTR _szAccount$[esp+16524]
  00071	51		 push	 ecx
  00072	8d 4c 24 14	 lea	 ecx, DWORD PTR _arRead$[esp+16528]
  00076	c7 84 24 8c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16536], 0
  00081	aa		 stosb
  00082	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 222  : 	if(!prj.IsAllowedLetter(szAccount,FALSE))

  00087	6a 00		 push	 0
  00089	8d 94 24 50 40
	00 00		 lea	 edx, DWORD PTR _szAccount$[esp+16524]
  00090	52		 push	 edx
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00096	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  0009b	85 c0		 test	 eax, eax

; 223  : 	{
; 224  : 		return;

  0009d	0f 84 bc 00 00
	00		 je	 $L190885

; 225  : 	}
; 226  : #endif // __SECURITY_FIXES
; 227  : 	char lpszAccount[MAX_ACCOUNT] = { 0, };

  000a3	33 c0		 xor	 eax, eax
  000a5	c6 84 24 20 40
	00 00 00	 mov	 BYTE PTR _lpszAccount$[esp+16520], 0
  000ad	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  000b2	8d bc 24 21 40
	00 00		 lea	 edi, DWORD PTR _lpszAccount$[esp+16521]
  000b9	f3 ab		 rep stosd
  000bb	aa		 stosb

; 228  : 	ar.ReadString( lpszAccount, MAX_ACCOUNT );

  000bc	6a 2a		 push	 42			; 0000002aH
  000be	8d 84 24 24 40
	00 00		 lea	 eax, DWORD PTR _lpszAccount$[esp+16524]
  000c5	50		 push	 eax
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 229  : #ifdef __SECURITY_FIXES
; 230  : 	if(!prj.IsAllowedLetter(lpszAccount,FALSE))

  000cd	6a 00		 push	 0
  000cf	8d 8c 24 24 40
	00 00		 lea	 ecx, DWORD PTR _lpszAccount$[esp+16524]
  000d6	51		 push	 ecx
  000d7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  000dc	e8 00 00 00 00	 call	 ?IsAllowedLetter@CProject@@QAEHPBDH@Z ; CProject::IsAllowedLetter
  000e1	85 c0		 test	 eax, eax

; 231  : 	{
; 232  : 		return;

  000e3	74 7a		 je	 SHORT $L190885

; 233  : 	}
; 234  : #endif // __SECURITY_FIXES
; 235  : 	g_dpAccountClient.SendRemoveAccount( lpszAccount );

  000e5	8d 94 24 20 40
	00 00		 lea	 edx, DWORD PTR _lpszAccount$[esp+16520]
  000ec	52		 push	 edx
  000ed	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpAccountClient@@3VCDPAccountClient@@A
  000f2	e8 00 00 00 00	 call	 ?SendRemoveAccount@CDPAccountClient@@QAEXPAD@Z ; CDPAccountClient::SendRemoveAccount

; 236  : 
; 237  : 	u_long idPlayer;
; 238  : 	ar >> idPlayer;

  000f7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000fa	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  000fd	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00100	3b ca		 cmp	 ecx, edx
  00102	0f 87 93 00 00
	00		 ja	 $L190875
  00108	8b 00		 mov	 eax, DWORD PTR [eax]

; 239  : 	if( idPlayer == 0 )

  0010a	85 c0		 test	 eax, eax
  0010c	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 240  : 		return;

  0010f	74 4e		 je	 SHORT $L190885

; 241  : 
; 242  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00117	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 243  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00122	8b f0		 mov	 esi, eax
  00124	8b 84 24 98 40
	00 00		 mov	 eax, DWORD PTR _uBufSize$[esp+16516]
  0012b	50		 push	 eax
  0012c	55		 push	 ebp
  0012d	56		 push	 esi
  0012e	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 244  : 	lpDbOverlappedPlus->dpid	= dpid;

  00133	8b 8c 24 90 40
	00 00		 mov	 ecx, DWORD PTR _dpid$[esp+16516]

; 245  : 	lpDbOverlappedPlus->nQueryMode = SAVE_PLAY_TIME;
; 246  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  0013a	56		 push	 esi
  0013b	89 8e a8 00 00
	00		 mov	 DWORD PTR [esi+168], ecx
  00141	c7 46 14 0b 00
	00 00		 mov	 DWORD PTR [esi+20], 11	; 0000000bH
  00148	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0014e	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00154	6a 00		 push	 0
  00156	6a 01		 push	 1
  00158	50		 push	 eax
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
$L190885:

; 247  : 
; 248  : #ifdef __INTERNALSERVER
; 249  : 	time_t cur = time(NULL);
; 250  : 	WriteLog( "CDPLoginSrvr::OnLeave(%s) - %s\n", lpszAccount, ctime( &cur ));
; 251  : #endif
; 252  : }

  0015f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _arRead$[esp+16520]
  00163	c7 84 24 84 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16528], -1
  0016e	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  00173	8b 8c 24 7c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16520]
  0017a	5f		 pop	 edi
  0017b	5e		 pop	 esi
  0017c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00183	8b 8c 24 70 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16512]
  0018a	5d		 pop	 ebp
  0018b	33 cc		 xor	 ecx, esp
  0018d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00192	81 c4 7c 40 00
	00		 add	 esp, 16508		; 0000407cH
  00198	c2 10 00	 ret	 16			; 00000010H

; 236  : 
; 237  : 	u_long idPlayer;
; 238  : 	ar >> idPlayer;

$L190875:
  0019b	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 239  : 	if( idPlayer == 0 )

  0019e	eb bf		 jmp	 SHORT $L190885
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190872:
  00000	8d 8d 84 bf ff
	ff		 lea	 ecx, DWORD PTR _arRead$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190881
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ENDP		; CDPLoginSrvr::OnLeave
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L189979
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L189978:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L189980

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L189981
$L189980:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L189981:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L189978
  00029	5b		 pop	 ebx
$L189979:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L189987

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L189987:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L189988

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L189988:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L189990

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L189990:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L189997

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L189997:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L189998

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L189998:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L190000

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L190000:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L190127

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L190127:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L191175

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L191160
$L191159:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L191159
$L191160:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L191175:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L191178
  0003d	8d 49 00	 npad	 3
$L190133:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L190134

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L190133
$L190134:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L191178

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L191178:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L191204
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L191204:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@H@Z				; CAr::operator<<
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??6CAr@@QAEAAV0@H@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 99   : 	{ return CAr::operator<<((LONG)i); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _i$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@H@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@I@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??6CAr@@QAEAAV0@I@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 101  : 	{ return CAr::operator<<((LONG)u); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _u$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@I@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L191234
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L191234:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?SendFail@CDPLoginSrvr@@QAEXJPBD@Z		; CDPLoginSrvr::SendFail
EXTRN	?WriteString@CAr@@QAEXPBD@Z:NEAR		; CAr::WriteString
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T191286 DD	0ffffffffH
	DD	FLAT:$L191259
$T191283 DD	019930520H
	DD	01H
	DD	FLAT:$T191286
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendFail@CDPLoginSrvr@@QAEXJPBD@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lError$ = 8						; size = 4
_lpszAccount$ = 12					; size = 4
?SendFail@CDPLoginSrvr@@QAEXJPBD@Z PROC NEAR		; CDPLoginSrvr::SendFail, COMDAT
; _this$ = ecx

; 93   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendFail@CDPLoginSrvr@@QAEXJPBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 38 40
	00 00		 mov	 edi, DWORD PTR _lpszAccount$[esp+16428]

; 94   : 	BEFORESENDSOLE( ar, PACKETTYPE_FAIL, DPID_UNKNOWN );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00065	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]
  00069	83 c2 04	 add	 edx, 4
  0006c	6a 04		 push	 4
  0006e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00072	89 54 24 18	 mov	 DWORD PTR _ar$[esp+16444], edx
  00076	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007b	8b 4c 24 14	 mov	 ecx, DWORD PTR _ar$[esp+16440]
  0007f	c7 01 f5 0f 00
	00		 mov	 DWORD PTR [ecx], 4085	; 00000ff5H
  00085	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  00089	83 c0 04	 add	 eax, 4

; 95   : 	ar << lError;

  0008c	6a 04		 push	 4
  0008e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00092	89 44 24 18	 mov	 DWORD PTR _ar$[esp+16444], eax
  00096	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0009b	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]
  0009f	8b 84 24 34 40
	00 00		 mov	 eax, DWORD PTR _lError$[esp+16428]
  000a6	89 02		 mov	 DWORD PTR [edx], eax
  000a8	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 96   : 	ar.WriteString( lpszAccount );

  000ad	57		 push	 edi
  000ae	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000b2	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 97   : 	SEND( ar, this, DPID_ALLPLAYERS );

  000b7	8d 4c 24 08	 lea	 ecx, DWORD PTR _nBufSize$[esp+16432]
  000bb	51		 push	 ecx
  000bc	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000c0	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000c5	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000c8	85 c9		 test	 ecx, ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	74 0c		 je	 SHORT $L191277
  000ce	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000d1	6a 00		 push	 0
  000d3	52		 push	 edx
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L191277:

; 98   : }

  000da	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000de	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000e9	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000ee	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000fc	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  00103	33 cc		 xor	 ecx, esp
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00110	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191259:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendFail@CDPLoginSrvr@@QAEXJPBD@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191283
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendFail@CDPLoginSrvr@@QAEXJPBD@Z ENDP			; CDPLoginSrvr::SendFail
PUBLIC	?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z ; CDPLoginSrvr::SendCloseExistingConnection
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T191319 DD	0ffffffffH
	DD	FLAT:$L191292
$T191316 DD	019930520H
	DD	01H
	DD	FLAT:$T191319
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszAccount$ = 8					; size = 4
_lError$ = 12						; size = 4
?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z PROC NEAR ; CDPLoginSrvr::SendCloseExistingConnection, COMDAT
; _this$ = ecx

; 101  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 34 40
	00 00		 mov	 edi, DWORD PTR _lpszAccount$[esp+16428]

; 102  : 	BEFORESENDSOLE( ar, PACKETTYPE_CLOSE_EXISTING_CONNECTION, DPID_UNKNOWN );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00065	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]
  00069	83 c2 04	 add	 edx, 4
  0006c	6a 04		 push	 4
  0006e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00072	89 54 24 18	 mov	 DWORD PTR _ar$[esp+16444], edx
  00076	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007b	8b 4c 24 14	 mov	 ecx, DWORD PTR _ar$[esp+16440]
  0007f	c7 01 16 00 00
	00		 mov	 DWORD PTR [ecx], 22	; 00000016H
  00085	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  00089	83 c0 04	 add	 eax, 4

; 103  : 	ar.WriteString( lpszAccount );

  0008c	57		 push	 edi
  0008d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00091	89 44 24 18	 mov	 DWORD PTR _ar$[esp+16444], eax
  00095	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 104  : 	ar << lError;

  0009a	6a 04		 push	 4
  0009c	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000a0	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000a5	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]
  000a9	8b 84 24 38 40
	00 00		 mov	 eax, DWORD PTR _lError$[esp+16428]
  000b0	89 02		 mov	 DWORD PTR [edx], eax
  000b2	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]

; 105  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000b6	8d 4c 24 08	 lea	 ecx, DWORD PTR _nBufSize$[esp+16432]
  000ba	83 c0 04	 add	 eax, 4
  000bd	51		 push	 ecx
  000be	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000c2	89 44 24 18	 mov	 DWORD PTR _ar$[esp+16444], eax
  000c6	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000cb	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ce	85 c9		 test	 ecx, ecx
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	74 0c		 je	 SHORT $L191309
  000d4	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000d7	6a 00		 push	 0
  000d9	52		 push	 edx
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L191309:

; 106  : }

  000e0	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000e4	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000ef	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000f4	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000fb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00102	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  00109	33 cc		 xor	 ecx, esp
  0010b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00110	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00116	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191292:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191316
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCloseExistingConnection@CDPLoginSrvr@@QAEXPBDJ@Z ENDP ; CDPLoginSrvr::SendCloseExistingConnection
PUBLIC	?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z	; CDPLoginSrvr::SendOneHourNotify
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T191349 DD	0ffffffffH
	DD	FLAT:$L191325
$T191346 DD	019930520H
	DD	01H
	DD	FLAT:$T191349
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszAccount$ = 8					; size = 4
?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z PROC NEAR	; CDPLoginSrvr::SendOneHourNotify, COMDAT
; _this$ = ecx

; 109  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 34 40
	00 00		 mov	 edi, DWORD PTR _lpszAccount$[esp+16428]

; 110  : 	BEFORESENDSOLE( ar, PACKETTYPE_ONE_HOUR_NOTIFY, DPID_UNKNOWN );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00065	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  00069	83 c0 04	 add	 eax, 4
  0006c	6a 04		 push	 4
  0006e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00072	89 44 24 18	 mov	 DWORD PTR _ar$[esp+16444], eax
  00076	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007b	8b 4c 24 14	 mov	 ecx, DWORD PTR _ar$[esp+16440]
  0007f	c7 01 17 00 00
	00		 mov	 DWORD PTR [ecx], 23	; 00000017H
  00085	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 111  : 	ar.WriteString( lpszAccount );

  0008a	57		 push	 edi
  0008b	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0008f	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 112  : 	SEND( ar, this, DPID_ALLPLAYERS );

  00094	8d 54 24 08	 lea	 edx, DWORD PTR _nBufSize$[esp+16432]
  00098	52		 push	 edx
  00099	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0009d	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000a2	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000a5	85 c9		 test	 ecx, ecx
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	74 0c		 je	 SHORT $L191339
  000ab	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000ae	6a 00		 push	 0
  000b0	52		 push	 edx
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L191339:

; 113  : }

  000b7	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000bb	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000c6	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000cb	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000d2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d9	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000e0	33 cc		 xor	 ecx, esp
  000e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e7	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  000ed	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191325:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191346
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendOneHourNotify@CDPLoginSrvr@@QAEXPBD@Z ENDP		; CDPLoginSrvr::SendOneHourNotify
PUBLIC	?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z	; CDPLoginSrvr::SendLoginProtect
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T191385 DD	0ffffffffH
	DD	FLAT:$L191355
$T191382 DD	019930520H
	DD	01H
	DD	FLAT:$T191385
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszAccount$ = 8					; size = 4
_lpszPlayer$ = 12					; size = 4
_idPlayer$ = 16						; size = 4
_bLogin$ = 20						; size = 4
_dpId$ = 24						; size = 4
?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z PROC NEAR	; CDPLoginSrvr::SendLoginProtect, COMDAT
; _this$ = ecx

; 283  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	8b 9c 24 34 40
	00 00		 mov	 ebx, DWORD PTR _lpszPlayer$[esp+16424]
  0002e	55		 push	 ebp
  0002f	56		 push	 esi
  00030	57		 push	 edi
  00031	8b bc 24 3c 40
	00 00		 mov	 edi, DWORD PTR _lpszAccount$[esp+16436]

; 284  : 	BEFORESENDSOLE( ar, PACKETTYPE_LOGIN_PROTECT_CERT, dpId );

  00038	6a 00		 push	 0
  0003a	8b f1		 mov	 esi, ecx
  0003c	6a 00		 push	 0
  0003e	8d 4c 24 1c	 lea	 ecx, DWORD PTR _ar$[esp+16448]
  00042	89 84 24 30 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16448], eax
  00049	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0004e	bd 04 00 00 00	 mov	 ebp, 4
  00053	55		 push	 ebp
  00054	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  00058	c7 84 24 38 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16452], 0
  00063	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00068	8b 44 24 1c	 mov	 eax, DWORD PTR _ar$[esp+16448]
  0006c	8b 8c 24 4c 40
	00 00		 mov	 ecx, DWORD PTR _dpId$[esp+16436]
  00073	89 08		 mov	 DWORD PTR [eax], ecx
  00075	8b 44 24 1c	 mov	 eax, DWORD PTR _ar$[esp+16448]
  00079	03 c5		 add	 eax, ebp
  0007b	55		 push	 ebp
  0007c	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  00080	89 44 24 20	 mov	 DWORD PTR _ar$[esp+16452], eax
  00084	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00089	8b 54 24 1c	 mov	 edx, DWORD PTR _ar$[esp+16448]
  0008d	c7 02 01 02 10
	88		 mov	 DWORD PTR [edx], -2012216831 ; 88100201H
  00093	01 6c 24 1c	 add	 DWORD PTR _ar$[esp+16448], ebp

; 285  : 	ar.WriteString( lpszAccount );

  00097	57		 push	 edi
  00098	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  0009c	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 286  : 	ar.WriteString( lpszPlayer );

  000a1	53		 push	 ebx
  000a2	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000a6	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 287  : 	ar << idPlayer << bLogin;

  000ab	55		 push	 ebp
  000ac	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000b0	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000b5	8b 44 24 1c	 mov	 eax, DWORD PTR _ar$[esp+16448]
  000b9	8b 8c 24 44 40
	00 00		 mov	 ecx, DWORD PTR _idPlayer$[esp+16436]
  000c0	89 08		 mov	 DWORD PTR [eax], ecx
  000c2	01 6c 24 1c	 add	 DWORD PTR _ar$[esp+16448], ebp
  000c6	55		 push	 ebp
  000c7	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000cb	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000d0	8b 54 24 1c	 mov	 edx, DWORD PTR _ar$[esp+16448]
  000d4	8b 84 24 48 40
	00 00		 mov	 eax, DWORD PTR _bLogin$[esp+16436]
  000db	89 02		 mov	 DWORD PTR [edx], eax
  000dd	8b 5c 24 1c	 mov	 ebx, DWORD PTR _ar$[esp+16448]

; 288  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000e1	8d 4c 24 10	 lea	 ecx, DWORD PTR _nBufSize$[esp+16440]
  000e5	51		 push	 ecx
  000e6	03 dd		 add	 ebx, ebp
  000e8	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000ec	89 5c 24 20	 mov	 DWORD PTR _ar$[esp+16452], ebx
  000f0	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000f5	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000f8	85 c9		 test	 ecx, ecx
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5d		 pop	 ebp
  000fd	5b		 pop	 ebx
  000fe	74 0c		 je	 SHORT $L191374
  00100	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  00103	6a 00		 push	 0
  00105	52		 push	 edx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L191374:

; 289  : }

  0010c	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  00110	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  0011b	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  00120	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0012e	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  00135	33 cc		 xor	 ecx, esp
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00142	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191355:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191382
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendLoginProtect@CDPLoginSrvr@@QAEXPBD0KHK@Z ENDP	; CDPLoginSrvr::SendLoginProtect
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::end
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::end
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L191507
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L191475:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L191477
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L191478
$L191477:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L191478:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L191475
  00029	5b		 pop	 ebx
$L191507:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
EXTRN	__CxxThrowException@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L191512
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L191512:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L191576
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L191576:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L191603
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L191603:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L191630
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L191630:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L190149
$L190147:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L190147
$L190149:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L191705

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L191705

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L191702
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L191702:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L191705:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L184993

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184993:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L184994

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L184994:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L191769

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L191734
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L191735
$L191734:
  00036	8b d3		 mov	 edx, ebx
$L191735:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L191741
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L191742
$L191741:
  00041	8b cb		 mov	 ecx, ebx
$L191742:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L191764

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L191764:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L191769:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191972 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T191974 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L191775
$T191975 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L191773
$T191973 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T191974
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T191975
$T191967 DD	019930520H
	DD	04H
	DD	FLAT:$T191972
	DD	02H
	DD	FLAT:$T191973
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L185550

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L185552
$L185550:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L185552
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L185552

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L185552:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L185554
$L191773:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L191968
  00092	c3		 ret	 0
$L191968:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L185554:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L191893

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L191888
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L191889
$L191888:
  000ae	83 c6 04	 add	 esi, 4
$L191889:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L191893:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L191935
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L191935:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L191961
  000f2	8b c2		 mov	 eax, edx
$L191961:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L191775:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L191874
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L191874:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L191971:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191967
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T191982 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L192078
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L192077:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L192079
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L192080
$L192079:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L192080:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L192077
$L192078:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L191981
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L191981
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L191981:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T191982[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T191982[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::find
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::clear
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L192308
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L192308:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L185002

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L185002:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L185003

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L185003:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L185005
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L185005
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L192322
  00047	8b de		 mov	 ebx, esi
$L192322:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L192382
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L192381
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L192381:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L192382:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L185005:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L192414

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L192411
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L192411:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L192414:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?GetHandler@CDPLoginSrvr@@AAEP81@AEXAAVCAr@@KPAEK@ZK@Z ; CDPLoginSrvr::GetHandler
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.h
;	COMDAT ?GetHandler@CDPLoginSrvr@@AAEP81@AEXAAVCAr@@KPAEK@ZK@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_dwType$ = 8						; size = 4
?GetHandler@CDPLoginSrvr@@AAEP81@AEXAAVCAr@@KPAEK@ZK@Z PROC NEAR ; CDPLoginSrvr::GetHandler, COMDAT
; _this$ = ecx

; 36   : 	USES_PFNENTRIES;

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwType$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _i$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::find
  00016	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _i$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L189321
  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L189321:
  00029	33 c0		 xor	 eax, eax
  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?GetHandler@CDPLoginSrvr@@AAEP81@AEXAAVCAr@@KPAEK@ZK@Z ENDP ; CDPLoginSrvr::GetHandler
_TEXT	ENDS
PUBLIC	?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ; CDPLoginSrvr::UserMessageHandler
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T192556 DD	0ffffffffH
	DD	FLAT:$L192470
$T192553 DD	019930520H
	DD	01H
	DD	FLAT:$T192556
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?nSize@?1??UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z@4IA
_DATA	SEGMENT
?nSize@?1??UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z@4IA DD 04H ; `CDPLoginSrvr::UserMessageHandler'::`2'::nSize
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
_DATA	ENDS
;	COMDAT ?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT
_i$192535 = -16428					; size = 4
$T192549 = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_dwMsgSize$ = 12					; size = 4
_idFrom$ = 16						; size = 4
?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z PROC NEAR ; CDPLoginSrvr::UserMessageHandler, COMDAT
; _this$ = ecx

; 54   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 20 40 00 00	 mov	 eax, 16416		; 00004020H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	8b b4 24 38 40
	00 00		 mov	 esi, DWORD PTR _lpMsg$[esp+16432]
  0002f	57		 push	 edi

; 55   : 	static size_t	nSize	= sizeof(DPID);
; 56   : 	
; 57   : 	CAr ar( (LPBYTE)lpMsg + nSize, dwMsgSize - nSize );

  00030	8b bc 24 40 40
	00 00		 mov	 edi, DWORD PTR _dwMsgSize$[esp+16436]
  00037	8b d9		 mov	 ebx, ecx
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nSize@?1??UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z@4IA
  00045	8b cf		 mov	 ecx, edi
  00047	2b c8		 sub	 ecx, eax
  00049	51		 push	 ecx
  0004a	03 c6		 add	 eax, esi
  0004c	50		 push	 eax
  0004d	8d 4c 24 1c	 lea	 ecx, DWORD PTR _ar$[esp+16448]
  00051	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 58   : 	GETTYPE( ar );

  00056	8b 4c 24 1c	 mov	 ecx, DWORD PTR _ar$[esp+16448]
  0005a	8b 54 24 20	 mov	 edx, DWORD PTR _ar$[esp+16452]
  0005e	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00061	3b c2		 cmp	 eax, edx
  00063	c7 84 24 34 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16448], 0
  0006e	77 08		 ja	 SHORT $L192473
  00070	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00072	89 44 24 1c	 mov	 DWORD PTR _ar$[esp+16448], eax
  00076	eb 06		 jmp	 SHORT $L192474
$L192473:
  00078	33 c9		 xor	 ecx, ecx
  0007a	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
$L192474:

; 59   : 	void ( theClass::*pfn )( theParameters )	=	GetHandler( dw );

  0007e	8d 54 24 10	 lea	 edx, DWORD PTR $T192549[esp+16440]
  00082	52		 push	 edx
  00083	8d 44 24 10	 lea	 eax, DWORD PTR _i$192535[esp+16444]
  00087	89 4c 24 14	 mov	 DWORD PTR $T192549[esp+16444], ecx
  0008b	50		 push	 eax
  0008c	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  0008f	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::find
  00094	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00097	8b 4c 24 0c	 mov	 ecx, DWORD PTR _i$192535[esp+16440]
  0009b	3b c8		 cmp	 ecx, eax
  0009d	74 20		 je	 SHORT $L189563
  0009f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]

; 60   : 	
; 61   : 	if( pfn ) {

  000a2	85 d2		 test	 edx, edx
  000a4	74 19		 je	 SHORT $L189563

; 62   : 		( this->*( pfn ) )( ar, *(UNALIGNED LPDPID)lpMsg, (LPBYTE)lpMsg + nSize + nSize, dwMsgSize - nSize - nSize );

  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nSize@?1??UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z@4IA
  000ab	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ad	03 c0		 add	 eax, eax
  000af	2b f8		 sub	 edi, eax
  000b1	57		 push	 edi
  000b2	03 c6		 add	 eax, esi
  000b4	50		 push	 eax
  000b5	51		 push	 ecx
  000b6	8d 44 24 20	 lea	 eax, DWORD PTR _ar$[esp+16452]
  000ba	50		 push	 eax
  000bb	8b cb		 mov	 ecx, ebx
  000bd	ff d2		 call	 edx
$L189563:

; 63   : 	}
; 64   : 	else {
; 65   : 		TRACE( "Handler not found(%08x)\n", dw );
; 66   : 	}
; 67   : }

  000bf	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  000c3	c7 84 24 34 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16448], -1
  000ce	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000d3	8b 8c 24 2c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16440]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e3	8b 8c 24 20 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16432]
  000ea	5b		 pop	 ebx
  000eb	33 cc		 xor	 ecx, esp
  000ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f2	81 c4 2c 40 00
	00		 add	 esp, 16428		; 0000402cH
  000f8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192470:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192553
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ENDP ; CDPLoginSrvr::UserMessageHandler
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L192744
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L192744:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L192770
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L192770:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192776
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192776:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L184271

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184271:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L184273

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L184273:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L184274

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L184274:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L192926
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L192926:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L192927
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L192972:
  0006b	76 6d		 jbe	 SHORT $L192971

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L192937
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L192938

; 599  : 		else if (_Grow(_Num))

$L192927:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L192972
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L192919
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L192919:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L192937:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L192938:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L192943
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L192944
$L192943:
  000b7	8b f8		 mov	 edi, eax
$L192944:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L192966
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L192966:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L192971:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L192996
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L192997
$L192996:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L192997:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L184989
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L193000
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L193001
$L193000:
  00029	8b c8		 mov	 ecx, eax
$L193001:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L184989

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L193009
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L193009:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L184989:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L193150
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L193150:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L193151
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L193189:
  00077	76 68		 jbe	 SHORT $L193186

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L193160
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L193161

; 611  : 
; 612  : 		if (_Grow(_Num))

$L193151:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L193189
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L193143
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L193143:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L193160:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L193161:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L193182
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L193182:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L193186:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L193261:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L193261
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T193364 DD	0ffffffffH
	DD	FLAT:$L193264
$T193362 DD	019930520H
	DD	01H
	DD	FLAT:$T193364
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193264:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193362
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L193372
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L193372:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L193465
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L193465:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L193483
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L193483:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L193580
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L193580:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L193663:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L193663
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Insert
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T194038 DD	0ffffffffH
	DD	FLAT:$L193668
$T194033 DD	019930520H
	DD	01H
	DD	FLAT:$T194038
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT
$T193667 = -80						; size = 28
$T193666 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L189870

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T193667[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T193667[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T193667[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T193667[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T193667[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T193666[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T193666[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T193666[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L189870:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L189875

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L189880
$L189875:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L189877

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L189880

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L189880
$L189877:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L189880

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L189880:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L189884
  000e5	55		 push	 ebp
$L189883:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L189885

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L189886
$L194037:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L189891
$L189886:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L189888

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate
$L189888:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L189891
$L189885:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L194037

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L189892

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate
$L189892:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate
$L189891:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L189883
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L189884:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L194036:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193668:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T193667[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194033
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T194143 DD	0ffffffffH
	DD	FLAT:$L194043
$T194141 DD	019930520H
	DD	01H
	DD	FLAT:$T194143
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194043:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194141
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T194643 DD	0ffffffffH
	DD	FLAT:$L194157
$T194635 DD	019930520H
	DD	01H
	DD	FLAT:$T194643
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T194152 = -80						; size = 28
$T194151 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L190041

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T194152[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T194152[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T194152[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T194152[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T194152[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T194151[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T194151[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T194151[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L190041:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L190049

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L194638
$L190049:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L190051

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L194638
$L190051:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L190053
$L194638:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L190054

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L190054:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L190055

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L190058
$L190055:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L190057

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L190058
$L190057:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L190058:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L190059

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L194153
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L194154
$L194153:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L194154:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L190059:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L194471

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L194155
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L194471
$L194155:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L194471
$L190053:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L190062

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L190063
$L190062:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L190064

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L190064:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L190063:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L190065

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L190068
$L190065:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L190067

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L190068
$L190067:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L190068:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L194471:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L190069

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L190072
  0018e	8b ff		 npad	 2
$L190070:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L190072

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L190073

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L190074

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L190074:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L194641

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L190077
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L194642
$L190077:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L190079

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L190079:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L190072
$L190073:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L190081

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L190081:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L194641

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L190084
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L190084
$L194642:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L194641:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L190070

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L190072
$L190084:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L190086

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L190086:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Rrotate
$L190072:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L190069:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L190087

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L190087:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L194640:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194157:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T194152[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194635
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T194659 = 12						; size = 4
$T194657 = 12						; size = 4
__Where$189779 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L189769
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L189768:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L194651
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L194652
$L194651:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L194652:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L189768
$L189769:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$189779[esp+12], edx
  00045	74 33		 je	 SHORT $L194751

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T194657[esp+12]
  00050	75 1f		 jne	 SHORT $L189784
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L189784:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$189779[esp+12]
$L194751:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L189789

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T194659[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L189789:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T194790 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L195122
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L195122

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L195122:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L189968
$L189967:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L195114
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L195124
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L195114
  0006e	8b ff		 npad	 2
$L195102:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L195102
  0007b	eb 1d		 jmp	 SHORT $L195114
$L195124:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L195117
$L195116:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L195117
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L195116
$L195117:
  00098	8b f0		 mov	 esi, eax
$L195114:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T194790[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L189967
$L189968:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T195132 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T195132[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T195261 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T195261[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T195388 = -4						; size = 4
??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T195388[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >
_TEXT	ENDS
PUBLIC	??1CDPLoginSrvr@@UAE@XZ				; CDPLoginSrvr::~CDPLoginSrvr
PUBLIC	??_7CDPLoginSrvr@@6B@				; CDPLoginSrvr::`vftable'
PUBLIC	??_GCDPLoginSrvr@@UAEPAXI@Z			; CDPLoginSrvr::`scalar deleting destructor'
EXTRN	??1CDPMng@@UAE@XZ:NEAR				; CDPMng::~CDPMng
EXTRN	??_ECDPLoginSrvr@@UAEPAXI@Z:NEAR		; CDPLoginSrvr::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T195580 DD	0ffffffffH
	DD	FLAT:$L195415
$T195578 DD	019930520H
	DD	01H
	DD	FLAT:$T195580
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CDPLoginSrvr@@6B@
CONST	SEGMENT
??_7CDPLoginSrvr@@6B@ DD FLAT:??_ECDPLoginSrvr@@UAEPAXI@Z ; CDPLoginSrvr::`vftable'
	DD	FLAT:?SysMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
	DD	FLAT:?UserMessageHandler@CDPLoginSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
CONST	ENDS
;	COMDAT ??1CDPLoginSrvr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T195551 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDPLoginSrvr@@UAE@XZ PROC NEAR			; CDPLoginSrvr::~CDPLoginSrvr, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CDPLoginSrvr@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	89 7c 24 08	 mov	 DWORD PTR _this$[esp+28], edi
  00020	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET FLAT:??_7CDPLoginSrvr@@6B@

; 29   : 
; 30   : }

  00026	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  0002e	50		 push	 eax
  0002f	51		 push	 ecx
  00030	8d 44 24 14	 lea	 eax, DWORD PTR $T195551[esp+36]
  00034	50		 push	 eax
  00035	8b ce		 mov	 ecx, esi
  00037	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::erase
  00044	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b cf		 mov	 ecx, edi
  00052	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00059	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00060	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00068	e8 00 00 00 00	 call	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
  0006d	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L195415:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
__ehhandler$??1CDPLoginSrvr@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T195578
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CDPLoginSrvr@@UAE@XZ ENDP				; CDPLoginSrvr::~CDPLoginSrvr
PUBLIC	??0?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> > >
_TEXT	ENDS
PUBLIC	??0CDPLoginSrvr@@QAE@XZ				; CDPLoginSrvr::CDPLoginSrvr
EXTRN	??0CDPMng@@QAE@XZ:NEAR				; CDPMng::CDPMng
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T196007 DD	0ffffffffH
	DD	FLAT:$L195770
	DD	00H
	DD	FLAT:$L195771
$T196005 DD	019930520H
	DD	02H
	DD	FLAT:$T196007
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dploginsrvr.cpp
xdata$x	ENDS
;	COMDAT ??0CDPLoginSrvr@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T195767 = -28						; size = 8
$T195764 = -28						; size = 8
$T195761 = -28						; size = 8
$T195758 = -28						; size = 8
$T195755 = -28						; size = 8
$T195752 = -28						; size = 8
$T195769 = -20						; size = 8
$T195766 = -20						; size = 8
$T195763 = -20						; size = 8
$T195760 = -20						; size = 8
$T195757 = -20						; size = 8
$T195754 = -20						; size = 8
__$EHRec$ = -12						; size = 12
??0CDPLoginSrvr@@QAE@XZ PROC NEAR			; CDPLoginSrvr::CDPLoginSrvr, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CDPLoginSrvr@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 14	 sub	 esp, 20			; 00000014H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	89 7c 24 08	 mov	 DWORD PTR _this$[esp+40], edi
  00020	e8 00 00 00 00	 call	 ??0CDPMng@@QAE@XZ	; CDPMng::CDPMng
  00025	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  00028	8b ce		 mov	 ecx, esi
  0002a	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  00032	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET FLAT:??_7CDPLoginSrvr@@6B@
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::_Buynode
  0003d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00040	b1 01		 mov	 cl, 1
  00042	88 48 15	 mov	 BYTE PTR [eax+21], cl
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	89 00		 mov	 DWORD PTR [eax], eax
  00050	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00053	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00056	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0005d	88 4c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], cl

; 16   : 	BEGIN_MSG;
; 17   : 	ON_MSG( PACKETTYPE_GETPLAYERLIST, OnGetPlayerList );

  00061	8d 44 24 0c	 lea	 eax, DWORD PTR $T195752[esp+40]
  00065	50		 push	 eax
  00066	8d 4c 24 18	 lea	 ecx, DWORD PTR $T195754[esp+44]
  0006a	51		 push	 ecx
  0006b	8b ce		 mov	 ecx, esi
  0006d	c7 44 24 14 f6
	00 00 00	 mov	 DWORD PTR $T195752[esp+48], 246 ; 000000f6H
  00075	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195752[esp+52], OFFSET FLAT:?OnGetPlayerList@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnGetPlayerList
  0007d	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 18   : 	ON_MSG( PACKETTYPE_CREATE_PLAYER, OnCreatePlayer );

  00082	8d 54 24 0c	 lea	 edx, DWORD PTR $T195755[esp+40]
  00086	52		 push	 edx
  00087	8d 44 24 18	 lea	 eax, DWORD PTR $T195757[esp+44]
  0008b	50		 push	 eax
  0008c	8b ce		 mov	 ecx, esi
  0008e	c7 44 24 14 f4
	00 00 00	 mov	 DWORD PTR $T195755[esp+48], 244 ; 000000f4H
  00096	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195755[esp+52], OFFSET FLAT:?OnCreatePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnCreatePlayer
  0009e	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 19   : 	ON_MSG( PACKETTYPE_DEL_PLAYER, OnRemovePlayer );

  000a3	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T195758[esp+40]
  000a7	51		 push	 ecx
  000a8	8d 54 24 18	 lea	 edx, DWORD PTR $T195760[esp+44]
  000ac	52		 push	 edx
  000ad	8b ce		 mov	 ecx, esi
  000af	c7 44 24 14 f5
	00 00 00	 mov	 DWORD PTR $T195758[esp+48], 245 ; 000000f5H
  000b7	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195758[esp+52], OFFSET FLAT:?OnRemovePlayer@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnRemovePlayer
  000bf	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 20   : 	ON_MSG( PACKETTYPE_LEAVE, OnLeave );

  000c4	8d 44 24 0c	 lea	 eax, DWORD PTR $T195761[esp+40]
  000c8	50		 push	 eax
  000c9	8d 4c 24 18	 lea	 ecx, DWORD PTR $T195763[esp+44]
  000cd	51		 push	 ecx
  000ce	8b ce		 mov	 ecx, esi
  000d0	c7 44 24 14 01
	ff 00 00	 mov	 DWORD PTR $T195761[esp+48], 65281 ; 0000ff01H
  000d8	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195761[esp+52], OFFSET FLAT:?OnLeave@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnLeave
  000e0	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 21   : 	ON_MSG( PACKETTYPE_CLOSE_ERROR, OnCloseError );

  000e5	8d 54 24 0c	 lea	 edx, DWORD PTR $T195764[esp+40]
  000e9	52		 push	 edx
  000ea	8d 44 24 18	 lea	 eax, DWORD PTR $T195766[esp+44]
  000ee	50		 push	 eax
  000ef	8b ce		 mov	 ecx, esi
  000f1	c7 44 24 14 04
	ff 00 00	 mov	 DWORD PTR $T195764[esp+48], 65284 ; 0000ff04H
  000f9	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195764[esp+52], OFFSET FLAT:?OnCloseError@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnCloseError
  00101	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 22   : #if __VER >= 15 // __2ND_PASSWORD_SYSTEM
; 23   : 	ON_MSG( PACKETTYPE_LOGIN_PROTECT_CERT, OnLoginProtect );

  00106	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T195767[esp+40]
  0010a	51		 push	 ecx
  0010b	8d 54 24 18	 lea	 edx, DWORD PTR $T195769[esp+44]
  0010f	52		 push	 edx
  00110	8b ce		 mov	 ecx, esi
  00112	c7 44 24 14 01
	02 10 88	 mov	 DWORD PTR $T195767[esp+48], -2012216831 ; 88100201H
  0011a	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR $T195767[esp+52], OFFSET FLAT:?OnLoginProtect@CDPLoginSrvr@@QAEXAAVCAr@@KPAEK@Z ; CDPLoginSrvr::OnLoginProtect
  00122	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPLoginSrvr::*)(CAr &,unsigned long,unsigned char *,unsigned long)> >,0> >::insert

; 24   : #endif // __2ND_PASSWORD_SYSTEM
; 25   : }

  00127	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  0012b	8b c7		 mov	 eax, edi
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00136	83 c4 20	 add	 esp, 32			; 00000020H
  00139	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L195770:
  00000	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
$L195771:
  00008	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$map@KP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPLoginSrvr@@AEXAAVCAr@@KPAEK@Z@std@@@4@@std@@QAE@XZ
__ehhandler$??0CDPLoginSrvr@@QAE@XZ:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196005
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDPLoginSrvr@@QAE@XZ ENDP				; CDPLoginSrvr::CDPLoginSrvr
; Function compile flags: /Ogty
;	COMDAT ??_GCDPLoginSrvr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDPLoginSrvr@@UAEPAXI@Z PROC NEAR			; CDPLoginSrvr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CDPLoginSrvr@@UAE@XZ	; CDPLoginSrvr::~CDPLoginSrvr
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L196012
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L196012:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCDPLoginSrvr@@UAEPAXI@Z ENDP			; CDPLoginSrvr::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:NEAR
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Ogty
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 292  : CDPLoginSrvr	g_dpLoginSrvr;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpLoginSrvr@@3VCDPLoginSrvr@@A
  00005	e8 00 00 00 00	 call	 ??0CDPLoginSrvr@@QAE@XZ	; CDPLoginSrvr::CDPLoginSrvr
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
_$E1	ENDP
; Function compile flags: /Ogty
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpLoginSrvr@@3VCDPLoginSrvr@@A
  00005	e9 00 00 00 00	 jmp	 ??1CDPLoginSrvr@@UAE@XZ	; CDPLoginSrvr::~CDPLoginSrvr
_$E2	ENDP
text$yd	ENDS
PUBLIC	?g_dpLoginSrvr@@3VCDPLoginSrvr@@A		; g_dpLoginSrvr
_BSS	SEGMENT
?g_dpLoginSrvr@@3VCDPLoginSrvr@@A DB 01cH DUP (?)	; g_dpLoginSrvr
_BSS	ENDS
END
