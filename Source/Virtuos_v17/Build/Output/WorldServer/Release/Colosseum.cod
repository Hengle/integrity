; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	\Documents and Settings\test\Mes documents\Source\Virtuos_v17\Build\Program\_Common\Colosseum.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0O@LDNHLNNB@Colosseum?4lua?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@MPJHADAM@Colosseum?4lua?5Load?5Failed?$CB?$CB?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@LCKPEMLD@StartWaitTime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@FHAALCDJ@WaitAfterStage?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HHJPKIBP@LowStages?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@IGABJCKB@HardStages?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08EABLEDPJ@tMonster?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIBMDPLN@strFakeMonsterId?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDCEDDIK@strTrueMonsterId?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KPPLCGGF@nTime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06OJNKPJEO@nStage?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05OLBMEBNJ@nType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05JBKGBCJC@nProb?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ?SelectMemberClear@__GuildCombatMember@CGuildCombat@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0__MINIGAME_PACKET@@QAE@GHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@__MINIGAME_PACKET@@UAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@__MINIGAME_EXT_PACKET@@UAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MINIGMAME_PRIZE_LIST@CRainbowRaceMng@@QAE@KHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CColosseumMng@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCColosseumMng@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CColosseumMng@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInstance@CColosseumMng@@SAPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadScript@CColosseumMng@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyMatch@CColosseumMng@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Process@CColosseumMng@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMatchByMoverID@CColosseumMng@@QAEPAVCColosseumMatch@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CColosseumMatch@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCColosseumMatch@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CColosseumMatch@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Process@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateMover@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateRoomLayer@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUser@CColosseumMatch@@QAEPAVCUser@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterRoom@CColosseumMatch@@QAEXPAVCUser@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?KickUser@CColosseumMatch@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndWaitTime@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyMover@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndMatch@CColosseumMatch@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsTeleported@CColosseumMatch@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsFull@?$CStack@K@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@@std@@QAEAAPAVCCtrl@@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCCtrl@@@std@@QAE@ABKABQAVCCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?at@?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMax@?$CItemContainer@VCItemElem@@@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEAAPAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEAAPAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?at@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuild@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuild@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEAAPAU__JOINPLAYER@CGuildCombat@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAU_PlayerData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAU_PlayerData@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAEXABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCRainbowRace@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCRainbowRace@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAEAAPAVCMiniGameBase@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAEAAUGuildHouse_Furniture_Info@CGuildHouseBase@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCCtrl@@@std@@QAE@ABKABQAVCCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEABQAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEABQAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__COLOSSEUM_MONSTER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__SECRETROOM_MONSTER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__SECRETROOM_MONSTER@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@V312@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@V312@ABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU34@IABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEAAU__COLOSSEUM_MONSTER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEAAPAU__JOINPLAYER@CGuildCombat@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEAAPAVCMiniGameBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEAAUGuildHouse_Furniture_Info@CGuildHouseBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCColosseumMatch@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXPAU__COLOSSEUM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEPAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@IAEXPAPAU__JOINPLAYER@CGuildCombat@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@QAEXPAPAU__JOINPLAYER@CGuildCombat@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAEXPAU__SECRETROOM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__SECRETROOM_MONSTER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEXPAU__SECRETROOM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEPAU__SECRETROOM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXViterator@12@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEXViterator@12@IABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCGuildHouseBase@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEABU__COLOSSEUM_MONSTER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE@PAPAU__JOINPLAYER@CGuildCombat@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEABQAU__JOINPLAYER@CGuildCombat@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE@PAPAVCMiniGameBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEABQAVCMiniGameBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE@PAUGuildHouse_Furniture_Info@CGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEABUGuildHouse_Furniture_Info@CGuildHouseBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U__SECRETROOM_MONSTER@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE@PAPAU__JOINPLAYER@CGuildCombat@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE@PAPAVCMiniGameBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE@PAUGuildHouse_Furniture_Info@CGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKU_Friend@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKU_Friend@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABVconst_iterator@?$vector@EV?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Assign@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__SPAWNREGION@CEventLua@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAU__SPAWNREGION@CEventLua@@IU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@IABU12@AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUWORMON@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWORMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UWORMON@@V?$allocator@UWORMON@@@std@@@std@@YAXPAUWORMON@@0AAV?$allocator@UWORMON@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEMGAME@CMiniGame@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEMGAME@CMiniGame@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEMGAME@CMiniGame@@V?$allocator@U__ITEMGAME@CMiniGame@@@std@@@std@@YAXPAU__ITEMGAME@CMiniGame@@0AAV?$allocator@U__ITEMGAME@CMiniGame@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@HV?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEM@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEM@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEM@CExchange@@V?$allocator@U__ITEM@CExchange@@@std@@@std@@YAXPAU__ITEM@CExchange@@0AAV?$allocator@U__ITEM@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__POINT@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__POINT@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__POINT@CExchange@@V?$allocator@U__POINT@CExchange@@@std@@@std@@YAXPAU__POINT@CExchange@@0AAV?$allocator@U__POINT@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUD3DXVECTOR3@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@0AAV?$allocator@UD3DXVECTOR3@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_GIFTBOX@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_GIFTBOX@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U_GIFTBOX@@V?$allocator@U_GIFTBOX@@@std@@@std@@YAXPAU_GIFTBOX@@0AAV?$allocator@U_GIFTBOX@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SPAWNREGION@CEventLua@@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@0AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$make_pair@KPAVCGuildHouseBase@@@std@@YA?AU?$pair@KPAVCGuildHouseBase@@@0@KPAVCGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0KPAVCGuildHouseBase@@@?$pair@$$CBKPAVCGuildHouseBase@@@std@@QAE@ABU?$pair@KPAVCGuildHouseBase@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CFixedArray@UtagWORLD@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@?$CFixedArray@UtagWORLD@@@@QAEPAUtagWORLD@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$make_pair@KPAVCColosseumMatch@@@std@@YA?AU?$pair@KPAVCColosseumMatch@@@0@KPAVCColosseumMatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0KPAVCColosseumMatch@@@?$pair@$$CBKPAVCColosseumMatch@@@std@@QAE@ABU?$pair@KPAVCColosseumMatch@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@Vconst_iterator@01@0PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IABU12@AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAKK@std@@YAXPAK0ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagACTMSG@@@?$allocator@PAPAUtagACTMSG@@@std@@QAE@ABV?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagACTMSG@@@std@@YAXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagMAGICATKMSG@@@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAE@ABV?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagMAGICATKMSG@@@std@@YAXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAU__COLOSSEUM_MONSTER@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U__COLOSSEUM_MONSTER@@@std@@YAPAU__COLOSSEUM_MONSTER@@IPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@YAXPAPAU__JOINPLAYER@CGuildCombat@@0AAV?$allocator@PAU__JOINPLAYER@CGuildCombat@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@YAXPAU__SECRETROOM_MONSTER@@0AAV?$allocator@U__SECRETROOM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U__SECRETROOM_MONSTER@@@std@@YAPAU__SECRETROOM_MONSTER@@IPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU23@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@U12@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagACTMSG@@@std@@YAXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagMAGICATKMSG@@@std@@YAXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IPAU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CFixedArray@UtagWORLD@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UWORMON@@@std@@QAEXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEMGAME@CMiniGame@@@std@@QAEXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEM@CExchange@@@std@@QAEXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__POINT@CExchange@@@std@@QAEXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@ABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UD3DXVECTOR3@@@std@@QAEXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_GIFTBOX@@@std@@QAEXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCGuildHouseBase@@@std@@QAE@ABKABQAVCGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCColosseumMatch@@@std@@QAE@ABKABQAVCColosseumMatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@AAPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__COLOSSEUM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IABU12@AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@U__JOINPLAYER@CGuildCombat@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU__JOINPLAYER@CGuildCombat@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@YAXPAPAU__JOINPLAYER@CGuildCombat@@0AAV?$allocator@PAU__JOINPLAYER@CGuildCombat@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__SECRETROOM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__SECRETROOM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@YAXPAU__SECRETROOM_MONSTER@@0AAV?$allocator@U__SECRETROOM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UWORMON@@@std@@YAXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEMGAME@CMiniGame@@@std@@YAXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEM@CExchange@@@std@@YAXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__POINT@CExchange@@@std@@YAXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@U__SPAWNREGION@CEventLua@@U12@@std@@YAXPAU__SPAWNREGION@CEventLua@@ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__SPAWNREGION@CEventLua@@@std@@YAXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UD3DXVECTOR3@@@std@@YAXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_GIFTBOX@@@std@@YAXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@E@std@@QAEXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@E@std@@QAEXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEXPAU__SECRETROOM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@ABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@AAPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAKIK@std@@YAXPAKIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@EE@std@@YAXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@E@std@@YAXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@U__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__COLOSSEUM_MONSTER@@@std@@YAXPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__SECRETROOM_MONSTER@@@std@@YAXPAU__SECRETROOM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@U12@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEU_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@EE@std@@YAPAEPAE00AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEVconst_iterator@01@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CFixedArray@UtagWORLD@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCtrl@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCtrl@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCtrl@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTextColor@CProject@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LOG_RANGE@@YAXPBDHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetSize@?$CFixedArray@UtagColorText@@@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetAt@?$CFixedArray@UtagColorText@@@@QAEPAUtagColorText@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetID@CWorld@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetId@CCtrl@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMoverPropEx@CProject@@QAEPAUMoverProp@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@GKPOBPPI@GetMoverProp?5range_error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Invalidate@CWorld@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CColosseumMatch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?TableLoop@CLuaBase@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PushNil@CLuaBase@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGloabal@CLuaBase@@QAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValidObj@@YAHPAVCObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDelete@CObj@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPartyId@CMover@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_7CColosseumMng@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5@YAAAVCAr@@AAV0@AAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?time_null@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6@YAAAVCAr@@AAV0@UD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7__MINIGAME_EXT_PACKET@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7__MINIGAME_PACKET@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsStoring@CAr@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTickCount@CTime@ATL@@SG?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetThreadLocale@0:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	33 c4		 xor	 eax, esp
  0000a	56		 push	 esi
  0000b	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000f	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00017	6a 07		 push	 7
  00019	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001d	51		 push	 ecx
  0001e	68 04 10 00 00	 push	 4100			; 00001004H
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  0002a	85 c0		 test	 eax, eax
  0002c	74 27		 je	 SHORT $L260303

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002e	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00032	84 c0		 test	 al, al
  00034	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00038	74 1b		 je	 SHORT $L260303
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L38556:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00040	0f be c0	 movsx	 eax, al
  00043	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  00046	41		 inc	 ecx
  00047	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  0004b	8a 01		 mov	 al, BYTE PTR [ecx]
  0004d	84 c0		 test	 al, al
  0004f	75 ef		 jne	 SHORT $L38556

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00051	85 f6		 test	 esi, esi
  00053	75 16		 jne	 SHORT $L260304
$L260303:

; 121  : 		nACP = ::GetACP();

  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  0005b	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  0005c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00060	33 cc		 xor	 ecx, esp
  00062	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	c3		 ret	 0
$L260304:
  0006b	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  0006f	8b c6		 mov	 eax, esi
  00071	5e		 pop	 esi
  00072	33 cc		 xor	 ecx, esp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007c	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00014	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00017	50		 push	 eax
  00018	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00026	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  0002b	75 0c		 jne	 SHORT $L38566
  0002d	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00032	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00037	73 05		 jae	 SHORT $L38567
$L38566:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00039	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L38567:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  00050	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00057	33 cc		 xor	 ecx, esp
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00064	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 158  : 	return( g_pfnGetThreadACP() );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	3d 0e 00 07 80	 cmp	 eax, -2147024882	; 8007000eH
  00009	75 05		 jne	 SHORT $L39168

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

  0000b	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$L260327:
$L39168:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$L260328:
$L260326:
  00016	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
EXTRN	__imp__LockResource@4:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

  00000	53		 push	 ebx

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _hInstance$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR _hResource$[esp+4]
  0000a	57		 push	 edi
  0000b	53		 push	 ebx
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8

; 247  : 	if( hGlobal == NULL )

  00012	85 c0		 test	 eax, eax
  00014	75 03		 jne	 SHORT $L39522
  00016	5f		 pop	 edi
  00017	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  00018	c3		 ret	 0
$L39522:
  00019	56		 push	 esi

; 248  : 	{
; 249  : 		return( NULL );
; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LockResource@4
  00021	8b f0		 mov	 esi, eax

; 253  : 	if( pImage == NULL )

  00023	85 f6		 test	 esi, esi
  00025	75 06		 jne	 SHORT $L39524
$L260334:
  00027	5e		 pop	 esi
  00028	5f		 pop	 edi

; 254  : 	{
; 255  : 		return( NULL );

  00029	33 c0		 xor	 eax, eax
  0002b	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0002c	c3		 ret	 0
$L39524:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

  0002d	57		 push	 edi
  0002e	53		 push	 ebx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SizeofResource@8

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);
; 260  : 	iIndex = id&0x000f;

  00035	8b 4c 24 18	 mov	 ecx, DWORD PTR _id$[esp+8]
  00039	03 c6		 add	 eax, esi
  0003b	83 e1 0f	 and	 ecx, 15			; 0000000fH

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

  0003e	76 0e		 jbe	 SHORT $L39528
$L39527:
  00040	3b f0		 cmp	 esi, eax
  00042	73 e3		 jae	 SHORT $L260334

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));
; 265  : 		iIndex--;

  00044	49		 dec	 ecx
  00045	0f b7 16	 movzx	 edx, WORD PTR [esi]
  00048	8d 74 56 02	 lea	 esi, DWORD PTR [esi+edx*2+2]
  0004c	75 f2		 jne	 SHORT $L39527
$L39528:

; 266  : 	}
; 267  : 	if( pImage >= pImageEnd )

  0004e	3b f0		 cmp	 esi, eax

; 268  : 	{
; 269  : 		return( NULL );

  00050	73 d5		 jae	 SHORT $L260334

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

  00052	66 8b 06	 mov	 ax, WORD PTR [esi]
  00055	66 f7 d8	 neg	 ax
  00058	1b c0		 sbb	 eax, eax
  0005a	23 c6		 and	 eax, esi
  0005c	5e		 pop	 esi
  0005d	5f		 pop	 edi
  0005e	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0005f	c3		 ret	 0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Ogty
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

  00000	56		 push	 esi

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _id$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	c1 e8 04	 shr	 eax, 4
  0000a	57		 push	 edi
  0000b	8b 7c 24 0c	 mov	 edi, DWORD PTR _hInstance$[esp+4]
  0000f	40		 inc	 eax
  00010	0f b7 c8	 movzx	 ecx, ax
  00013	6a 06		 push	 6
  00015	51		 push	 ecx
  00016	57		 push	 edi
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12

; 284  : 	if( hResource == NULL )

  0001d	85 c0		 test	 eax, eax
  0001f	75 03		 jne	 SHORT $L39545
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi

; 290  : }

  00023	c3		 ret	 0
$L39545:

; 285  : 	{
; 286  : 		return( NULL );
; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 290  : }

  00031	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?Process@CColosseumMatch@@QAEXXZ		; CColosseumMatch::Process
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
;	COMDAT ?Process@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT
?Process@CColosseumMatch@@QAEXXZ PROC NEAR		; CColosseumMatch::Process, COMDAT
; _this$ = ecx

; 206  : }

  00000	c3		 ret	 0
?Process@CColosseumMatch@@QAEXXZ ENDP			; CColosseumMatch::Process
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
; Function compile flags: /Ogty
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 80   : 		return( nRefs > 1 ); 

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	83 fa 01	 cmp	 edx, 1
  00008	0f 9f c0	 setg	 al

; 81   : 	}

  0000b	c3		 ret	 0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L39885

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L39885:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?CreateRoomLayer@CColosseumMatch@@QAEXXZ	; CColosseumMatch::CreateRoomLayer
EXTRN	?g_WorldMng@@3VCWorldMng@@A:BYTE		; g_WorldMng
EXTRN	?CreateLayer@CWorld@@QAEHH@Z:NEAR		; CWorld::CreateLayer
EXTRN	?GetLinkMap@CLayeredLinkMap@@QAEPAVCLinkMap@@H@Z:NEAR ; CLayeredLinkMap::GetLinkMap
EXTRN	?GetWorld@CWorldMng@@QAEPAVCWorld@@K@Z:NEAR	; CWorldMng::GetWorld
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
;	COMDAT ?CreateRoomLayer@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT
?CreateRoomLayer@CColosseumMatch@@QAEXXZ PROC NEAR	; CColosseumMatch::CreateRoomLayer, COMDAT
; _this$ = ecx

; 262  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 263  : 	CWorld* pWorld = g_WorldMng.GetWorld( WI_WORLD_COLOSSEUM );

  00004	68 e7 00 00 00	 push	 231			; 000000e7H
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_WorldMng@@3VCWorldMng@@A
  0000e	e8 00 00 00 00	 call	 ?GetWorld@CWorldMng@@QAEPAVCWorld@@K@Z ; CWorldMng::GetWorld
  00013	8b f0		 mov	 esi, eax

; 264  : 	if( pWorld && !pWorld->m_linkMap.GetLinkMap( static_cast<int>( m_uPartyID ) ) )

  00015	85 f6		 test	 esi, esi
  00017	74 1b		 je	 SHORT $L254346
  00019	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001c	50		 push	 eax
  0001d	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00020	e8 00 00 00 00	 call	 ?GetLinkMap@CLayeredLinkMap@@QAEPAVCLinkMap@@H@Z ; CLayeredLinkMap::GetLinkMap
  00025	85 c0		 test	 eax, eax
  00027	75 0b		 jne	 SHORT $L254346

; 265  : 		pWorld->CreateLayer( static_cast<int>( m_uPartyID ) );

  00029	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0002c	51		 push	 ecx
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?CreateLayer@CWorld@@QAEHH@Z ; CWorld::CreateLayer
$L254346:
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi

; 266  : }

  00036	c3		 ret	 0
?CreateRoomLayer@CColosseumMatch@@QAEXXZ ENDP		; CColosseumMatch::CreateRoomLayer
_TEXT	ENDS
PUBLIC	?GetUser@CColosseumMatch@@QAEPAVCUser@@K@Z	; CColosseumMatch::GetUser
EXTRN	?g_UserMng@@3VCUserMng@@A:BYTE			; g_UserMng
EXTRN	?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z:NEAR ; CUserMng::GetUserByPlayerID
; Function compile flags: /Ogty
;	COMDAT ?GetUser@CColosseumMatch@@QAEPAVCUser@@K@Z
_TEXT	SEGMENT
_uPlayerID$ = 8						; size = 4
?GetUser@CColosseumMatch@@QAEPAVCUser@@K@Z PROC NEAR	; CColosseumMatch::GetUser, COMDAT
; _this$ = ecx

; 270  : 	return g_UserMng.GetUserByPlayerID( uPlayerID );

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00005	e9 00 00 00 00	 jmp	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
?GetUser@CColosseumMatch@@QAEPAVCUser@@K@Z ENDP		; CColosseumMatch::GetUser
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L260361
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L260361:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L260366

; 517  : 		}

  00007	c3		 ret	 0
$L260366:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00012	f7 e9		 imul	 ecx
  00014	03 d1		 add	 edx, ecx
  00016	c1 fa 04	 sar	 edx, 4
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx

; 517  : 		}

  00020	c3		 ret	 0
?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::size
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L260380
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L260380:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L255921
  0000e	8b ff		 npad	 2
$L255920:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L255920
$L255921:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L255925
  0000d	8d 49 00	 npad	 3
$L255924:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L255924
$L255925:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L255933

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L255933:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L255934

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L255934:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L255936

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L255936:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::capacity
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L260530

; 459  : 		}

  00007	c3		 ret	 0
$L260530:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00008	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00012	f7 e9		 imul	 ecx
  00014	03 d1		 add	 edx, ecx
  00016	c1 fa 04	 sar	 edx, 4
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx

; 459  : 		}

  00020	c3		 ret	 0
?capacity@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@XZ ; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@XZ PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@XZ ENDP	; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@ABV01@@Z ; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<__COLOSSEUM_MONSTER>::allocator<__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCColosseumMatch@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCColosseumMatch@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCColosseumMatch@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCColosseumMatch@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::allocator<std::pair<unsigned long const ,CColosseumMatch *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@I@Z ; std::allocator<__COLOSSEUM_MONSTER>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@I@Z PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@I@Z ENDP ; std::allocator<__COLOSSEUM_MONSTER>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEABU__COLOSSEUM_MONSTER@@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEABU__COLOSSEUM_MONSTER@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEABU__COLOSSEUM_MONSTER@@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEABU__COLOSSEUM_MONSTER@@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@PAU__COLOSSEUM_MONSTER@@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@H@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QBEIXZ ; std::allocator<__COLOSSEUM_MONSTER>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QBEIXZ PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QBEIXZ ENDP ; std::allocator<__COLOSSEUM_MONSTER>::max_size
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L257272

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L257272:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L260653

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L260638
$L260637:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L260637
$L260638:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L260653:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L260656
  0003d	8d 49 00	 npad	 3
$L257278:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L257279

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L257278
$L257279:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L260656

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L260656:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L257286

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L260704

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L260692
  0001d	8d 49 00	 npad	 3
$L260691:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L260691
$L260692:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L260704:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L257290
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L257289:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L257290

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L257289
$L257290:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L257286:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABV012@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8b 10		 mov	 edx, DWORD PTR [eax]
  00006	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00008	2b ca		 sub	 ecx, edx
  0000a	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0000f	f7 e9		 imul	 ecx
  00011	03 d1		 add	 edx, ecx
  00013	c1 fa 04	 sar	 edx, 4
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx

; 144  : 			}

  0001d	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$?0KPAVCColosseumMatch@@@?$pair@$$CBKPAVCColosseumMatch@@@std@@QAE@ABU?$pair@KPAVCColosseumMatch@@@1@@Z ; std::pair<unsigned long const ,CColosseumMatch *>::pair<unsigned long const ,CColosseumMatch *><unsigned long,CColosseumMatch *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$?0KPAVCColosseumMatch@@@?$pair@$$CBKPAVCColosseumMatch@@@std@@QAE@ABU?$pair@KPAVCColosseumMatch@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0KPAVCColosseumMatch@@@?$pair@$$CBKPAVCColosseumMatch@@@std@@QAE@ABU?$pair@KPAVCColosseumMatch@@@1@@Z PROC NEAR ; std::pair<unsigned long const ,CColosseumMatch *>::pair<unsigned long const ,CColosseumMatch *><unsigned long,CColosseumMatch *>, COMDAT
; _this$ = ecx

; 41   : 		{	// construct from compatible pair

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	89 10		 mov	 DWORD PTR [eax], edx
  0000a	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 42   : 		}

  00010	c2 04 00	 ret	 4
??$?0KPAVCColosseumMatch@@@?$pair@$$CBKPAVCColosseumMatch@@@std@@QAE@ABU?$pair@KPAVCColosseumMatch@@@1@@Z ENDP ; std::pair<unsigned long const ,CColosseumMatch *>::pair<unsigned long const ,CColosseumMatch *><unsigned long,CColosseumMatch *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$fill@PAKK@std@@YAXPAK0ABK@Z			; std::fill<unsigned long *,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAKK@std@@YAXPAK0ABK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAKK@std@@YAXPAK0ABK@Z PROC NEAR		; std::fill<unsigned long *,unsigned long>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L258226
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L258224:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L258224
  0001c	5e		 pop	 esi
$L258226:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAKK@std@@YAXPAK0ABK@Z ENDP			; std::fill<unsigned long *,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z ; std::fill<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z PROC NEAR ; std::fill<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	3b c2		 cmp	 eax, edx
  0000a	74 1c		 je	 SHORT $L258284
  0000c	53		 push	 ebx
  0000d	8b 5c 24 10	 mov	 ebx, DWORD PTR __Val$[esp]
  00011	56		 push	 esi
  00012	57		 push	 edi
$L258282:

; 1136 : 		*_First = _Val;

  00013	8b f8		 mov	 edi, eax
  00015	83 c0 1c	 add	 eax, 28			; 0000001cH
  00018	3b c2		 cmp	 eax, edx
  0001a	b9 07 00 00 00	 mov	 ecx, 7
  0001f	8b f3		 mov	 esi, ebx
  00021	f3 a5		 rep movsd
  00023	75 ee		 jne	 SHORT $L258282
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
$L258284:

; 1137 : 	}

  00028	c3		 ret	 0
??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z ENDP ; std::fill<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??$_Allocate@U__COLOSSEUM_MONSTER@@@std@@YAPAU__COLOSSEUM_MONSTER@@IPAU1@@Z ; std::_Allocate<__COLOSSEUM_MONSTER>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@U__COLOSSEUM_MONSTER@@@std@@YAPAU__COLOSSEUM_MONSTER@@IPAU1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U__COLOSSEUM_MONSTER@@@std@@YAPAU__COLOSSEUM_MONSTER@@IPAU1@@Z PROC NEAR ; std::_Allocate<__COLOSSEUM_MONSTER>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 35   : 	}

  00010	c3		 ret	 0
??$_Allocate@U__COLOSSEUM_MONSTER@@@std@@YAPAU__COLOSSEUM_MONSTER@@IPAU1@@Z ENDP ; std::_Allocate<__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *><std::pair<unsigned long const ,CColosseumMatch *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *><std::pair<unsigned long const ,CColosseumMatch *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *><std::pair<unsigned long const ,CColosseumMatch *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node><std::pair<unsigned long const ,CColosseumMatch *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node><std::pair<unsigned long const ,CColosseumMatch *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCColosseumMatch@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node><std::pair<unsigned long const ,CColosseumMatch *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L260761
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L260761:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??0?$pair@KPAVCColosseumMatch@@@std@@QAE@ABKABQAVCColosseumMatch@@@Z ; std::pair<unsigned long,CColosseumMatch *>::pair<unsigned long,CColosseumMatch *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@KPAVCColosseumMatch@@@std@@QAE@ABKABQAVCColosseumMatch@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@KPAVCColosseumMatch@@@std@@QAE@ABKABQAVCColosseumMatch@@@Z PROC NEAR ; std::pair<unsigned long,CColosseumMatch *>::pair<unsigned long,CColosseumMatch *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@KPAVCColosseumMatch@@@std@@QAE@ABKABQAVCColosseumMatch@@@Z ENDP ; std::pair<unsigned long,CColosseumMatch *>::pair<unsigned long,CColosseumMatch *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__COLOSSEUM_MONSTER@@0@Z ; std::_Ptr_cat<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__COLOSSEUM_MONSTER@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__COLOSSEUM_MONSTER@@0@Z PROC NEAR ; std::_Ptr_cat<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__COLOSSEUM_MONSTER@@0@Z ENDP ; std::_Ptr_cat<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<unsigned long *,unsigned long *>
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<unsigned long *,unsigned long *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>, COMDAT

; 1049 : 	while (_First != _Last)

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 08	 mov	 ebx, DWORD PTR __First$[esp]
  0000d	3b da		 cmp	 ebx, edx
  0000f	74 19		 je	 SHORT $L258814
  00011	56		 push	 esi
  00012	57		 push	 edi
$L258813:

; 1050 : 		*--_Dest = *--_Last;

  00013	83 ea 1c	 sub	 edx, 28			; 0000001cH
  00016	83 e8 1c	 sub	 eax, 28			; 0000001cH
  00019	3b d3		 cmp	 edx, ebx
  0001b	b9 07 00 00 00	 mov	 ecx, 7
  00020	8b f2		 mov	 esi, edx
  00022	8b f8		 mov	 edi, eax
  00024	f3 a5		 rep movsd
  00026	75 eb		 jne	 SHORT $L258813
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$L258814:
  0002a	5b		 pop	 ebx

; 1051 : 	return (_Dest);
; 1052 : 	}

  0002b	c3		 ret	 0
??$_Copy_backward_opt@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@AAPAU__COLOSSEUM_MONSTER@@@Z ; std::_Ptr_cat<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@AAPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@AAPAU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::_Ptr_cat<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@AAPAU__COLOSSEUM_MONSTER@@@Z ENDP ; std::_Ptr_cat<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAKIK@std@@YAXPAKIABK@Z		; std::fill_n<unsigned long *,unsigned int,unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAKIK@std@@YAXPAKIABK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAKIK@std@@YAXPAKIABK@Z PROC NEAR		; std::fill_n<unsigned long *,unsigned int,unsigned long>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L259085
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L259083:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L259083
  0001b	5e		 pop	 esi
$L259085:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAKIK@std@@YAXPAKIABK@Z ENDP			; std::fill_n<unsigned long *,unsigned int,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned long,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<unsigned long,unsigned long>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Construct@U__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@ABU1@@Z ; std::_Construct<__COLOSSEUM_MONSTER,__COLOSSEUM_MONSTER>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Construct@U__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@ABU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@ABU1@@Z PROC NEAR ; std::_Construct<__COLOSSEUM_MONSTER,__COLOSSEUM_MONSTER>, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	57		 push	 edi

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00001	8b 7c 24 08	 mov	 edi, DWORD PTR __Ptr$[esp]
  00005	85 ff		 test	 edi, edi
  00007	74 0d		 je	 SHORT $L260796
  00009	56		 push	 esi
  0000a	8b 74 24 10	 mov	 esi, DWORD PTR __Val$[esp+4]
  0000e	b9 07 00 00 00	 mov	 ecx, 7
  00013	f3 a5		 rep movsd
  00015	5e		 pop	 esi
$L260796:
  00016	5f		 pop	 edi

; 43   : 	}

  00017	c3		 ret	 0
??$_Construct@U__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@ABU1@@Z ENDP ; std::_Construct<__COLOSSEUM_MONSTER,__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??$_Destroy@U__COLOSSEUM_MONSTER@@@std@@YAXPAU__COLOSSEUM_MONSTER@@@Z ; std::_Destroy<__COLOSSEUM_MONSTER>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U__COLOSSEUM_MONSTER@@@std@@YAXPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U__COLOSSEUM_MONSTER@@@std@@YAXPAU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::_Destroy<__COLOSSEUM_MONSTER>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U__COLOSSEUM_MONSTER@@@std@@YAXPAU__COLOSSEUM_MONSTER@@@Z ENDP ; std::_Destroy<__COLOSSEUM_MONSTER>
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Econst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 91   : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 92   : 			++_Myptr;

  00002	83 00 1c	 add	 DWORD PTR [eax], 28	; 0000001cH

; 93   : 			return (*this);
; 94   : 			}

  00005	c3		 ret	 0
??Econst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L260816:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L260816
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 371  : 	{	// return pointer category from pointer to unsigned long arguments

  00000	51		 push	 ecx

; 372  : 	_Scalar_ptr_iterator_tag _Cat;
; 373  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 374  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
EXTRN	__fltused:NEAR
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\dx_sdk\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC NEAR			; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 300  :     x = fx;
; 301  :     y = fy;

  00000	8b 54 24 08	 mov	 edx, DWORD PTR _fy$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR _fx$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx

; 302  :     z = fz;

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _fz$[esp-4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 303  : }

  00016	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	?IsDelete@CObj@@QAEHXZ				; CObj::IsDelete
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\obj.h
;	COMDAT ?IsDelete@CObj@@QAEHXZ
_TEXT	SEGMENT
?IsDelete@CObj@@QAEHXZ PROC NEAR			; CObj::IsDelete, COMDAT
; _this$ = ecx

; 180  : 	BOOL			IsDelete()	{ return (m_dwFlags & OBJ_FLAG_DELETE);  }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 e0 01	 and	 eax, 1
  00006	c3		 ret	 0
?IsDelete@CObj@@QAEHXZ ENDP				; CObj::IsDelete
_TEXT	ENDS
PUBLIC	?IsValidObj@@YAHPAVCObj@@@Z			; IsValidObj
; Function compile flags: /Ogty
;	COMDAT ?IsValidObj@@YAHPAVCObj@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?IsValidObj@@YAHPAVCObj@@@Z PROC NEAR			; IsValidObj, COMDAT

; 327  : 	return pObj && ( pObj->IsDelete() == FALSE ); 

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pObj$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 0c		 je	 SHORT $L260837
  00008	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  0000c	75 06		 jne	 SHORT $L260837
  0000e	b8 01 00 00 00	 mov	 eax, 1

; 328  : }

  00013	c3		 ret	 0
$L260837:

; 327  : 	return pObj && ( pObj->IsDelete() == FALSE ); 

  00014	33 c0		 xor	 eax, eax

; 328  : }

  00016	c3		 ret	 0
?IsValidObj@@YAHPAVCObj@@@Z ENDP			; IsValidObj
_TEXT	ENDS
PUBLIC	?GetId@CCtrl@@QAEKXZ				; CCtrl::GetId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\ctrl.h
;	COMDAT ?GetId@CCtrl@@QAEKXZ
_TEXT	SEGMENT
?GetId@CCtrl@@QAEKXZ PROC NEAR				; CCtrl::GetId, COMDAT
; _this$ = ecx

; 58   : 	OBJID			GetId()					{ return m_objid;   }

  00000	8b 81 bc 01 00
	00		 mov	 eax, DWORD PTR [ecx+444]
  00006	c3		 ret	 0
?GetId@CCtrl@@QAEKXZ ENDP				; CCtrl::GetId
_TEXT	ENDS
PUBLIC	?PushNil@CLuaBase@@QAEXXZ			; CLuaBase::PushNil
EXTRN	_lua_pushnil:NEAR
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\luabase.h
;	COMDAT ?PushNil@CLuaBase@@QAEXXZ
_TEXT	SEGMENT
?PushNil@CLuaBase@@QAEXXZ PROC NEAR			; CLuaBase::PushNil, COMDAT
; _this$ = ecx

; 40   : 	void		PushNil()									{  lua_pushnil( m_pLuaState );  }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 _lua_pushnil
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
?PushNil@CLuaBase@@QAEXXZ ENDP				; CLuaBase::PushNil
_TEXT	ENDS
PUBLIC	?TableLoop@CLuaBase@@QAEHH@Z			; CLuaBase::TableLoop
EXTRN	_lua_next:NEAR
; Function compile flags: /Ogty
;	COMDAT ?TableLoop@CLuaBase@@QAEHH@Z
_TEXT	SEGMENT
_nStackPos$ = 8						; size = 4
?TableLoop@CLuaBase@@QAEHH@Z PROC NEAR			; CLuaBase::TableLoop, COMDAT
; _this$ = ecx

; 46   : 	int			TableLoop( int nStackPos )					{  return lua_next( m_pLuaState, nStackPos );  }	

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nStackPos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _lua_next
  0000e	83 c4 08	 add	 esp, 8
  00011	c2 04 00	 ret	 4
?TableLoop@CLuaBase@@QAEHH@Z ENDP			; CLuaBase::TableLoop
_TEXT	ENDS
PUBLIC	?GetGloabal@CLuaBase@@QAEXPAD@Z			; CLuaBase::GetGloabal
EXTRN	_lua_getfield:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetGloabal@CLuaBase@@QAEXPAD@Z
_TEXT	SEGMENT
_szName$ = 8						; size = 4
?GetGloabal@CLuaBase@@QAEXPAD@Z PROC NEAR		; CLuaBase::GetGloabal, COMDAT
; _this$ = ecx

; 47   : 	void		GetGloabal( char* szName )					{  lua_getglobal( m_pLuaState, szName );  }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _szName$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	50		 push	 eax
  00008	68 ee d8 ff ff	 push	 -10002			; ffffd8eeH
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 _lua_getfield
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	c2 04 00	 ret	 4
?GetGloabal@CLuaBase@@QAEXPAD@Z ENDP			; CLuaBase::GetGloabal
_TEXT	ENDS
PUBLIC	?LOG_RANGE@@YAXPBDHHH@Z				; LOG_RANGE
PUBLIC	??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@ ; `string'
EXTRN	?Error@@YAPBDPBDZZ:NEAR				; Error
;	COMDAT ??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\project.h
CONST	SEGMENT
??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@ DB '%'
	DB	's min:%d, max:%d, index:%d', 00H		; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?LOG_RANGE@@YAXPBDHHH@Z
_TEXT	SEGMENT
_szMsg$ = 8						; size = 4
_nMin$ = 12						; size = 4
_nMax$ = 16						; size = 4
_nIndex$ = 20						; size = 4
?LOG_RANGE@@YAXPBDHHH@Z PROC NEAR			; LOG_RANGE, COMDAT

; 559  : 	LPCTSTR szErr = Error( _T( "%s min:%d, max:%d, index:%d" ), szMsg, nMin, nMax, nIndex ); 

  00000	8b 44 24 10	 mov	 eax, DWORD PTR _nIndex$[esp-4]
  00004	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nMax$[esp-4]
  00008	8b 54 24 08	 mov	 edx, DWORD PTR _nMin$[esp-4]
  0000c	50		 push	 eax
  0000d	8b 44 24 08	 mov	 eax, DWORD PTR _szMsg$[esp]
  00011	51		 push	 ecx
  00012	52		 push	 edx
  00013	50		 push	 eax
  00014	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
  00019	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0001e	83 c4 14	 add	 esp, 20			; 00000014H

; 560  : 	ADDERRORMSG( szErr ); 
; 561  : }

  00021	c3		 ret	 0
?LOG_RANGE@@YAXPBDHHH@Z ENDP				; LOG_RANGE
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GKPOBPPI@GetMoverProp?5range_error?$AA@ ; `string'
PUBLIC	?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z	; CProject::GetMoverProp
;	COMDAT ??_C@_0BJ@GKPOBPPI@GetMoverProp?5range_error?$AA@
CONST	SEGMENT
??_C@_0BJ@GKPOBPPI@GetMoverProp?5range_error?$AA@ DB 'GetMoverProp range_'
	DB	'error', 00H					; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z PROC NEAR	; CProject::GetMoverProp, COMDAT
; _this$ = ecx

; 1381 : 	VERIFY_RANGE( nIndex, 0, m_nMoverPropSize, "GetMoverProp range_error", NULL );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIndex$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 19		 jl	 SHORT $L197938
  00008	3b 81 d0 01 00
	00		 cmp	 eax, DWORD PTR [ecx+464]
  0000e	7d 11		 jge	 SHORT $L197938

; 1382 : 	return m_pPropMover + nIndex;

  00010	8b 91 d4 01 00
	00		 mov	 edx, DWORD PTR [ecx+468]
  00016	69 c0 d8 06 00
	00		 imul	 eax, 1752		; 000006d8H
  0001c	03 c2		 add	 eax, edx

; 1383 : }

  0001e	c2 04 00	 ret	 4
$L197938:

; 1381 : 	VERIFY_RANGE( nIndex, 0, m_nMoverPropSize, "GetMoverProp range_error", NULL );

  00021	50		 push	 eax
  00022	8b 81 d0 01 00
	00		 mov	 eax, DWORD PTR [ecx+464]
  00028	50		 push	 eax
  00029	6a 00		 push	 0
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GKPOBPPI@GetMoverProp?5range_error?$AA@
  00030	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
  00035	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0003a	83 c4 14	 add	 esp, 20			; 00000014H
  0003d	33 c0		 xor	 eax, eax

; 1383 : }

  0003f	c2 04 00	 ret	 4
?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z ENDP	; CProject::GetMoverProp
_TEXT	ENDS
PUBLIC	?GetMoverPropEx@CProject@@QAEPAUMoverProp@@H@Z	; CProject::GetMoverPropEx
; Function compile flags: /Ogty
;	COMDAT ?GetMoverPropEx@CProject@@QAEPAUMoverProp@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetMoverPropEx@CProject@@QAEPAUMoverProp@@H@Z PROC NEAR ; CProject::GetMoverPropEx, COMDAT
; _this$ = ecx

; 1387 : 	if( nIndex < 0 || nIndex >= m_nMoverPropSize )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIndex$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 11		 jl	 SHORT $L197945
  00008	3b 81 d0 01 00
	00		 cmp	 eax, DWORD PTR [ecx+464]
  0000e	7d 09		 jge	 SHORT $L197945

; 1389 : 	return GetMoverProp( nIndex );

  00010	89 44 24 04	 mov	 DWORD PTR _nIndex$[esp-4], eax
  00014	e9 00 00 00 00	 jmp	 ?GetMoverProp@CProject@@QAEPAUMoverProp@@H@Z ; CProject::GetMoverProp
$L197945:

; 1388 : 		return NULL;

  00019	33 c0		 xor	 eax, eax

; 1390 : }

  0001b	c2 04 00	 ret	 4
?GetMoverPropEx@CProject@@QAEPAUMoverProp@@H@Z ENDP	; CProject::GetMoverPropEx
_TEXT	ENDS
PUBLIC	?GetPartyId@CMover@@QAEKXZ			; CMover::GetPartyId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\mover.h
;	COMDAT ?GetPartyId@CMover@@QAEKXZ
_TEXT	SEGMENT
?GetPartyId@CMover@@QAEKXZ PROC NEAR			; CMover::GetPartyId, COMDAT
; _this$ = ecx

; 1025 : 	u_long			GetPartyId() { return m_idparty; }

  00000	8b 81 18 07 00
	00		 mov	 eax, DWORD PTR [ecx+1816]
  00006	c3		 ret	 0
?GetPartyId@CMover@@QAEKXZ ENDP				; CMover::GetPartyId
_TEXT	ENDS
PUBLIC	?GetID@CWorld@@QAEKXZ				; CWorld::GetID
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\world.h
;	COMDAT ?GetID@CWorld@@QAEKXZ
_TEXT	SEGMENT
?GetID@CWorld@@QAEKXZ PROC NEAR				; CWorld::GetID, COMDAT
; _this$ = ecx

; 413  : 	DWORD			GetID()	{ return m_dwWorldID; }

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetID@CWorld@@QAEKXZ ENDP				; CWorld::GetID
_TEXT	ENDS
PUBLIC	?Invalidate@CWorld@@QAEXHH@Z			; CWorld::Invalidate
EXTRN	?Invalidate@CLayeredLinkMap@@QAEXHH@Z:NEAR	; CLayeredLinkMap::Invalidate
; Function compile flags: /Ogty
;	COMDAT ?Invalidate@CWorld@@QAEXHH@Z
_TEXT	SEGMENT
_nLayer$ = 8						; size = 4
_bInvalid$ = 12						; size = 4
?Invalidate@CWorld@@QAEXHH@Z PROC NEAR			; CWorld::Invalidate, COMDAT
; _this$ = ecx

; 617  : 	void	Invalidate( int nLayer, BOOL bInvalid = TRUE )	{	m_linkMap.Invalidate( nLayer, bInvalid );	}

  00000	83 c1 24	 add	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?Invalidate@CLayeredLinkMap@@QAEXHH@Z ; CLayeredLinkMap::Invalidate
?Invalidate@CWorld@@QAEXHH@Z ENDP			; CWorld::Invalidate
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?GetSize@?$CFixedArray@UtagColorText@@@@QAEHXZ	; CFixedArray<tagColorText>::GetSize
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\data.h
;	COMDAT ?GetSize@?$CFixedArray@UtagColorText@@@@QAEHXZ
_TEXT	SEGMENT
?GetSize@?$CFixedArray@UtagColorText@@@@QAEHXZ PROC NEAR ; CFixedArray<tagColorText>::GetSize, COMDAT
; _this$ = ecx

; 221  : 	int  GetSize() { return m_nMaxIndex; }

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?GetSize@?$CFixedArray@UtagColorText@@@@QAEHXZ ENDP	; CFixedArray<tagColorText>::GetSize
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
; Function compile flags: /Ogty
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 790  : 		ATLASSERT( nLength >= 0 );
; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );
; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L219986
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L219986

; 794  : 			AtlThrow(E_INVALIDARG);
; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax

; 797  : 		m_pszData[nLength] = 0;

  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 798  : 	}

  00018	c2 04 00	 ret	 4
$L219986:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L260899:
$L260898:
  00025	cc		 int	 3
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:NEAR ; AfxFindStringResourceHandle
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance, COMDAT

; 45   : 		return( AfxFindStringResourceHandle( nID ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nID$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 46   : 	}

  0000a	c3		 ret	 0
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Ogty
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 50   : 		return( AfxGetStringManager() );

  00000	e9 00 00 00 00	 jmp	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L260910
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L260910:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC NEAR			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z ; ATL::ChTraitsCRT<char>::GetFormattedLength
EXTRN	__vscprintf:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT
_pszFormat$ = 8						; size = 4
_args$ = 12						; size = 4
?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z PROC NEAR ; ATL::ChTraitsCRT<char>::GetFormattedLength, COMDAT

; 408  : 		return _vscprintf( pszFormat, args );

  00000	e9 00 00 00 00	 jmp	 __vscprintf
?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z ENDP ; ATL::ChTraitsCRT<char>::GetFormattedLength
_TEXT	ENDS
PUBLIC	?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z	; ATL::ChTraitsCRT<char>::Format
EXTRN	_vsprintf:NEAR
; Function compile flags: /Ogty
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT
_pszBuffer$ = 8						; size = 4
_pszFormat$ = 12					; size = 4
_args$ = 16						; size = 4
?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z PROC NEAR	; ATL::ChTraitsCRT<char>::Format, COMDAT

; 413  : 		return vsprintf( pszBuffer, pszFormat, args );

  00000	e9 00 00 00 00	 jmp	 _vsprintf
?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z ENDP		; ATL::ChTraitsCRT<char>::Format
_TEXT	ENDS
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
EXTRN	__imp__WideCharToMultiByte@32:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSource$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::GetBaseTypeLength, COMDAT

; 437  : 		// Returns required buffer length in XCHARs
; 438  : 		return ::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSource, nLength, NULL, 0, NULL, NULL );

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00006	8b 4c 24 08	 mov	 ecx, DWORD PTR _nLength$[esp-4]
  0000a	8b 54 24 04	 mov	 edx, DWORD PTR _pszSource$[esp-4]
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	6a 00		 push	 0
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 439  : 	}

  00021	c3		 ret	 0
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<char>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Ogty
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::ConvertToBaseType, COMDAT

; 452  : 		// nLen is in XCHARs
; 453  : 		::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength, NULL, NULL );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _nDestLength$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _pszDest$[esp-4]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR _nSrcLength$[esp-4]
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	50		 push	 eax
  00011	8b 44 24 18	 mov	 eax, DWORD PTR _pszSrc$[esp+8]
  00015	51		 push	 ecx
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	6a 00		 push	 0
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 454  : 	}

  00027	c3		 ret	 0
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ENDP ; ATL::ChTraitsCRT<char>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L260954
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L260954:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC NEAR	; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L260972:
$L260971:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
; Function compile flags: /Ogty
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv181 = 8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 716  : 		CStringData* pOldData = GetData();

  00002	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00004	83 eb 10	 sub	 ebx, 16			; 00000010H
  00007	55		 push	 ebp

; 717  : 		int nOldLength = pOldData->nDataLength;

  00008	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  0000b	89 4c 24 08	 mov	 DWORD PTR _this$[esp+12], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

  0000f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	56		 push	 esi
  00014	ff 50 10	 call	 DWORD PTR [eax+16]
  00017	8b 74 24 14	 mov	 esi, DWORD PTR _nLength$[esp+12]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	8b c8		 mov	 ecx, eax
  00022	ff 12		 call	 DWORD PTR [edx]

; 719  : 		if( pNewData == NULL )

  00024	85 c0		 test	 eax, eax
  00026	75 05		 jne	 SHORT $L222762

; 720  : 		{
; 721  : 			ThrowMemoryException();

  00028	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L261003:
$L222762:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

  0002d	3b ee		 cmp	 ebp, esi
  0002f	7d 02		 jge	 SHORT $L260977
  00031	8b f5		 mov	 esi, ebp
$L260977:
  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

  00036	8b d1		 mov	 edx, ecx
  00038	57		 push	 edi
  00039	c1 e9 02	 shr	 ecx, 2
  0003c	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0003f	89 7c 24 18	 mov	 DWORD PTR tv181[esp+16], edi
  00043	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00046	f3 a5		 rep movsd
  00048	8b ca		 mov	 ecx, edx
  0004a	83 e1 03	 and	 ecx, 3
  0004d	f3 a4		 rep movsb

; 725  : 		pNewData->nDataLength = nOldLength;

  0004f	89 68 04	 mov	 DWORD PTR [eax+4], ebp

; 726  : 		pOldData->Release();

  00052	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00055	83 c9 ff	 or	 ecx, -1
  00058	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0005c	49		 dec	 ecx
  0005d	85 c9		 test	 ecx, ecx
  0005f	5f		 pop	 edi
  00060	7f 08		 jg	 SHORT $L260993
  00062	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	53		 push	 ebx
  00067	ff 52 04	 call	 DWORD PTR [edx+4]
$L260993:

; 727  : 		Attach( pNewData );

  0006a	8b 44 24 14	 mov	 eax, DWORD PTR tv181[esp+12]
  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+16]
  00072	5e		 pop	 esi
  00073	5d		 pop	 ebp
  00074	89 01		 mov	 DWORD PTR [ecx], eax
  00076	5b		 pop	 ebx

; 728  : 	}

  00077	59		 pop	 ecx
  00078	c2 04 00	 ret	 4
$L261002:
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Ogty
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 777  : 		CStringData* pOldData = GetData();
; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );
; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nLength$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	83 e8 10	 sub	 eax, 16			; 00000010H
  00012	6a 01		 push	 1
  00014	57		 push	 edi
  00015	50		 push	 eax
  00016	ff 52 08	 call	 DWORD PTR [edx+8]

; 781  : 		if( pNewData == NULL )

  00019	85 c0		 test	 eax, eax
  0001b	75 05		 jne	 SHORT $L222771

; 782  : 		{
; 783  : 			ThrowMemoryException();

  0001d	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L261019:
$L222771:

; 784  : 		}
; 785  : 		Attach( pNewData );

  00022	83 c0 10	 add	 eax, 16			; 00000010H
  00025	5f		 pop	 edi
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	5e		 pop	 esi

; 786  : 	}

  00029	c2 04 00	 ret	 4
$L261018:
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L261028
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L261029
$L261028:
  00011	8b d0		 mov	 edx, eax
$L261029:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L222788
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L261036
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L261036:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L222788
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L222788:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC NEAR		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?GetAt@?$CFixedArray@UtagColorText@@@@QAEPAUtagColorText@@K@Z ; CFixedArray<tagColorText>::GetAt
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\data.h
;	COMDAT ?GetAt@?$CFixedArray@UtagColorText@@@@QAEPAUtagColorText@@K@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetAt@?$CFixedArray@UtagColorText@@@@QAEPAUtagColorText@@K@Z PROC NEAR ; CFixedArray<tagColorText>::GetAt, COMDAT
; _this$ = ecx

; 270  : 	if( dwIndex >= (DWORD)m_nMaxIndex )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _dwIndex$[esp-4]
  00004	3b 41 18	 cmp	 eax, DWORD PTR [ecx+24]
  00007	72 05		 jb	 SHORT $L224363

; 271  : 		return NULL;

  00009	33 c0		 xor	 eax, eax

; 273  : }

  0000b	c2 04 00	 ret	 4
$L224363:

; 272  : 	return (T*) m_apOffset[ dwIndex ];

  0000e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00011	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 273  : }

  00014	c2 04 00	 ret	 4
?GetAt@?$CFixedArray@UtagColorText@@@@QAEPAUtagColorText@@K@Z ENDP ; CFixedArray<tagColorText>::GetAt
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC NEAR		; std::_Allocate<unsigned long>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<char,0>::GetManager
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetManager, COMDAT
; _this$ = ecx

; 505  : 		return( GetData()->pStringMgr->Clone() );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  00005	8b 11		 mov	 edx, DWORD PTR [ecx]
  00007	ff 62 10	 jmp	 DWORD PTR [edx+16]
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetManager
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L255913

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L255913:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L255914

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L255914:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L255916

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L255916:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin, COMDAT
; _this$ = ecx

; 468  : 		return (const_iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 469  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end
_TEXT	ENDS
PUBLIC	?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end, COMDAT
; _this$ = ecx

; 478  : 		return (const_iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 479  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__COLOSSEUM_MONSTER@@@1@@Z ; std::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__COLOSSEUM_MONSTER@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__COLOSSEUM_MONSTER@@@1@@Z PROC NEAR ; std::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__COLOSSEUM_MONSTER@@@1@@Z ENDP ; std::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Vector_val<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEAAU__COLOSSEUM_MONSTER@@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEAAU__COLOSSEUM_MONSTER@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEAAU__COLOSSEUM_MONSTER@@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEAAU__COLOSSEUM_MONSTER@@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AV012@H@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L256438
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L256437:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L256439

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L256440
$L256439:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L256440:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L256437
  00029	5b		 pop	 ebx
$L256438:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEPAU__COLOSSEUM_MONSTER@@I@Z ; std::allocator<__COLOSSEUM_MONSTER>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEPAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEPAU__COLOSSEUM_MONSTER@@I@Z PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 138  : 		}

  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEPAU__COLOSSEUM_MONSTER@@I@Z ENDP ; std::allocator<__COLOSSEUM_MONSTER>::allocate
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	8b c8		 mov	 ecx, eax
  0000a	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0000f	f7 e9		 imul	 ecx
  00011	03 d1		 add	 edx, ecx
  00013	c1 fa 04	 sar	 edx, 4
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx

; 280  : 			}

  0001d	c2 04 00	 ret	 4
??Giterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L257330
$L257328:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L257328
$L257330:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L261394
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L261394:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$make_pair@KPAVCColosseumMatch@@@std@@YA?AU?$pair@KPAVCColosseumMatch@@@0@KPAVCColosseumMatch@@@Z ; std::make_pair<unsigned long,CColosseumMatch *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$make_pair@KPAVCColosseumMatch@@@std@@YA?AU?$pair@KPAVCColosseumMatch@@@0@KPAVCColosseumMatch@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@KPAVCColosseumMatch@@@std@@YA?AU?$pair@KPAVCColosseumMatch@@@0@KPAVCColosseumMatch@@@Z PROC NEAR ; std::make_pair<unsigned long,CColosseumMatch *>, COMDAT

; 108  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val2$[esp-4]
  0000c	89 08		 mov	 DWORD PTR [eax], ecx
  0000e	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 109  : 	}

  00011	c3		 ret	 0
??$make_pair@KPAVCColosseumMatch@@@std@@YA?AU?$pair@KPAVCColosseumMatch@@@0@KPAVCColosseumMatch@@@Z ENDP ; std::make_pair<unsigned long,CColosseumMatch *>
_TEXT	ENDS
PUBLIC	??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z	; std::copy_backward<unsigned long *,unsigned long *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z PROC NEAR	; std::copy_backward<unsigned long *,unsigned long *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z ENDP		; std::copy_backward<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z ; std::copy_backward<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
; Function compile flags: /Ogty
;	COMDAT ??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z PROC NEAR ; std::copy_backward<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 08	 mov	 ebx, DWORD PTR __First$[esp]
  0000d	3b da		 cmp	 ebx, edx
  0000f	74 19		 je	 SHORT $L261429
  00011	56		 push	 esi
  00012	57		 push	 edi
$L261428:
  00013	83 ea 1c	 sub	 edx, 28			; 0000001cH
  00016	83 e8 1c	 sub	 eax, 28			; 0000001cH
  00019	3b d3		 cmp	 edx, ebx
  0001b	b9 07 00 00 00	 mov	 ecx, 7
  00020	8b f2		 mov	 esi, edx
  00022	8b f8		 mov	 edi, eax
  00024	f3 a5		 rep movsd
  00026	75 eb		 jne	 SHORT $L261428
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$L261429:
  0002a	5b		 pop	 ebx

; 1070 : 	}

  0002b	c3		 ret	 0
??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z ENDP ; std::copy_backward<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L261443
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L261441:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L261441
  0001b	5e		 pop	 esi
$L261443:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z PROC NEAR ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@ABU3@@Z ; std::allocator<__COLOSSEUM_MONSTER>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@ABU3@@Z PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::construct, COMDAT
; _this$ = ecx

; 146  : 		{	// construct object at _Ptr with value _Val

  00000	57		 push	 edi

; 147  : 		_Construct(_Ptr, _Val);

  00001	8b 7c 24 08	 mov	 edi, DWORD PTR __Ptr$[esp]
  00005	85 ff		 test	 edi, edi
  00007	74 0d		 je	 SHORT $L261474
  00009	56		 push	 esi
  0000a	8b 74 24 10	 mov	 esi, DWORD PTR __Val$[esp+4]
  0000e	b9 07 00 00 00	 mov	 ecx, 7
  00013	f3 a5		 rep movsd
  00015	5e		 pop	 esi
$L261474:
  00016	5f		 pop	 edi

; 148  : 		}

  00017	c2 08 00	 ret	 8
?construct@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@ABU3@@Z ENDP ; std::allocator<__COLOSSEUM_MONSTER>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@@Z ; std::allocator<__COLOSSEUM_MONSTER>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::allocator<__COLOSSEUM_MONSTER>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U__COLOSSEUM_MONSTER@@@std@@QAEXPAU__COLOSSEUM_MONSTER@@@Z ENDP ; std::allocator<__COLOSSEUM_MONSTER>::destroy
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
EXTRN	__CxxThrowException@8:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 78   : 	_FwdIt _Next = _Dest;
; 79   : 
; 80   : 	_TRY_BEGIN
; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 1d		 je	 SHORT $L259095
  00011	56		 push	 esi
  00012	57		 push	 edi
$L259093:

; 82   : 		_Al.construct(_Dest, *_First);

  00013	85 c0		 test	 eax, eax
  00015	74 0b		 je	 SHORT $L259094
  00017	b9 07 00 00 00	 mov	 ecx, 7
  0001c	8b f2		 mov	 esi, edx
  0001e	8b f8		 mov	 edi, eax
  00020	f3 a5		 rep movsd
$L259094:
  00022	83 c2 1c	 add	 edx, 28			; 0000001cH
  00025	83 c0 1c	 add	 eax, 28			; 0000001cH
  00028	3b d3		 cmp	 edx, ebx
  0002a	75 e7		 jne	 SHORT $L259093
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
$L259095:
  0002e	5b		 pop	 ebx

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)
; 85   : 		_Al.destroy(_Next);
; 86   : 	_RERAISE;
; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  0002f	c3		 ret	 0
??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??9const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@ ; `string'
PUBLIC	?GetTextColor@CProject@@QAEKK@Z			; CProject::GetTextColor
;	COMDAT ??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\data.h
CONST	SEGMENT
??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@ DB 'GetTextColor range_'
	DB	'error', 00H					; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\project.h
CONST	ENDS
;	COMDAT ?GetTextColor@CProject@@QAEKK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetTextColor@CProject@@QAEKK@Z PROC NEAR		; CProject::GetTextColor, COMDAT
; _this$ = ecx

; 1394 : 	VERIFY_RANGE( (int)( dwIndex ), 0, m_colorText.GetSize(), "GetTextColor range_error", 0xFFFFFFFF );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _dwIndex$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 3c		 jl	 SHORT $L197956
  00008	8b 91 c8 02 00
	00		 mov	 edx, DWORD PTR [ecx+712]
  0000e	3b c2		 cmp	 eax, edx
  00010	7d 32		 jge	 SHORT $L197956

; 1395 : 	if( m_colorText.GetAt( dwIndex ) == NULL )

  00012	3b c2		 cmp	 eax, edx
  00014	73 0c		 jae	 SHORT $L261554
  00016	8b 91 b8 02 00
	00		 mov	 edx, DWORD PTR [ecx+696]
  0001c	83 3c 82 00	 cmp	 DWORD PTR [edx+eax*4], 0
  00020	75 05		 jne	 SHORT $L197959
$L261554:

; 1396 : 		return 0;

  00022	33 c0		 xor	 eax, eax

; 1398 : }

  00024	c2 04 00	 ret	 4
$L197959:

; 1397 : 	return m_colorText.GetAt( dwIndex )->dwColor; 

  00027	3b 81 c8 02 00
	00		 cmp	 eax, DWORD PTR [ecx+712]
  0002d	72 07		 jb	 SHORT $L261550
  0002f	33 c0		 xor	 eax, eax
  00031	8b 00		 mov	 eax, DWORD PTR [eax]

; 1398 : }

  00033	c2 04 00	 ret	 4

; 1397 : 	return m_colorText.GetAt( dwIndex )->dwColor; 

$L261550:
  00036	8b 89 b8 02 00
	00		 mov	 ecx, DWORD PTR [ecx+696]
  0003c	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]

; 1398 : }

  00041	c2 04 00	 ret	 4
$L197956:

; 1394 : 	VERIFY_RANGE( (int)( dwIndex ), 0, m_colorText.GetSize(), "GetTextColor range_error", 0xFFFFFFFF );

  00044	8b 91 c8 02 00
	00		 mov	 edx, DWORD PTR [ecx+712]
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	6a 00		 push	 0
  0004e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
  00058	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0005d	83 c4 14	 add	 esp, 20			; 00000014H
  00060	83 c8 ff	 or	 eax, -1

; 1398 : }

  00063	c2 04 00	 ret	 4
?GetTextColor@CProject@@QAEKK@Z ENDP			; CProject::GetTextColor
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );
; 213  : 		CStringData* pData = pStringMgr->GetNilString();

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]

; 214  : 		Attach( pData );

  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 215  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L261575
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L261575:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Ogty
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );
; 548  : 		SetLength( nNewLength );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nNewLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L261593
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L261593
  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax
  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 549  : 	}

  00018	c2 04 00	 ret	 4
$L261593:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L261596:
$L261595:
  00025	cc		 int	 3
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z PROC NEAR ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 747  : 		CStringData* pOldData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 748  : 		if( pOldData->nDataLength > nLength )

  00002	8b 54 24 04	 mov	 edx, DWORD PTR _nLength$[esp-4]
  00006	83 e8 10	 sub	 eax, 16			; 00000010H
  00009	56		 push	 esi
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	3b f2		 cmp	 esi, edx
  0000f	7e 02		 jle	 SHORT $L221345

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

  00011	8b d6		 mov	 edx, esi
$L221345:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

  00013	83 78 0c 01	 cmp	 DWORD PTR [eax+12], 1
  00017	5e		 pop	 esi
  00018	7e 09		 jle	 SHORT $L221346

; 753  : 		{
; 754  : 			Fork( nLength );

  0001a	89 54 24 04	 mov	 DWORD PTR _nLength$[esp-4], edx
  0001e	e9 00 00 00 00	 jmp	 ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork
$L221346:

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00026	3b c2		 cmp	 eax, edx
  00028	7d 1f		 jge	 SHORT $L221348

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;
; 760  : 			if( nNewLength > 1024 )

  0002a	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  0002f	7e 07		 jle	 SHORT $L221350

; 761  : 			{
; 762  : 				nNewLength += 1024;

  00031	05 00 04 00 00	 add	 eax, 1024		; 00000400H

; 763  : 			}
; 764  : 			else

  00036	eb 02		 jmp	 SHORT $L221351
$L221350:

; 765  : 			{
; 766  : 				nNewLength *= 2;

  00038	03 c0		 add	 eax, eax
$L221351:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

  0003a	3b c2		 cmp	 eax, edx
  0003c	7d 02		 jge	 SHORT $L221352

; 769  : 			{
; 770  : 				nNewLength = nLength;

  0003e	8b c2		 mov	 eax, edx
$L221352:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

  00040	89 44 24 04	 mov	 DWORD PTR _nLength$[esp-4], eax
  00044	e9 00 00 00 00	 jmp	 ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L221348:

; 773  : 		}
; 774  : 	}

  00049	c2 04 00	 ret	 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L261627
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L261627:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC NEAR	; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCColosseumMatch@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 800  : 	{ 

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 801  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L261837
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L261805:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L261807
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L261808
$L261807:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L261808:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L261805
  00029	5b		 pop	 ebx
$L261837:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L261855
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L261855:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L261955
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L261955:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L261982
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L261982:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L262009
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L262009:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L262077
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L262075:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L262075
  0001b	5e		 pop	 esi
$L262077:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 208  : 	_FwdIt _Next = _First;
; 209  : 
; 210  : 	_TRY_BEGIN
; 211  : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	76 25		 jbe	 SHORT $L258698
  00008	53		 push	 ebx
  00009	8b 5c 24 10	 mov	 ebx, DWORD PTR __Val$[esp]
  0000d	56		 push	 esi
  0000e	8b d0		 mov	 edx, eax
  00010	8b 44 24 0c	 mov	 eax, DWORD PTR __First$[esp+4]
  00014	57		 push	 edi
$L258696:

; 212  : 		_Al.construct(_First, _Val);

  00015	85 c0		 test	 eax, eax
  00017	74 0b		 je	 SHORT $L258697
  00019	b9 07 00 00 00	 mov	 ecx, 7
  0001e	8b f3		 mov	 esi, ebx
  00020	8b f8		 mov	 edi, eax
  00022	f3 a5		 rep movsd
$L258697:
  00024	83 c0 1c	 add	 eax, 28			; 0000001cH
  00027	4a		 dec	 edx
  00028	75 eb		 jne	 SHORT $L258696
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
$L258698:

; 213  : 	_CATCH_ALL
; 214  : 	for (; _Next != _First; ++_Next)
; 215  : 		_Al.destroy(_Next);
; 216  : 	_RERAISE;
; 217  : 	_CATCH_END
; 218  : 	}

  0002d	c3		 ret	 0
??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 225  : 	for (; _First != _Last; ++_First)
; 226  : 		_Al.destroy(_First);
; 227  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ; std::_Uninitialized_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT
__Cat$262148 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$262148[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ENDP ; std::_Uninitialized_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 78   : 	_FwdIt _Next = _Dest;
; 79   : 
; 80   : 	_TRY_BEGIN
; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 1d		 je	 SHORT $L259078
  00011	56		 push	 esi
  00012	57		 push	 edi
$L262156:

; 82   : 		_Al.construct(_Dest, *_First);

  00013	85 c0		 test	 eax, eax
  00015	74 0b		 je	 SHORT $L259077
  00017	b9 07 00 00 00	 mov	 ecx, 7
  0001c	8b f2		 mov	 esi, edx
  0001e	8b f8		 mov	 edi, eax
  00020	f3 a5		 rep movsd
$L259077:
  00022	83 c2 1c	 add	 edx, 28			; 0000001cH
  00025	83 c0 1c	 add	 eax, 28			; 0000001cH
  00028	3b d3		 cmp	 edx, ebx
  0002a	75 e7		 jne	 SHORT $L262156
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
$L259078:
  0002e	5b		 pop	 ebx

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)
; 85   : 		_Al.destroy(_Next);
; 86   : 	_RERAISE;
; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  0002f	c3		 ret	 0
??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
  00008	8b 10		 mov	 edx, DWORD PTR [eax]
  0000a	8b c8		 mov	 ecx, eax
  0000c	ff 52 0c	 call	 DWORD PTR [edx+12]
  0000f	83 c0 10	 add	 eax, 16			; 00000010H
  00012	89 06		 mov	 DWORD PTR [esi], eax

; 797  : 	}

  00014	8b c6		 mov	 eax, esi
  00016	5e		 pop	 esi
  00017	c3		 ret	 0
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L262237
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L262237:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 735  : 		CStringData* pOldData = GetData();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp]
  00019	2b d0		 sub	 edx, eax

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L262246

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L262246:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 744  : 	}

  0002a	c2 04 00	 ret	 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L262255

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L262255

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L262251
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L262251:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L262255:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L262283

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L262283:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L221371

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L221371:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L221372

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L221372:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L262328

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L262293
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L262294
$L262293:
  00036	8b d3		 mov	 edx, ebx
$L262294:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L262300
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L262301
$L262300:
  00041	8b cb		 mov	 ecx, ebx
$L262301:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L262323

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L262323:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L262328:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T262533 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T262535 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L262335
$T262536 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L262333
$T262534 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T262535
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T262536
$T262527 DD	019930520H
	DD	04H
	DD	FLAT:$T262533
	DD	02H
	DD	FLAT:$T262534
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L222778

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L222780
$L222778:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L222780
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L222780

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L222780:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L222782
$L262333:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L262528
  00092	c3		 ret	 0
$L262528:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L222782:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L262452

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L262449
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L262450
$L262449:
  000ae	83 c6 04	 add	 esi, 4
$L262450:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L262452:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L262488
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L262488:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L262523
  000f2	8b c2		 mov	 eax, edx
$L262523:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L262335:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L262427
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L262427:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L262538:
$L262532:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T262527
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T262546 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L262641
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L262639:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L262642
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L262643
$L262642:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L262643:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L262639
$L262641:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L262545
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L262545
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L262545:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T262546[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T262546[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L262755
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L262747:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L262747
  00021	5b		 pop	 ebx
$L262755:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Init
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ; std::_Uninitialized_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT
__Cat$262841 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 255  : 	{	// copy _Count *_Val to raw _First, using _Al

  00000	51		 push	 ecx

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$262841[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Count$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >

; 258  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ENDP ; std::_Uninitialized_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z PROC NEAR ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@0AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ENDP ; std::_Destroy_range<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAU__COLOSSEUM_MONSTER@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU2@00@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<__COLOSSEUM_MONSTER *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAU__COLOSSEUM_MONSTER@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$262863 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAU__COLOSSEUM_MONSTER@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU2@00@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<__COLOSSEUM_MONSTER *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$262863[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAU__COLOSSEUM_MONSTER@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU2@00@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<__COLOSSEUM_MONSTER *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ; std::_Uninitialized_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z
_TEXT	SEGMENT
__Cat$262873 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$262873[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@@Z ENDP ; std::_Uninitialized_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx
  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nMinBufferLength$[esp]
  00019	2b d0		 sub	 edx, eax
  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L262892
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L262892:
  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 491  : 	}

  0002a	c2 04 00	 ret	 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L262929
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L262929:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L262958
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L262958:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1981 : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

  00002	8b 74 24 10	 mov	 esi, DWORD PTR _nID$[esp+4]
  00006	8b c6		 mov	 eax, esi
  00008	c1 e8 04	 shr	 eax, 4
  0000b	57		 push	 edi
  0000c	8b 7c 24 10	 mov	 edi, DWORD PTR _hInstance$[esp+8]
  00010	40		 inc	 eax
  00011	8b d9		 mov	 ebx, ecx
  00013	0f b7 c8	 movzx	 ecx, ax
  00016	6a 06		 push	 6
  00018	51		 push	 ecx
  00019	57		 push	 edi
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12
  00020	85 c0		 test	 eax, eax
  00022	74 11		 je	 SHORT $L263039
  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	8b f8		 mov	 edi, eax
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1983 : 		if( pImage == NULL )

  00031	85 ff		 test	 edi, edi
  00033	75 08		 jne	 SHORT $L219928
$L263039:
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 1984 : 		{
; 1985 : 			return( FALSE );

  00037	33 c0		 xor	 eax, eax
  00039	5b		 pop	 ebx

; 1994 : 	}

  0003a	c2 08 00	 ret	 8
$L219928:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

  0003d	0f b7 37	 movzx	 esi, WORD PTR [edi]
  00040	55		 push	 ebp
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	6a 00		 push	 0
  0004d	6a 00		 push	 0
  0004f	56		 push	 esi
  00050	8d 6f 02	 lea	 ebp, DWORD PTR [edi+2]
  00053	55		 push	 ebp
  00054	6a 00		 push	 0
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0005d	8b f0		 mov	 esi, eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

  0005f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00061	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00064	83 e8 10	 sub	 eax, 16			; 00000010H
  00067	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006a	ba 01 00 00 00	 mov	 edx, 1
  0006f	2b d1		 sub	 edx, ecx
  00071	2b c6		 sub	 eax, esi
  00073	0b d0		 or	 edx, eax
  00075	7d 08		 jge	 SHORT $L263001
  00077	56		 push	 esi
  00078	8b cb		 mov	 ecx, ebx
  0007a	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L263001:
  0007f	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

  00081	0f b7 0f	 movzx	 ecx, WORD PTR [edi]
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	56		 push	 esi
  00089	50		 push	 eax
  0008a	51		 push	 ecx
  0008b	55		 push	 ebp
  0008c	6a 00		 push	 0
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 1991 : 		ReleaseBufferSetLength( nLength );

  0009b	85 f6		 test	 esi, esi
  0009d	5d		 pop	 ebp
  0009e	7c 1b		 jl	 SHORT $L263032
  000a0	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a2	3b 70 f8	 cmp	 esi, DWORD PTR [eax-8]
  000a5	7f 14		 jg	 SHORT $L263032
  000a7	89 70 f4	 mov	 DWORD PTR [eax-12], esi
  000aa	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000ac	5f		 pop	 edi
  000ad	c6 04 0e 00	 mov	 BYTE PTR [esi+ecx], 0
  000b1	5e		 pop	 esi

; 1992 : 
; 1993 : 		return( TRUE );

  000b2	b8 01 00 00 00	 mov	 eax, 1
  000b7	5b		 pop	 ebx

; 1994 : 	}

  000b8	c2 08 00	 ret	 8
$L263032:
  000bb	68 57 00 07 80	 push	 -2147024809		; 80070057H
  000c0	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L263041:
$L263040:
  000c5	cc		 int	 3
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L221380

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L221380:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L221381

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L221381:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L221383
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L221383
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L263046
  00047	8b de		 mov	 ebx, esi
$L263046:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L263100
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L263098
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L263098:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L263100:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L221383:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L263137

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L263135
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L263135:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L263137:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z ; CColosseumMng::GetMatchByParty
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
;	COMDAT ?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z
_TEXT	SEGMENT
_it$254272 = -4						; size = 4
_pParty$ = 8						; size = 4
?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z PROC NEAR ; CColosseumMng::GetMatchByParty, COMDAT
; _this$ = ecx

; 165  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi

; 166  : 	for( COLOSSEUMMATCH::iterator it = m_mapMatch.begin(); it != m_mapMatch.end(); it++ )

  00002	8b 71 1c	 mov	 esi, DWORD PTR [ecx+28]
  00005	8b 06		 mov	 eax, DWORD PTR [esi]
  00007	3b c6		 cmp	 eax, esi
  00009	57		 push	 edi
  0000a	89 44 24 08	 mov	 DWORD PTR _it$254272[esp+12], eax
  0000e	74 1c		 je	 SHORT $L254278
  00010	8b 4c 24 10	 mov	 ecx, DWORD PTR _pParty$[esp+8]
  00014	8b 39		 mov	 edi, DWORD PTR [ecx]
$L263188:

; 167  : 		if( pParty->m_uPartyId == it->first )

  00016	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00019	74 19		 je	 SHORT $L263263
  0001b	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$254272[esp+12]
  0001f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc
  00024	8b 44 24 08	 mov	 eax, DWORD PTR _it$254272[esp+12]
  00028	3b c6		 cmp	 eax, esi
  0002a	75 ea		 jne	 SHORT $L263188
$L254278:
  0002c	5f		 pop	 edi

; 170  : 		}
; 171  : 
; 172  : 
; 173  : 	return NULL;

  0002d	33 c0		 xor	 eax, eax
  0002f	5e		 pop	 esi

; 174  : }

  00030	59		 pop	 ecx
  00031	c2 04 00	 ret	 4
$L263263:

; 168  : 		{
; 169  : 			return it->second;

  00034	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi

; 174  : }

  00039	59		 pop	 ecx
  0003a	c2 04 00	 ret	 4
?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z ENDP ; CColosseumMng::GetMatchByParty
_TEXT	ENDS
PUBLIC	?GetMatchByMoverID@CColosseumMng@@QAEPAVCColosseumMatch@@K@Z ; CColosseumMng::GetMatchByMoverID
; Function compile flags: /Ogty
;	COMDAT ?GetMatchByMoverID@CColosseumMng@@QAEPAVCColosseumMatch@@K@Z
_TEXT	SEGMENT
_it$254284 = -4						; size = 4
_dwMoverID$ = 8						; size = 4
?GetMatchByMoverID@CColosseumMng@@QAEPAVCColosseumMatch@@K@Z PROC NEAR ; CColosseumMng::GetMatchByMoverID, COMDAT
; _this$ = ecx

; 177  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi

; 178  : 	for( COLOSSEUMMATCH::iterator it = m_mapMatch.begin(); it != m_mapMatch.end(); it++ )

  00002	8b 71 1c	 mov	 esi, DWORD PTR [ecx+28]
  00005	8b 06		 mov	 eax, DWORD PTR [esi]
  00007	3b c6		 cmp	 eax, esi
  00009	57		 push	 edi
  0000a	89 44 24 08	 mov	 DWORD PTR _it$254284[esp+12], eax
  0000e	74 21		 je	 SHORT $L254290
  00010	8b 7c 24 10	 mov	 edi, DWORD PTR _dwMoverID$[esp+8]
$L263314:

; 179  : 	{
; 180  : 		CColosseumMatch* cMatch = it->second;

  00014	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 181  : 		if( cMatch && cMatch->m_nMoverID == dwMoverID )

  00017	85 c0		 test	 eax, eax
  00019	74 05		 je	 SHORT $L254289
  0001b	39 78 2c	 cmp	 DWORD PTR [eax+44], edi
  0001e	74 13		 je	 SHORT $L254283
$L254289:

; 178  : 	for( COLOSSEUMMATCH::iterator it = m_mapMatch.begin(); it != m_mapMatch.end(); it++ )

  00020	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$254284[esp+12]
  00024	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc
  00029	8b 44 24 08	 mov	 eax, DWORD PTR _it$254284[esp+12]
  0002d	3b c6		 cmp	 eax, esi
  0002f	75 e3		 jne	 SHORT $L263314
$L254290:

; 182  : 			return cMatch;
; 183  : 	}
; 184  : 
; 185  : 	return NULL;

  00031	33 c0		 xor	 eax, eax
$L254283:
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi

; 186  : }

  00035	59		 pop	 ecx
  00036	c2 04 00	 ret	 4
?GetMatchByMoverID@CColosseumMng@@QAEPAVCColosseumMatch@@K@Z ENDP ; CColosseumMng::GetMatchByMoverID
_TEXT	ENDS
PUBLIC	??1CColosseumMatch@@UAE@XZ			; CColosseumMatch::~CColosseumMatch
PUBLIC	??_7CColosseumMatch@@6B@			; CColosseumMatch::`vftable'
PUBLIC	??_GCColosseumMatch@@UAEPAXI@Z			; CColosseumMatch::`scalar deleting destructor'
EXTRN	??_ECColosseumMatch@@UAEPAXI@Z:NEAR		; CColosseumMatch::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T263400 DD	0ffffffffH
	DD	FLAT:$L263371
$T263397 DD	019930520H
	DD	01H
	DD	FLAT:$T263400
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CColosseumMatch@@6B@
CONST	SEGMENT
??_7CColosseumMatch@@6B@ DD FLAT:??_ECColosseumMatch@@UAEPAXI@Z ; CColosseumMatch::`vftable'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
CONST	ENDS
;	COMDAT ??1CColosseumMatch@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CColosseumMatch@@UAE@XZ PROC NEAR			; CColosseumMatch::~CColosseumMatch, COMDAT
; _this$ = ecx

; 198  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CColosseumMatch@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CColosseumMatch@@6B@
  00024	33 db		 xor	 ebx, ebx

; 199  : 	CWorld* pWorld = g_WorldMng.GetWorld( WI_WORLD_COLOSSEUM );

  00026	68 e7 00 00 00	 push	 231			; 000000e7H
  0002b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_WorldMng@@3VCWorldMng@@A
  00030	89 5c 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], ebx
  00034	e8 00 00 00 00	 call	 ?GetWorld@CWorldMng@@QAEPAVCWorld@@K@Z ; CWorldMng::GetWorld

; 200  : 	if( pWorld && pWorld->m_linkMap.GetLinkMap( static_cast<int>( m_uPartyID ) ) )

  00039	3b c3		 cmp	 eax, ebx
  0003b	74 21		 je	 SHORT $L263374
  0003d	57		 push	 edi
  0003e	8d 78 24	 lea	 edi, DWORD PTR [eax+36]
  00041	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00044	50		 push	 eax
  00045	8b cf		 mov	 ecx, edi
  00047	e8 00 00 00 00	 call	 ?GetLinkMap@CLayeredLinkMap@@QAEPAVCLinkMap@@H@Z ; CLayeredLinkMap::GetLinkMap
  0004c	85 c0		 test	 eax, eax
  0004e	74 0d		 je	 SHORT $L263399

; 201  : 		pWorld->Invalidate( m_uPartyID );

  00050	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00053	6a 01		 push	 1
  00055	51		 push	 ecx
  00056	8b cf		 mov	 ecx, edi
  00058	e8 00 00 00 00	 call	 ?Invalidate@CLayeredLinkMap@@QAEXHH@Z ; CLayeredLinkMap::Invalidate
$L263399:
  0005d	5f		 pop	 edi
$L263374:

; 202  : }

  0005e	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00061	3b c3		 cmp	 eax, ebx
  00063	74 09		 je	 SHORT $L263392
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006b	83 c4 04	 add	 esp, 4
$L263392:
  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	89 5e 20	 mov	 DWORD PTR [esi+32], ebx
  00075	89 5e 24	 mov	 DWORD PTR [esi+36], ebx
  00078	89 5e 28	 mov	 DWORD PTR [esi+40], ebx
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00084	83 c4 10	 add	 esp, 16			; 00000010H
  00087	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L263371:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$??1CColosseumMatch@@UAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T263397
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CColosseumMatch@@UAE@XZ ENDP				; CColosseumMatch::~CColosseumMatch
PUBLIC	?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::FormatV
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT
_pszFormat$ = 8						; size = 4
_args$ = 12						; size = 4
?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::FormatV, COMDAT
; _this$ = ecx

; 1855 : 	{

  00000	53		 push	 ebx

; 1856 : 		ATLASSERT( AtlIsValidString( pszFormat ) );
; 1857 : 		if(pszFormat == NULL)

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _pszFormat$[esp]
  00005	85 db		 test	 ebx, ebx
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	75 0a		 jne	 SHORT $L255687

; 1858 : 			AtlThrow(E_INVALIDARG);

  0000c	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00011	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L263466:
$L255687:
  00016	55		 push	 ebp

; 1859 : 
; 1860 : 		int nLength = StringTraits::GetFormattedLength( pszFormat, args );

  00017	8b 6c 24 14	 mov	 ebp, DWORD PTR _args$[esp+8]
  0001b	56		 push	 esi
  0001c	55		 push	 ebp
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 __vscprintf
  00023	8b f0		 mov	 esi, eax

; 1861 : 		PXSTR pszBuffer = GetBuffer( nLength );

  00025	8b 07		 mov	 eax, DWORD PTR [edi]
  00027	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0002a	83 e8 10	 sub	 eax, 16			; 00000010H
  0002d	b9 01 00 00 00	 mov	 ecx, 1
  00032	2b ca		 sub	 ecx, edx
  00034	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00037	2b d6		 sub	 edx, esi
  00039	83 c4 08	 add	 esp, 8
  0003c	0b ca		 or	 ecx, edx
  0003e	7d 08		 jge	 SHORT $L263431
  00040	56		 push	 esi
  00041	8b cf		 mov	 ecx, edi
  00043	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L263431:

; 1862 : 		StringTraits::Format( pszBuffer, pszFormat, args );

  00048	8b 07		 mov	 eax, DWORD PTR [edi]
  0004a	55		 push	 ebp
  0004b	53		 push	 ebx
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _vsprintf
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1863 : 		ReleaseBufferSetLength( nLength );

  00055	85 f6		 test	 esi, esi
  00057	7c 17		 jl	 SHORT $L263461
  00059	8b 07		 mov	 eax, DWORD PTR [edi]
  0005b	3b 70 f8	 cmp	 esi, DWORD PTR [eax-8]
  0005e	7f 10		 jg	 SHORT $L263461
  00060	89 70 f4	 mov	 DWORD PTR [eax-12], esi
  00063	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00065	c6 04 0e 00	 mov	 BYTE PTR [esi+ecx], 0
  00069	5e		 pop	 esi
  0006a	5d		 pop	 ebp
  0006b	5f		 pop	 edi
  0006c	5b		 pop	 ebx

; 1864 : 	}

  0006d	c2 08 00	 ret	 8
$L263461:
  00070	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00075	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L263467:
$L263465:
  0007a	cc		 int	 3
?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::FormatV
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ufill
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$263601 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ufill, COMDAT
; _this$ = ecx

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$263601[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	8b 4c 24 1c	 mov	 ecx, DWORD PTR __Val$[esp+12]
  00014	51		 push	 ecx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >

; 879  : 		return (_Ptr + _Count);

  0001c	8b c6		 mov	 eax, esi
  0001e	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00021	83 c4 14	 add	 esp, 20			; 00000014H
  00024	03 c7		 add	 eax, edi
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 880  : 		}

  00028	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXPAU__COLOSSEUM_MONSTER@@0@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXPAU__COLOSSEUM_MONSTER@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXPAU__COLOSSEUM_MONSTER@@0@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXPAU__COLOSSEUM_MONSTER@@0@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Ucopy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@Vconst_iterator@01@0PAU2@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@Vconst_iterator@01@0PAU2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$263618 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@Vconst_iterator@01@0PAU2@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$263618[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@Vconst_iterator@01@0PAU2@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ucopy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator>
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L263684
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L263684:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L263718
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L263718:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L263725
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L263725:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1969 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nID$[esp+4]
  00006	57		 push	 edi
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 1971 : 		if( hInst == NULL )

  0000e	85 c0		 test	 eax, eax
  00010	75 05		 jne	 SHORT $L218601
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi

; 1977 : 	}

  00014	c2 04 00	 ret	 4
$L218601:

; 1972 : 		{
; 1973 : 			return( FALSE );
; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

  00017	57		 push	 edi
  00018	50		 push	 eax
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 1977 : 	}

  00022	c2 04 00	 ret	 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L220001

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L220001:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L220003

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L220003:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L220004

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L220004:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L263840
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L263840:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L263841
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L263928:
  0006b	76 6d		 jbe	 SHORT $L263927

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L263892
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L263893

; 599  : 		else if (_Grow(_Num))

$L263841:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L263928
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L263884
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L263884:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L263892:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L263893:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L263900
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L263901
$L263900:
  000b7	8b f8		 mov	 edi, eax
$L263901:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L263924
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L263924:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L263927:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L263954
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L263955
$L263954:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L263955:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L221367
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L263958
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L263959
$L263958:
  00029	8b c8		 mov	 ecx, eax
$L263959:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L221367

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L263967
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L263967:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L221367:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L264065
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L264065:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L264066
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L264146:
  00077	76 68		 jbe	 SHORT $L264143

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L264118
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L264119

; 611  : 
; 612  : 		if (_Grow(_Num))

$L264066:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L264146
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L264109
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L264109:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L264118:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L264119:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L264141
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L264141:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L264143:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCColosseumMatch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCColosseumMatch@@UAEPAXI@Z PROC NEAR		; CColosseumMatch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CColosseumMatch@@UAE@XZ ; CColosseumMatch::~CColosseumMatch
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L264150
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L264150:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCColosseumMatch@@UAEPAXI@Z ENDP			; CColosseumMatch::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T264234 DD	0ffffffffH
	DD	FLAT:$L264154
$T264232 DD	019930520H
	DD	01H
	DD	FLAT:$T264234
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_strFormat$ = 8						; size = 4
_this$ = 8						; size = 4
_nFormatID$ = 12					; size = 4
?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format, COMDAT

; 1806 : 	{

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	53		 push	 ebx

; 1807 : 		CStringT strFormat( GetManager() );

  00016	8b 5c 24 14	 mov	 ebx, DWORD PTR _this$[esp+12]
  0001a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001c	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	ff 52 10	 call	 DWORD PTR [edx+16]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b c8		 mov	 ecx, eax
  0002a	ff 52 0c	 call	 DWORD PTR [edx+12]
  0002d	8d 70 10	 lea	 esi, DWORD PTR [eax+16]
  00030	89 74 24 1c	 mov	 DWORD PTR _strFormat$[esp+20], esi

; 1808 : 		ATLVERIFY( strFormat.LoadString( nFormatID ) );

  00034	8b 44 24 20	 mov	 eax, DWORD PTR _nFormatID$[esp+20]
  00038	50		 push	 eax
  00039	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00041	8b f8		 mov	 edi, eax
  00043	e8 00 00 00 00	 call	 ?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle
  00048	85 c0		 test	 eax, eax
  0004a	74 0f		 je	 SHORT $L264196
  0004c	57		 push	 edi
  0004d	50		 push	 eax
  0004e	8d 4c 24 24	 lea	 ecx, DWORD PTR _strFormat$[esp+28]
  00052	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00057	8b 74 24 1c	 mov	 esi, DWORD PTR _strFormat$[esp+20]
$L264196:

; 1809 : 
; 1810 : 		va_list argList;
; 1811 : 		va_start( argList, nFormatID );
; 1812 : 		FormatV( strFormat, argList );

  0005b	8d 44 24 24	 lea	 eax, DWORD PTR _nFormatID$[esp+24]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	8b cb		 mov	 ecx, ebx
  00063	e8 00 00 00 00	 call	 ?FormatV@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEXPBDPAD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::FormatV

; 1813 : 		va_end( argList );
; 1814 : 	}

  00068	8d 46 f0	 lea	 eax, DWORD PTR [esi-16]
  0006b	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00073	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00076	83 ca ff	 or	 edx, -1
  00079	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0007d	4a		 dec	 edx
  0007e	85 d2		 test	 edx, edx
  00080	7f 08		 jg	 SHORT $L264227
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	8b 11		 mov	 edx, DWORD PTR [ecx]
  00086	50		 push	 eax
  00087	ff 52 04	 call	 DWORD PTR [edx+4]
$L264227:
  0008a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00097	5b		 pop	 ebx
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264154:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strFormat$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264232
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format
PUBLIC	?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L264242

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L264242:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L264318:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L264318
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::~vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::~vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L264330
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L264330:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::~vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T264436 DD	0ffffffffH
	DD	FLAT:$L264336
$T264434 DD	019930520H
	DD	01H
	DD	FLAT:$T264436
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264336:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264434
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L264446
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L264446:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L264533
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L264533:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L264560
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L264560:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L264647
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L264647:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L264742:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L264742
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T264863 DD	0ffffffffH
	DD	FLAT:$L264748
$T264860 DD	019930520H
	DD	01H
	DD	FLAT:$T264863
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T264747 = -80						; size = 28
$T264746 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T264747[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T264747[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T264747[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T264747[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T264747[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T264746[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T264746[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T264746[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L264864:
$L264862:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264748:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T264747[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264860
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
;	COMDAT xdata$x
xdata$x	SEGMENT
$T264970 DD	0ffffffffH
	DD	FLAT:$L264870
$T264968 DD	019930520H
	DD	01H
	DD	FLAT:$T264970
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264870:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264968
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T265472 DD	0ffffffffH
	DD	FLAT:$L264986
$T265464 DD	019930520H
	DD	01H
	DD	FLAT:$T265472
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T264981 = -80						; size = 28
$T264980 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L254692

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T264981[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T264981[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T264981[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T264981[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T264981[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T264980[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T264980[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T264980[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L265473:
$L254692:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L254700

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L265467
$L254700:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L254702

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L265467
$L254702:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L254704
$L265467:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L254705

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L254705:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L254706

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L254709
$L254706:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L254708

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L254709
$L254708:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L254709:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L254710

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L264982
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L264983
$L264982:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L264983:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L254710:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L265301

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L264984
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L265301
$L264984:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L265301
$L254704:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L254713

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L254714
$L254713:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L254715

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L254715:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L254714:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L254716

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L254719
$L254716:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L254718

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L254719
$L254718:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L254719:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L265301:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L254720

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L254723
  0018e	8b ff		 npad	 2
$L254721:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L254723

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L254724

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L254725

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L254725:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L265470

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L254728
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L265471
$L254728:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L254730

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L254730:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L254723
$L254724:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L254732

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L254732:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L265470

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L254735
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L254735
$L265471:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L265470:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L254721

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L254723
$L254735:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L254737

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L254737:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate
$L254723:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L254720:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L254738

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L254738:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L265469:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264986:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T264981[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T265464
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T265600 DD	0ffffffffH
	DD	FLAT:$L265485
$T265597 DD	019930520H
	DD	01H
	DD	FLAT:$T265600
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T265484 = -80						; size = 28
$T265483 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran, COMDAT
; _this$ = ecx

; 888  : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 889  : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00018	6a 1b		 push	 27			; 0000001bH
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T265484[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T265484[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T265484[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T265484[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T265484[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T265483[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T265483[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T265483[esp+88], OFFSET FLAT:??_7out_of_range@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L265601:
$L265599:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L265485:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T265484[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T265597
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T265979 DD	0ffffffffH
	DD	FLAT:$L265609
$T265974 DD	019930520H
	DD	01H
	DD	FLAT:$T265979
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT
$T265608 = -80						; size = 28
$T265607 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L255884

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T265608[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T265608[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T265608[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T265608[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T265608[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T265607[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T265607[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T265607[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L265980:
$L255884:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCColosseumMatch@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L255889

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L255894
$L255889:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L255891

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L255894

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L255894
$L255891:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L255894

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L255894:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L255898
  000e5	55		 push	 ebp
$L255897:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L255899

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L255900
$L265978:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L255905
$L255900:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L255902

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate
$L255902:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L255905
$L255899:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L265978

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L255906

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Rrotate
$L255906:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Lrotate
$L255905:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L255897
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L255898:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L265977:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L265609:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T265608[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T265974
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Insert
PUBLIC	?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T266103 DD	0ffffffffH
	DD	FLAT:$L265988
$T266100 DD	019930520H
	DD	01H
	DD	FLAT:$T266103
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T265987 = -80						; size = 28
$T265986 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran, COMDAT
; _this$ = ecx

; 888  : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 889  : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00018	6a 1b		 push	 27			; 0000001bH
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T265987[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T265987[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T265987[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T265987[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T265987[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T265986[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T265986[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T265986[esp+88], OFFSET FLAT:??_7out_of_range@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L266104:
$L266102:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L265988:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T265987[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T266100
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
PUBLIC	?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z
_TEXT	SEGMENT
__Newvec$256332 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L266121
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L266122
$L266121:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L266122:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L256352

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L266144
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L266145
$L266144:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L266145:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L256328

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L266275:
$L256328:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L266151
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L266152
$L266151:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L266152:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L256330

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L266110
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L266111
$L266110:
  0007f	03 c1		 add	 eax, ecx
$L266111:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L266174
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L266175
$L266174:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L266175:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L256331

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L266181
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L266182
$L266181:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L266182:
  000a7	03 c7		 add	 eax, edi
$L256331:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$256332[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L266262
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L266263
$L266262:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L266263:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L266267

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L266267:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$256332[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L256330:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L256343
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAKK@std@@YAXPAK0ABK@Z ; std::fill<unsigned long *,unsigned long>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L256343:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z ; std::copy_backward<unsigned long *,unsigned long *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAKK@std@@YAXPAK0ABK@Z ; std::fill<unsigned long *,unsigned long>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L256352:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L266274:
?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T266282 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L266614
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L266614

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L266614:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L256427
$L256426:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L266607
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L266616
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L266607
  0006e	8b ff		 npad	 2
$L266595:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L266595
  0007b	eb 1d		 jmp	 SHORT $L266607
$L266616:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L266610
$L266609:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L266610
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L266609
$L266610:
  00098	8b f0		 mov	 esi, eax
$L266607:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T266282[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L256426
$L256427:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T266740 DD	0ffffffffH
	DD	FLAT:$L266625
$T266737 DD	019930520H
	DD	01H
	DD	FLAT:$T266740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T266624 = -80						; size = 28
$T266623 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T266624[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T266624[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T266624[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T266624[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T266624[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T266623[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T266623[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T266623[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L266741:
$L266739:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L266625:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T266624[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T266737
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen
PUBLIC	?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L220539

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L220539:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L220541

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L266772:
$L220541:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L266771:
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
_TEXT	ENDS
PUBLIC	?DestroyMatch@CColosseumMng@@QAEXK@Z		; CColosseumMng::DestroyMatch
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
;	COMDAT ?DestroyMatch@CColosseumMng@@QAEXK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
$T266781 = 8						; size = 4
_m_uPartyID$ = 8					; size = 4
?DestroyMatch@CColosseumMng@@QAEXK@Z PROC NEAR		; CColosseumMng::DestroyMatch, COMDAT
; _this$ = ecx

; 111  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	56		 push	 esi
  00003	57		 push	 edi
  00004	8b f1		 mov	 esi, ecx

; 112  : 	COLOSSEUMMATCH::iterator it=m_mapMatch.find( m_uPartyID );

  00006	8d 44 24 14	 lea	 eax, DWORD PTR _m_uPartyID$[esp+12]
  0000a	50		 push	 eax
  0000b	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+20]
  0000f	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
  00012	51		 push	 ecx
  00013	8b cf		 mov	 ecx, edi
  00015	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find

; 113  : 	if( it == m_mapMatch.end() )

  0001a	8b 5c 24 0c	 mov	 ebx, DWORD PTR _it$[esp+16]
  0001e	3b 5e 1c	 cmp	 ebx, DWORD PTR [esi+28]
  00021	74 1a		 je	 SHORT $L254230

; 114  : 	{
; 115  : 		return;
; 116  : 	}
; 117  : 		
; 118  : 	safe_delete ( it->second );

  00023	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00026	85 c9		 test	 ecx, ecx
  00028	74 06		 je	 SHORT $L266779
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	6a 01		 push	 1
  0002e	ff 12		 call	 DWORD PTR [edx]
$L266779:

; 119  : 	m_mapMatch.erase( it );

  00030	53		 push	 ebx
  00031	8d 44 24 18	 lea	 eax, DWORD PTR $T266781[esp+16]
  00035	50		 push	 eax
  00036	8b cf		 mov	 ecx, edi
  00038	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
$L254230:
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx

; 120  : }

  00040	59		 pop	 ecx
  00041	c2 04 00	 ret	 4
?DestroyMatch@CColosseumMng@@QAEXK@Z ENDP		; CColosseumMng::DestroyMatch
_TEXT	ENDS
PUBLIC	?at@?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::at
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?at@?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::at, COMDAT
; _this$ = ecx

; 543  : 		if (size() <= _Pos)

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	56		 push	 esi
  00006	74 10		 je	 SHORT $L266870
  00008	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000b	8b 74 24 08	 mov	 esi, DWORD PTR __Pos$[esp]
  0000f	2b c2		 sub	 eax, edx
  00011	c1 f8 02	 sar	 eax, 2
  00014	3b c6		 cmp	 eax, esi
  00016	77 05		 ja	 SHORT $L254453
$L266870:

; 544  : 			_Xran();

  00018	e8 00 00 00 00	 call	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L266872:
$L254453:

; 545  : 		return (*(begin() + _Pos));

  0001d	8d 04 b2	 lea	 eax, DWORD PTR [edx+esi*4]
  00020	5e		 pop	 esi

; 546  : 		}

  00021	c2 04 00	 ret	 4
$L266871:
?at@?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::at
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T266884 = 12						; size = 4
$T266882 = 12						; size = 4
__Where$254672 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L254662
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L254661:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L266876
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L266877
$L266876:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L266877:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L254661
$L254662:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$254672[esp+12], edx
  00045	74 33		 je	 SHORT $L266977

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T266882[esp+12]
  00050	75 1f		 jne	 SHORT $L254677
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L254677:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$254672[esp+12]
$L266977:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L254682

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T266884[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L254682:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?at@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAU__COLOSSEUM_MONSTER@@I@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::at
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?at@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAU__COLOSSEUM_MONSTER@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAU__COLOSSEUM_MONSTER@@I@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::at, COMDAT
; _this$ = ecx

; 542  : 		{	// subscript mutable sequence with checking

  00000	57		 push	 edi

; 543  : 		if (size() <= _Pos)

  00001	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00004	85 ff		 test	 edi, edi
  00006	74 22		 je	 SHORT $L267055
  00008	56		 push	 esi
  00009	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  0000c	2b f7		 sub	 esi, edi
  0000e	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00013	f7 ee		 imul	 esi
  00015	03 d6		 add	 edx, esi
  00017	c1 fa 04	 sar	 edx, 4
  0001a	8b c2		 mov	 eax, edx
  0001c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001f	03 c2		 add	 eax, edx
  00021	8b 54 24 0c	 mov	 edx, DWORD PTR __Pos$[esp+4]
  00025	3b c2		 cmp	 eax, edx
  00027	5e		 pop	 esi
  00028	77 05		 ja	 SHORT $L254852
$L267055:

; 544  : 			_Xran();

  0002a	e8 00 00 00 00	 call	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L267057:
$L254852:

; 545  : 		return (*(begin() + _Pos));

  0002f	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00032	03 d7		 add	 edx, edi
  00034	8b c2		 mov	 eax, edx
  00036	5f		 pop	 edi

; 546  : 		}

  00037	c2 04 00	 ret	 4
$L267056:
?at@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEAAU__COLOSSEUM_MONSTER@@I@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::at
_TEXT	ENDS
PUBLIC	?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L267123
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L267062
$L267123:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L267063
$L267062:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L267063:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T267129 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T267129[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE_NI@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Buy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Buy, COMDAT
; _this$ = ecx

; 770  : 		{	// allocate array with _Capacity elements

  00000	56		 push	 esi

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00001	33 c0		 xor	 eax, eax
  00003	57		 push	 edi

; 772  : 		if (_Capacity == 0)

  00004	8b 7c 24 0c	 mov	 edi, DWORD PTR __Capacity$[esp+4]
  00008	3b f8		 cmp	 edi, eax
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00012	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00015	75 07		 jne	 SHORT $L255982
  00017	5f		 pop	 edi

; 773  : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	5e		 pop	 esi

; 783  : 		}

  0001b	c2 04 00	 ret	 4
$L255982:

; 774  : 		else if (max_size() < _Capacity)

  0001e	81 ff 49 92 24
	09		 cmp	 edi, 153391689		; 09249249H
  00024	76 07		 jbe	 SHORT $L255984

; 775  : 			_Xlen();	// result too long

  00026	8b ce		 mov	 ecx, esi
  00028	e8 00 00 00 00	 call	 ?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen
$L267217:
$L255984:

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002d	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00036	03 f8		 add	 edi, eax
  00038	83 c4 04	 add	 esp, 4
  0003b	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00044	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00045	b0 01		 mov	 al, 1
  00047	5e		 pop	 esi

; 783  : 		}

  00048	c2 04 00	 ret	 4
$L267216:
?_Buy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Buy
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
xdata$x	SEGMENT
$T267432 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T267434 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L267224
$T267435 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L267226
$T267433 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T267434
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T267435
$T267429 DD	019930520H
	DD	04H
	DD	FLAT:$T267432
	DD	02H
	DD	FLAT:$T267433
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Tmp$ = -44						; size = 28
__$EHRec$ = -16						; size = 16
tv453 = 8						; size = 4
tv427 = 8						; size = 4
tv414 = 8						; size = 4
__Cat$267400 = 8					; size = 1
__Cat$267424 = 8					; size = 1
__Cat$267338 = 8					; size = 1
__Cat$267361 = 8					; size = 1
__Cat$267315 = 8					; size = 1
__Where$ = 8						; size = 4
__Ptr$256483 = 12					; size = 4
__Count$ = 12						; size = 4
tv398 = 16						; size = 4
__Newvec$256482 = 16					; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	53		 push	 ebx
  0001c	56		 push	 esi

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  0001d	8b 75 10	 mov	 esi, DWORD PTR __Val$[ebp]
  00020	57		 push	 edi
  00021	8b d9		 mov	 ebx, ecx
  00023	b9 07 00 00 00	 mov	 ecx, 7
  00028	8d 7d d4	 lea	 edi, DWORD PTR __Tmp$[ebp]
  0002b	f3 a5		 rep movsd

; 811  : 		size_type _Capacity = capacity();

  0002d	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00030	85 ff		 test	 edi, edi
  00032	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00035	75 04		 jne	 SHORT $L267232
  00037	33 c9		 xor	 ecx, ecx
  00039	eb 18		 jmp	 SHORT $L267233
$L267232:
  0003b	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  0003e	2b cf		 sub	 ecx, edi
  00040	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00045	f7 e9		 imul	 ecx
  00047	03 d1		 add	 edx, ecx
  00049	c1 fa 04	 sar	 edx, 4
  0004c	8b ca		 mov	 ecx, edx
  0004e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00051	03 ca		 add	 ecx, edx
$L267233:

; 812  : 
; 813  : 		if (_Count == 0)

  00053	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
  00056	85 f6		 test	 esi, esi
  00058	0f 84 59 02 00
	00		 je	 $L256502

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0005e	85 ff		 test	 edi, edi
  00060	75 04		 jne	 SHORT $L267255
  00062	33 c0		 xor	 eax, eax
  00064	eb 1b		 jmp	 SHORT $L267256
$L267255:
  00066	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00069	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  0006c	2b fa		 sub	 edi, edx
  0006e	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00073	f7 ef		 imul	 edi
  00075	03 d7		 add	 edx, edi
  00077	c1 fa 04	 sar	 edx, 4
  0007a	8b c2		 mov	 eax, edx
  0007c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0007f	03 c2		 add	 eax, edx
$L267256:
  00081	ba 49 92 24 09	 mov	 edx, 153391689		; 09249249H
  00086	2b d0		 sub	 edx, eax
  00088	3b d6		 cmp	 edx, esi
  0008a	73 07		 jae	 SHORT $L256478

; 816  : 			_Xlen();	// result too long

  0008c	8b cb		 mov	 ecx, ebx
  0008e	e8 00 00 00 00	 call	 ?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen
$L267436:
$L256478:

; 817  : 		else if (_Capacity < size() + _Count)

  00093	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00096	85 c0		 test	 eax, eax
  00098	75 04		 jne	 SHORT $L267262
  0009a	33 c0		 xor	 eax, eax
  0009c	eb 1b		 jmp	 SHORT $L267263
$L267262:
  0009e	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  000a1	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  000a4	2b fa		 sub	 edi, edx
  000a6	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000ab	f7 ef		 imul	 edi
  000ad	03 d7		 add	 edx, edi
  000af	c1 fa 04	 sar	 edx, 4
  000b2	8b c2		 mov	 eax, edx
  000b4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000b7	03 c2		 add	 eax, edx
$L267263:
  000b9	03 c6		 add	 eax, esi
  000bb	3b c8		 cmp	 ecx, eax
  000bd	0f 83 19 01 00
	00		 jae	 $L256480

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  000c3	8b c1		 mov	 eax, ecx
  000c5	d1 e8		 shr	 eax, 1
  000c7	ba 49 92 24 09	 mov	 edx, 153391689		; 09249249H
  000cc	2b d0		 sub	 edx, eax
  000ce	3b d1		 cmp	 edx, ecx
  000d0	73 04		 jae	 SHORT $L267221
  000d2	33 c9		 xor	 ecx, ecx
  000d4	eb 02		 jmp	 SHORT $L267222
$L267221:
  000d6	03 c8		 add	 ecx, eax
$L267222:

; 821  : 			if (_Capacity < size() + _Count)

  000d8	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000db	85 c0		 test	 eax, eax
  000dd	75 04		 jne	 SHORT $L267284
  000df	33 c0		 xor	 eax, eax
  000e1	eb 1b		 jmp	 SHORT $L267285
$L267284:
  000e3	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  000e6	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  000e9	2b fa		 sub	 edi, edx
  000eb	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000f0	f7 ef		 imul	 edi
  000f2	03 d7		 add	 edx, edi
  000f4	c1 fa 04	 sar	 edx, 4
  000f7	8b c2		 mov	 eax, edx
  000f9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000fc	03 c2		 add	 eax, edx
$L267285:
  000fe	03 c6		 add	 eax, esi
  00100	3b c8		 cmp	 ecx, eax
  00102	73 0b		 jae	 SHORT $L256481

; 822  : 				_Capacity = size() + _Count;

  00104	8b cb		 mov	 ecx, ebx
  00106	e8 00 00 00 00	 call	 ?size@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QBEIXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::size
  0010b	8b c8		 mov	 ecx, eax
  0010d	03 ce		 add	 ecx, esi
$L256481:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  0010f	8b f9		 mov	 edi, ecx
  00111	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00114	57		 push	 edi
  00115	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  0011a	8b 55 08	 mov	 edx, DWORD PTR __Cat$267315[ebp]
  0011d	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00120	52		 push	 edx
  00121	53		 push	 ebx
  00122	50		 push	 eax
  00123	89 45 10	 mov	 DWORD PTR __Newvec$256482[ebp], eax
  00126	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00129	50		 push	 eax
  0012a	51		 push	 ecx
  0012b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00132	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  00137	8b 4d 08	 mov	 ecx, DWORD PTR __Cat$267338[ebp]
  0013a	83 c4 18	 add	 esp, 24			; 00000018H
  0013d	51		 push	 ecx
  0013e	53		 push	 ebx
  0013f	8d 55 d4	 lea	 edx, DWORD PTR __Tmp$[ebp]
  00142	52		 push	 edx
  00143	56		 push	 esi
  00144	50		 push	 eax
  00145	89 45 0c	 mov	 DWORD PTR __Ptr$256483[ebp], eax
  00148	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  0014d	8b 55 08	 mov	 edx, DWORD PTR __Cat$267361[ebp]
  00150	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$256483[ebp]
  00153	8b c6		 mov	 eax, esi
  00155	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00158	83 c4 14	 add	 esp, 20			; 00000014H
  0015b	52		 push	 edx
  0015c	03 c8		 add	 ecx, eax
  0015e	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00161	53		 push	 ebx
  00162	51		 push	 ecx
  00163	50		 push	 eax
  00164	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00167	50		 push	 eax
  00168	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  0016d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00170	83 c4 14	 add	 esp, 20			; 00000014H
  00173	85 c0		 test	 eax, eax
  00175	74 18		 je	 SHORT $L267373
$L267372:
  00177	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0017a	2b c8		 sub	 ecx, eax
  0017c	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00181	f7 e9		 imul	 ecx
  00183	03 d1		 add	 edx, ecx
  00185	c1 fa 04	 sar	 edx, 4
  00188	8b c2		 mov	 eax, edx
  0018a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0018d	03 c2		 add	 eax, edx
$L267373:
  0018f	03 f0		 add	 esi, eax

; 838  : 			if (_Myfirst != 0)

  00191	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00194	85 c0		 test	 eax, eax
  00196	74 09		 je	 SHORT $L267377

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0019e	83 c4 04	 add	 esp, 4
$L267377:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  001a1	8b 45 10	 mov	 eax, DWORD PTR __Newvec$256482[ebp]

; 844  : 			_Mylast = _Newvec + _Count;

  001a4	6b f6 1c	 imul	 esi, 28			; 0000001cH
  001a7	03 f8		 add	 edi, eax
  001a9	03 f0		 add	 esi, eax
  001ab	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  001ae	89 73 08	 mov	 DWORD PTR [ebx+8], esi

; 845  : 			_Myfirst = _Newvec;

  001b1	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 873  : 			}
; 874  : 		}

  001b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	5b		 pop	 ebx
  001c1	8b e5		 mov	 esp, ebp
  001c3	5d		 pop	 ebp
  001c4	c2 0c 00	 ret	 12			; 0000000cH
$L267224:

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);

  001c7	8b 4d 10	 mov	 ecx, DWORD PTR __Newvec$256482[ebp]
  001ca	51		 push	 ecx
  001cb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001d0	83 c4 04	 add	 esp, 4
$L267226:

; 834  : 			_RERAISE;

  001d3	6a 00		 push	 0
  001d5	6a 00		 push	 0
  001d7	e8 00 00 00 00	 call	 __CxxThrowException@8
$L267437:
$L256480:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  001dc	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  001df	8b 7d 08	 mov	 edi, DWORD PTR __Where$[ebp]
  001e2	8b d1		 mov	 edx, ecx
  001e4	2b d7		 sub	 edx, edi
  001e6	89 55 08	 mov	 DWORD PTR tv453[ebp], edx
  001e9	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  001ee	f7 ea		 imul	 edx
  001f0	03 55 08	 add	 edx, DWORD PTR tv453[ebp]
  001f3	c1 fa 04	 sar	 edx, 4
  001f6	8b c2		 mov	 eax, edx
  001f8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001fb	03 c2		 add	 eax, edx
  001fd	3b c6		 cmp	 eax, esi
  001ff	89 4d 10	 mov	 DWORD PTR tv398[ebp], ecx
  00202	73 7b		 jae	 SHORT $L256493

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00204	8b c6		 mov	 eax, esi
  00206	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00209	89 45 08	 mov	 DWORD PTR tv414[ebp], eax
  0020c	8b 55 08	 mov	 edx, DWORD PTR __Cat$267400[ebp]
  0020f	52		 push	 edx
  00210	53		 push	 ebx
  00211	03 c7		 add	 eax, edi
  00213	50		 push	 eax
  00214	51		 push	 ecx
  00215	57		 push	 edi
  00216	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0021b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0021e	83 c4 14	 add	 esp, 20			; 00000014H
  00221	2b cf		 sub	 ecx, edi
  00223	8d 45 d4	 lea	 eax, DWORD PTR __Tmp$[ebp]
  00226	50		 push	 eax
  00227	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0022c	f7 e9		 imul	 ecx
  0022e	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00231	03 d1		 add	 edx, ecx
  00233	c1 fa 04	 sar	 edx, 4
  00236	8b ca		 mov	 ecx, edx
  00238	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0023b	03 ca		 add	 ecx, edx
  0023d	2b f1		 sub	 esi, ecx
  0023f	56		 push	 esi
  00240	50		 push	 eax
  00241	8b cb		 mov	 ecx, ebx
  00243	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  0024a	e8 00 00 00 00	 call	 ?_Ufill@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEPAU__COLOSSEUM_MONSTER@@PAU3@IABU3@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  0024f	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00252	8b 45 08	 mov	 eax, DWORD PTR tv414[ebp]
  00255	03 d0		 add	 edx, eax
  00257	89 53 08	 mov	 DWORD PTR [ebx+8], edx
  0025a	8b da		 mov	 ebx, edx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  0025c	8d 55 d4	 lea	 edx, DWORD PTR __Tmp$[ebp]
  0025f	52		 push	 edx
  00260	2b d8		 sub	 ebx, eax
  00262	53		 push	 ebx
  00263	57		 push	 edi
  00264	e8 00 00 00 00	 call	 ??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z ; std::fill<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER>
  00269	83 c4 0c	 add	 esp, 12			; 0000000cH

; 873  : 			}
; 874  : 		}

  0026c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0026f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00276	5f		 pop	 edi
  00277	5e		 pop	 esi
  00278	5b		 pop	 ebx
  00279	8b e5		 mov	 esp, ebp
  0027b	5d		 pop	 ebp
  0027c	c2 0c 00	 ret	 12			; 0000000cH
$L256493:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  0027f	6b f6 1c	 imul	 esi, 28			; 0000001cH
  00282	8b c1		 mov	 eax, ecx
  00284	2b c6		 sub	 eax, esi
  00286	89 45 08	 mov	 DWORD PTR tv427[ebp], eax
  00289	8b 55 08	 mov	 edx, DWORD PTR __Cat$267424[ebp]
  0028c	52		 push	 edx
  0028d	53		 push	 ebx
  0028e	51		 push	 ecx
  0028f	51		 push	 ecx
  00290	50		 push	 eax
  00291	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAU__COLOSSEUM_MONSTER@@PAU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  00296	8b 4d 08	 mov	 ecx, DWORD PTR tv427[ebp]
  00299	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0029c	8b 45 10	 mov	 eax, DWORD PTR tv398[ebp]
  0029f	50		 push	 eax
  002a0	51		 push	 ecx
  002a1	57		 push	 edi
  002a2	e8 00 00 00 00	 call	 ??$copy_backward@PAU__COLOSSEUM_MONSTER@@PAU1@@std@@YAPAU__COLOSSEUM_MONSTER@@PAU1@00@Z ; std::copy_backward<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  002a7	8d 55 d4	 lea	 edx, DWORD PTR __Tmp$[ebp]
  002aa	52		 push	 edx
  002ab	03 f7		 add	 esi, edi
  002ad	56		 push	 esi
  002ae	57		 push	 edi
  002af	e8 00 00 00 00	 call	 ??$fill@PAU__COLOSSEUM_MONSTER@@U1@@std@@YAXPAU__COLOSSEUM_MONSTER@@0ABU1@@Z ; std::fill<__COLOSSEUM_MONSTER *,__COLOSSEUM_MONSTER>
  002b4	83 c4 2c	 add	 esp, 44			; 0000002cH
$L256502:

; 873  : 			}
; 874  : 		}

  002b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  002ba	5f		 pop	 edi
  002bb	5e		 pop	 esi
  002bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002c3	5b		 pop	 ebx
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 0c 00	 ret	 12			; 0000000cH
$L267431:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T267429
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Insert_n
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?IsTeleported@CColosseumMatch@@QAEHK@Z		; CColosseumMatch::IsTeleported
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
;	COMDAT ?IsTeleported@CColosseumMatch@@QAEHK@Z
_TEXT	SEGMENT
_m_uPlayerID$ = 8					; size = 4
?IsTeleported@CColosseumMatch@@QAEHK@Z PROC NEAR	; CColosseumMatch::IsTeleported, COMDAT
; _this$ = ecx

; 373  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 374  : 		for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _m_uPlayerID$[esp+4]
  00006	33 f6		 xor	 esi, esi
  00008	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0000b	eb 03 8d 49 00	 npad	 5
$L254420:
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	85 d2		 test	 edx, edx
  00015	74 33		 je	 SHORT $L254422
  00017	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0001a	2b c2		 sub	 eax, edx
  0001c	c1 f8 02	 sar	 eax, 2
  0001f	3b f0		 cmp	 esi, eax
  00021	73 27		 jae	 SHORT $L254422

; 375  : 			if( m_vecPlayerID.at(i) == m_uPlayerID )

  00023	85 d2		 test	 edx, edx
  00025	74 14		 je	 SHORT $L267584
  00027	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002a	2b c2		 sub	 eax, edx
  0002c	c1 f8 02	 sar	 eax, 2
  0002f	3b c6		 cmp	 eax, esi
  00031	76 08		 jbe	 SHORT $L267584
  00033	39 3c b2	 cmp	 DWORD PTR [edx+esi*4], edi
  00036	74 08		 je	 SHORT $L267582

; 374  : 		for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00038	46		 inc	 esi
  00039	eb d5		 jmp	 SHORT $L254420
$L267584:

; 375  : 			if( m_vecPlayerID.at(i) == m_uPlayerID )

  0003b	e8 00 00 00 00	 call	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L267586:
$L267582:
  00040	5f		 pop	 edi

; 376  : 				return TRUE;

  00041	b8 01 00 00 00	 mov	 eax, 1
  00046	5e		 pop	 esi

; 378  : }

  00047	c2 04 00	 ret	 4
$L254422:
  0004a	5f		 pop	 edi

; 377  : 		return FALSE;

  0004b	33 c0		 xor	 eax, eax
  0004d	5e		 pop	 esi

; 378  : }

  0004e	c2 04 00	 ret	 4
$L267585:
?IsTeleported@CColosseumMatch@@QAEHK@Z ENDP		; CColosseumMatch::IsTeleported
_TEXT	ENDS
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L267596
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L267597
$L267596:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L267597:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L254574
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L254574

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L254574:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T267842 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T267842[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
_TEXT	ENDS
PUBLIC	??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
xdata$x	SEGMENT
$T268050 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T268052 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L267935
$T268051 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T268052
$T268046 DD	019930520H
	DD	02H
	DD	FLAT:$T268050
	DD	01H
	DD	FLAT:$T268051
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$268039 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >, COMDAT
; _this$ = ecx

; 329  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	53		 push	 ebx

; 330  : 		if (_Buy(_Right.size()))

  0001c	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  0001f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00022	56		 push	 esi
  00023	8b f1		 mov	 esi, ecx
  00025	33 c9		 xor	 ecx, ecx
  00027	3b c1		 cmp	 eax, ecx
  00029	57		 push	 edi
  0002a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002d	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00030	75 04		 jne	 SHORT $L267953
  00032	33 ff		 xor	 edi, edi
  00034	eb 1a		 jmp	 SHORT $L267954
$L267953:
  00036	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00039	2b c8		 sub	 ecx, eax
  0003b	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00040	f7 e9		 imul	 ecx
  00042	03 d1		 add	 edx, ecx
  00044	c1 fa 04	 sar	 edx, 4
  00047	8b fa		 mov	 edi, edx
  00049	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  0004c	03 fa		 add	 edi, edx
  0004e	33 c9		 xor	 ecx, ecx
$L267954:
  00050	3b f9		 cmp	 edi, ecx
  00052	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00055	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00058	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  0005b	74 43		 je	 SHORT $L254759
  0005d	81 ff 49 92 24
	09		 cmp	 edi, 153391689		; 09249249H
  00063	76 07		 jbe	 SHORT $L267996
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?_Xlen@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xlen
$L268053:
$L267996:
  0006c	6b ff 1c	 imul	 edi, 28			; 0000001cH
  0006f	57		 push	 edi
  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 331  : 			_TRY_BEGIN
; 332  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

  00075	8b 55 08	 mov	 edx, DWORD PTR __Cat$268039[ebp]
  00078	52		 push	 edx
  00079	03 f8		 add	 edi, eax
  0007b	56		 push	 esi
  0007c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0007f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00082	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00085	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00088	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  0008b	50		 push	 eax
  0008c	51		 push	 ecx
  0008d	53		 push	 ebx
  0008e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00095	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@PAU__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@3@@std@@YAPAU__COLOSSEUM_MONSTER@@Vconst_iterator@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@0@0PAU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::const_iterator,__COLOSSEUM_MONSTER *,std::allocator<__COLOSSEUM_MONSTER> >
  0009a	83 c4 18	 add	 esp, 24			; 00000018H
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L254759:

; 336  : 			_CATCH_END
; 337  : 		}

  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000a3	5f		 pop	 edi
  000a4	8b c6		 mov	 eax, esi
  000a6	5e		 pop	 esi
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 04 00	 ret	 4
$L267935:

; 333  : 			_CATCH_ALL
; 334  : 			_Tidy();

  000b5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Tidy

; 335  : 			_RERAISE;

  000bd	6a 00		 push	 0
  000bf	6a 00		 push	 0
  000c1	e8 00 00 00 00	 call	 __CxxThrowException@8
$L268054:
$L268049:
  000c6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T268046
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
PUBLIC	?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
tv90 = 12						; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::insert, COMDAT
; _this$ = ecx

; 620  : 		{	// insert _Val at _Where

  00000	53		 push	 ebx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp]
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000c	85 f6		 test	 esi, esi
  0000e	74 1e		 je	 SHORT $L268121
  00010	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00013	2b ce		 sub	 ecx, esi
  00015	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001a	f7 e9		 imul	 ecx
  0001c	03 d1		 add	 edx, ecx
  0001e	c1 fa 04	 sar	 edx, 4
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 44 24 14	 mov	 DWORD PTR tv90[esp+8], eax
  0002c	75 04		 jne	 SHORT $L268060
$L268121:
  0002e	33 f6		 xor	 esi, esi
  00030	eb 17		 jmp	 SHORT $L268061
$L268060:
  00032	8b cb		 mov	 ecx, ebx
  00034	2b ce		 sub	 ecx, esi
  00036	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0003b	f7 e9		 imul	 ecx
  0003d	03 d1		 add	 edx, ecx
  0003f	c1 fa 04	 sar	 edx, 4
  00042	8b f2		 mov	 esi, edx
  00044	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00047	03 f2		 add	 esi, edx
$L268061:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00049	8b 4c 24 18	 mov	 ecx, DWORD PTR __Val$[esp+8]
  0004d	51		 push	 ecx
  0004e	6a 01		 push	 1
  00050	53		 push	 ebx
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IAEXViterator@12@IABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00058	6b f6 1c	 imul	 esi, 28			; 0000001cH
  0005b	03 77 04	 add	 esi, DWORD PTR [edi+4]
  0005e	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00062	5f		 pop	 edi
  00063	89 30		 mov	 DWORD PTR [eax], esi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx

; 624  : 		}

  00067	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::insert
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::~map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T268224 = -4						; size = 4
??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::~map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T268224[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::~map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >
_TEXT	ENDS
PUBLIC	??_7CColosseumMng@@6B@				; CColosseumMng::`vftable'
PUBLIC	??_GCColosseumMng@@UAEPAXI@Z			; CColosseumMng::`scalar deleting destructor'
PUBLIC	??1CColosseumMng@@UAE@XZ			; CColosseumMng::~CColosseumMng
EXTRN	??_ECColosseumMng@@UAEPAXI@Z:NEAR		; CColosseumMng::`vector deleting destructor'
EXTRN	??1CLuaBase@@UAE@XZ:NEAR			; CLuaBase::~CLuaBase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T268439 DD	0ffffffffH
	DD	FLAT:$L268253
$T268437 DD	019930520H
	DD	01H
	DD	FLAT:$T268439
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CColosseumMng@@6B@
CONST	SEGMENT
??_7CColosseumMng@@6B@ DD FLAT:??_ECColosseumMng@@UAEPAXI@Z ; CColosseumMng::`vftable'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
CONST	ENDS
;	COMDAT ??1CColosseumMng@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T268431 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CColosseumMng@@UAE@XZ PROC NEAR			; CColosseumMng::~CColosseumMng, COMDAT
; _this$ = ecx

; 20   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CColosseumMng@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	8b f1		 mov	 esi, ecx
  0001c	57		 push	 edi
  0001d	89 74 24 0c	 mov	 DWORD PTR _this$[esp+32], esi
  00021	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CColosseumMng@@6B@

; 21   : }

  00027	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0002a	33 db		 xor	 ebx, ebx
  0002c	3b c3		 cmp	 eax, ebx
  0002e	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00032	74 09		 je	 SHORT $L268271
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003a	83 c4 04	 add	 esp, 4
$L268271:
  0003d	89 5e 28	 mov	 DWORD PTR [esi+40], ebx
  00040	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  00043	89 5e 30	 mov	 DWORD PTR [esi+48], ebx
  00046	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	8d 44 24 18	 lea	 eax, DWORD PTR $T268431[esp+40]
  00054	50		 push	 eax
  00055	8b cf		 mov	 ecx, edi
  00057	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
  0005c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00065	83 c4 04	 add	 esp, 4
  00068	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006b	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  0006e	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00071	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00079	e8 00 00 00 00	 call	 ??1CLuaBase@@UAE@XZ	; CLuaBase::~CLuaBase
  0007e	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008c	83 c4 14	 add	 esp, 20			; 00000014H
  0008f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L268253:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1CLuaBase@@UAE@XZ	; CLuaBase::~CLuaBase
__ehhandler$??1CColosseumMng@@UAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T268437
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CColosseumMng@@UAE@XZ ENDP				; CColosseumMng::~CColosseumMng
PUBLIC	?EnterRoom@CColosseumMatch@@QAEXPAVCUser@@@Z	; CColosseumMatch::EnterRoom
EXTRN	?Replace@CMover@@QAEHKKAAUD3DXVECTOR3@@W4REPLACE_TYPE@@H@Z:NEAR ; CMover::Replace
EXTRN	?SendColosseumStart@CUser@@QAEXH@Z:NEAR		; CUser::SendColosseumStart
EXTRN	?g_uIdofMulti@@3KA:DWORD			; g_uIdofMulti
; Function compile flags: /Ogty
;	COMDAT ?EnterRoom@CColosseumMatch@@QAEXPAVCUser@@@Z
_TEXT	SEGMENT
$T268445 = -12						; size = 12
_pUser$ = 8						; size = 4
?EnterRoom@CColosseumMatch@@QAEXPAVCUser@@@Z PROC NEAR	; CColosseumMatch::EnterRoom, COMDAT
; _this$ = ecx

; 274  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	53		 push	 ebx

; 275  : 	if( IsValidObj( pUser ) && m_bWaitTime && !IsTeleported( pUser->m_idPlayer ) )

  00004	8b 5c 24 14	 mov	 ebx, DWORD PTR _pUser$[esp+12]
  00008	85 db		 test	 ebx, ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	0f 84 9a 00 00
	00		 je	 $L254360
  00013	f6 43 04 01	 test	 BYTE PTR [ebx+4], 1
  00017	0f 85 90 00 00
	00		 jne	 $L254360
  0001d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00020	85 c0		 test	 eax, eax
  00022	0f 84 85 00 00
	00		 je	 $L254360
  00028	8b 83 38 02 00
	00		 mov	 eax, DWORD PTR [ebx+568]
  0002e	57		 push	 edi
  0002f	8d bb 38 02 00
	00		 lea	 edi, DWORD PTR [ebx+568]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?IsTeleported@CColosseumMatch@@QAEHK@Z ; CColosseumMatch::IsTeleported
  0003b	85 c0		 test	 eax, eax
  0003d	75 6d		 jne	 SHORT $L268468

; 276  : 	{
; 277  : 		m_vecPlayerID.push_back( pUser->m_idPlayer );

  0003f	57		 push	 edi
  00040	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00043	e8 00 00 00 00	 call	 ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back

; 278  : 		CWorld* pWorld = g_WorldMng.GetWorld( WI_WORLD_COLOSSEUM );

  00048	68 e7 00 00 00	 push	 231			; 000000e7H
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_WorldMng@@3VCWorldMng@@A
  00052	e8 00 00 00 00	 call	 ?GetWorld@CWorldMng@@QAEPAVCWorld@@K@Z ; CWorldMng::GetWorld

; 279  : 		if( pWorld )

  00057	85 c0		 test	 eax, eax
  00059	74 51		 je	 SHORT $L268468

; 280  : 			if( pWorld->m_linkMap.GetLinkMap( static_cast<int>( m_uPartyID ) ) )

  0005b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005e	51		 push	 ecx
  0005f	8d 48 24	 lea	 ecx, DWORD PTR [eax+36]
  00062	e8 00 00 00 00	 call	 ?GetLinkMap@CLayeredLinkMap@@QAEPAVCLinkMap@@H@Z ; CLayeredLinkMap::GetLinkMap
  00067	85 c0		 test	 eax, eax
  00069	74 41		 je	 SHORT $L268468

; 281  : 				{
; 282  : 					pUser->SendColosseumStart( (int)(m_nNextStage) );

  0006b	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0006e	52		 push	 edx
  0006f	8b cb		 mov	 ecx, ebx
  00071	e8 00 00 00 00	 call	 ?SendColosseumStart@CUser@@QAEXH@Z ; CUser::SendColosseumStart

; 283  : 					pUser->REPLACE( g_uIdofMulti, WI_WORLD_COLOSSEUM, D3DXVECTOR3( 1446.0F, 100.0F, 1219.0F ), REPLACE_NORMAL, static_cast<int>( m_uPartyID ) );

  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_uIdofMulti@@3KA ; g_uIdofMulti
  0007f	50		 push	 eax
  00080	6a 00		 push	 0
  00082	8d 4c 24 14	 lea	 ecx, DWORD PTR $T268445[esp+32]
  00086	51		 push	 ecx
  00087	68 e7 00 00 00	 push	 231			; 000000e7H
  0008c	52		 push	 edx
  0008d	8b cb		 mov	 ecx, ebx
  0008f	c7 44 24 20 00
	c0 b4 44	 mov	 DWORD PTR $T268445[esp+44], 1152696320 ; 44b4c000H
  00097	c7 44 24 24 00
	00 c8 42	 mov	 DWORD PTR $T268445[esp+48], 1120403456 ; 42c80000H
  0009f	c7 44 24 28 00
	60 98 44	 mov	 DWORD PTR $T268445[esp+52], 1150836736 ; 44986000H
  000a7	e8 00 00 00 00	 call	 ?Replace@CMover@@QAEHKKAAUD3DXVECTOR3@@W4REPLACE_TYPE@@H@Z ; CMover::Replace
$L268468:
  000ac	5f		 pop	 edi
$L254360:
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx

; 284  : 				}
; 285  : 	}
; 286  : }

  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b2	c2 04 00	 ret	 4
?EnterRoom@CColosseumMatch@@QAEXPAVCUser@@@Z ENDP	; CColosseumMatch::EnterRoom
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >::map<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> > >
_TEXT	ENDS
PUBLIC	?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::push_back
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z
_TEXT	SEGMENT
__Cat$268675 = 8					; size = 1
$T268641 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z PROC NEAR ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 580  : 		if (size() < capacity())

  00005	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  00008	85 db		 test	 ebx, ebx
  0000a	75 04		 jne	 SHORT $L268646
  0000c	33 f6		 xor	 esi, esi
  0000e	eb 18		 jmp	 SHORT $L268647
$L268646:
  00010	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00013	2b cb		 sub	 ecx, ebx
  00015	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001a	f7 e9		 imul	 ecx
  0001c	03 d1		 add	 edx, ecx
  0001e	c1 fa 04	 sar	 edx, 4
  00021	8b f2		 mov	 esi, edx
  00023	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00026	03 f2		 add	 esi, edx
$L268647:
  00028	85 db		 test	 ebx, ebx
  0002a	74 41		 je	 SHORT $L254894
  0002c	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0002f	2b cb		 sub	 ecx, ebx
  00031	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00036	f7 e9		 imul	 ecx
  00038	03 d1		 add	 edx, ecx
  0003a	c1 fa 04	 sar	 edx, 4
  0003d	8b c2		 mov	 eax, edx
  0003f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00042	03 c2		 add	 eax, edx
  00044	3b f0		 cmp	 esi, eax
  00046	73 25		 jae	 SHORT $L254894

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00048	8b 44 24 10	 mov	 eax, DWORD PTR __Cat$268675[esp+8]
  0004c	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp+8]
  00050	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00053	50		 push	 eax
  00054	57		 push	 edi
  00055	51		 push	 ecx
  00056	6a 01		 push	 1
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAU__COLOSSEUM_MONSTER@@IU1@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@YAXPAU__COLOSSEUM_MONSTER@@IABU1@AAV?$allocator@U__COLOSSEUM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<__COLOSSEUM_MONSTER *,unsigned int,__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
  0005e	83 c4 14	 add	 esp, 20			; 00000014H
  00061	83 c6 1c	 add	 esi, 28			; 0000001cH
  00064	89 77 08	 mov	 DWORD PTR [edi+8], esi
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx

; 584  : 		}

  0006a	c2 04 00	 ret	 4
$L254894:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  0006d	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp+8]
  00071	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	8d 44 24 18	 lea	 eax, DWORD PTR $T268641[esp+16]
  0007a	50		 push	 eax
  0007b	8b cf		 mov	 ecx, edi
  0007d	e8 00 00 00 00	 call	 ?insert@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE?AViterator@12@V312@ABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::insert
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx

; 584  : 		}

  00085	c2 04 00	 ret	 4
?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z ENDP ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::push_back
_TEXT	ENDS
PUBLIC	??0CColosseumMng@@QAE@XZ			; CColosseumMng::CColosseumMng
EXTRN	??0CLuaBase@@QAE@XZ:NEAR			; CLuaBase::CLuaBase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T269004 DD	0ffffffffH
	DD	FLAT:$L268698
	DD	00H
	DD	FLAT:$L268699
$T269002 DD	019930520H
	DD	02H
	DD	FLAT:$T269004
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
xdata$x	ENDS
;	COMDAT ??0CColosseumMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CColosseumMng@@QAE@XZ PROC NEAR			; CColosseumMng::CColosseumMng, COMDAT
; _this$ = ecx

; 16   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CColosseumMng@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	57		 push	 edi
  0001b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0001e	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00022	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CColosseumMng@@6B@
  00028	e8 00 00 00 00	 call	 ??0CLuaBase@@QAE@XZ	; CLuaBase::CLuaBase
  0002d	33 db		 xor	 ebx, ebx
  0002f	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
  00032	8b cf		 mov	 ecx, edi
  00034	89 5c 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], ebx
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::_Buynode
  0003d	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00040	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00044	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00047	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0004a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004d	89 00		 mov	 DWORD PTR [eax], eax
  0004f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00052	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00055	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 17   : }

  00058	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0005c	89 5e 28	 mov	 DWORD PTR [esi+40], ebx
  0005f	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  00062	89 5e 30	 mov	 DWORD PTR [esi+48], ebx
  00065	5f		 pop	 edi
  00066	8b c6		 mov	 eax, esi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L268698:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1CLuaBase@@UAE@XZ	; CLuaBase::~CLuaBase
$L268699:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 18	 add	 ecx, 24			; 00000018H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0CColosseumMng@@QAE@XZ:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269002
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CColosseumMng@@QAE@XZ ENDP				; CColosseumMng::CColosseumMng
; Function compile flags: /Ogty
;	COMDAT ??_GCColosseumMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCColosseumMng@@UAEPAXI@Z PROC NEAR			; CColosseumMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CColosseumMng@@UAE@XZ ; CColosseumMng::~CColosseumMng
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L269010
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L269010:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCColosseumMng@@UAEPAXI@Z ENDP			; CColosseumMng::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetInstance@CColosseumMng@@SAPAV1@XZ		; CColosseumMng::GetInstance
EXTRN	_atexit:NEAR
;	COMDAT ?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A
_BSS	SEGMENT
?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A DB 034H DUP (?) ; `CColosseumMng::GetInstance'::`2'::sColosseum
_BSS	ENDS
;	COMDAT ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA
_BSS	SEGMENT
?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA DD 01H DUP (?) ; `CColosseumMng::GetInstance'::`2'::$S1
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T269019 DD	0ffffffffH
	DD	FLAT:$L269014
$T269016 DD	019930520H
	DD	01H
	DD	FLAT:$T269019
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?GetInstance@CColosseumMng@@SAPAV1@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?GetInstance@CColosseumMng@@SAPAV1@XZ PROC NEAR		; CColosseumMng::GetInstance, COMDAT

; 24   : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list

; 25   : 	static CColosseumMng sColosseum;

  00006	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA
  0000c	6a ff		 push	 -1
  0000e	68 00 00 00 00	 push	 __ehhandler$?GetInstance@CColosseumMng@@SAPAV1@XZ
  00013	50		 push	 eax
  00014	b8 01 00 00 00	 mov	 eax, 1
  00019	84 c8		 test	 cl, al
  0001b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00022	75 25		 jne	 SHORT $L269017
  00024	09 05 00 00 00
	00		 or	 DWORD PTR ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA, eax
  0002a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A
  0002f	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+20], 0
  00037	e8 00 00 00 00	 call	 ??0CColosseumMng@@QAE@XZ ; CColosseumMng::CColosseumMng
  0003c	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  00041	e8 00 00 00 00	 call	 _atexit
  00046	83 c4 04	 add	 esp, 4
$L269017:

; 26   : 	return &sColosseum;
; 27   : }

  00049	8b 0c 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+12]
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269014:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?GetInstance@CColosseumMng@@SAPAV1@XZ:
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269016
  00013	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetInstance@CColosseumMng@@SAPAV1@XZ ENDP		; CColosseumMng::GetInstance
PUBLIC	??_C@_0O@LDNHLNNB@Colosseum?4lua?$AA@		; `string'
PUBLIC	??_C@_0BN@MPJHADAM@Colosseum?4lua?5Load?5Failed?$CB?$CB?$CB?$AA@ ; `string'
PUBLIC	??_C@_0O@LCKPEMLD@StartWaitTime?$AA@		; `string'
PUBLIC	??_C@_0P@FHAALCDJ@WaitAfterStage?$AA@		; `string'
PUBLIC	??_C@_09HHJPKIBP@LowStages?$AA@			; `string'
PUBLIC	??_C@_0L@IGABJCKB@HardStages?$AA@		; `string'
PUBLIC	??_C@_08EABLEDPJ@tMonster?$AA@			; `string'
PUBLIC	??_C@_0BB@DIBMDPLN@strFakeMonsterId?$AA@	; `string'
PUBLIC	??_C@_0BB@FDCEDDIK@strTrueMonsterId?$AA@	; `string'
PUBLIC	??_C@_05KPPLCGGF@nTime?$AA@			; `string'
PUBLIC	??_C@_06OJNKPJEO@nStage?$AA@			; `string'
PUBLIC	??_C@_05OLBMEBNJ@nType?$AA@			; `string'
PUBLIC	??_C@_05JBKGBCJC@nProb?$AA@			; `string'
PUBLIC	?LoadScript@CColosseumMng@@QAEHXZ		; CColosseumMng::LoadScript
EXTRN	?RunScript@CLuaBase@@QAEHPBD@Z:NEAR		; CLuaBase::RunScript
EXTRN	?Pop@CLuaBase@@QAEXH@Z:NEAR			; CLuaBase::Pop
EXTRN	?GetGlobalNumber@CLuaBase@@QAENPAD@Z:NEAR	; CLuaBase::GetGlobalNumber
EXTRN	?GetFieldToNumber@CLuaBase@@QAENHPAD@Z:NEAR	; CLuaBase::GetFieldToNumber
EXTRN	?GetFieldToString@CLuaBase@@QAEPBDHPAD@Z:NEAR	; CLuaBase::GetFieldToString
EXTRN	_exit:NEAR
EXTRN	__ftol2:NEAR
EXTRN	?GetDefineNum@CScript@@SAHPBD@Z:NEAR		; CScript::GetDefineNum
;	COMDAT ??_C@_0O@LDNHLNNB@Colosseum?4lua?$AA@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\luabase.h
CONST	SEGMENT
??_C@_0O@LDNHLNNB@Colosseum?4lua?$AA@ DB 'Colosseum.lua', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MPJHADAM@Colosseum?4lua?5Load?5Failed?$CB?$CB?$CB?$AA@
CONST	SEGMENT
??_C@_0BN@MPJHADAM@Colosseum?4lua?5Load?5Failed?$CB?$CB?$CB?$AA@ DB 'Colo'
	DB	'sseum.lua Load Failed!!!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCKPEMLD@StartWaitTime?$AA@
CONST	SEGMENT
??_C@_0O@LCKPEMLD@StartWaitTime?$AA@ DB 'StartWaitTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FHAALCDJ@WaitAfterStage?$AA@
CONST	SEGMENT
??_C@_0P@FHAALCDJ@WaitAfterStage?$AA@ DB 'WaitAfterStage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HHJPKIBP@LowStages?$AA@
CONST	SEGMENT
??_C@_09HHJPKIBP@LowStages?$AA@ DB 'LowStages', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IGABJCKB@HardStages?$AA@
CONST	SEGMENT
??_C@_0L@IGABJCKB@HardStages?$AA@ DB 'HardStages', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EABLEDPJ@tMonster?$AA@
CONST	SEGMENT
??_C@_08EABLEDPJ@tMonster?$AA@ DB 'tMonster', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIBMDPLN@strFakeMonsterId?$AA@
CONST	SEGMENT
??_C@_0BB@DIBMDPLN@strFakeMonsterId?$AA@ DB 'strFakeMonsterId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDCEDDIK@strTrueMonsterId?$AA@
CONST	SEGMENT
??_C@_0BB@FDCEDDIK@strTrueMonsterId?$AA@ DB 'strTrueMonsterId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KPPLCGGF@nTime?$AA@
CONST	SEGMENT
??_C@_05KPPLCGGF@nTime?$AA@ DB 'nTime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OJNKPJEO@nStage?$AA@
CONST	SEGMENT
??_C@_06OJNKPJEO@nStage?$AA@ DB 'nStage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OLBMEBNJ@nType?$AA@
CONST	SEGMENT
??_C@_05OLBMEBNJ@nType?$AA@ DB 'nType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JBKGBCJC@nProb?$AA@
CONST	SEGMENT
??_C@_05JBKGBCJC@nProb?$AA@ DB 'nProb', 00H		; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
CONST	ENDS
;	COMDAT ?LoadScript@CColosseumMng@@QAEHXZ
_TEXT	SEGMENT
_srMonster$254214 = -28					; size = 28
?LoadScript@CColosseumMng@@QAEHXZ PROC NEAR		; CColosseumMng::LoadScript, COMDAT
; _this$ = ecx

; 74   : {

  00000	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 75   : 	if( m_Lua.RunScript( "Colosseum.lua" ) != 0 )

  00007	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@LDNHLNNB@Colosseum?4lua?$AA@
  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?RunScript@CLuaBase@@QAEHPBD@Z ; CLuaBase::RunScript
  00016	85 c0		 test	 eax, eax
  00018	74 14		 je	 SHORT $L254199

; 76   : 	{
; 77   : 		Error( "Colosseum.lua Load Failed!!!" );

  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@MPJHADAM@Colosseum?4lua?5Load?5Failed?$CB?$CB?$CB?$AA@
  0001f	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  00024	83 c4 04	 add	 esp, 4

; 78   : 		exit(0);

  00027	6a 00		 push	 0
  00029	e8 00 00 00 00	 call	 _exit
$L269038:
$L254199:

; 79   : 	}
; 80   : 
; 81   : 	nStartWaitTime  = static_cast<int>( m_Lua.GetGlobalNumber( "StartWaitTime" ) );

  0002e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@LCKPEMLD@StartWaitTime?$AA@
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?GetGlobalNumber@CLuaBase@@QAENPAD@Z ; CLuaBase::GetGlobalNumber
  0003a	e8 00 00 00 00	 call	 __ftol2

; 82   : 	nWaitAfterStage = static_cast<int>( m_Lua.GetGlobalNumber( "WaitAfterStage" ) );

  0003f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@FHAALCDJ@WaitAfterStage?$AA@
  00044	8b ce		 mov	 ecx, esi
  00046	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00049	e8 00 00 00 00	 call	 ?GetGlobalNumber@CLuaBase@@QAENPAD@Z ; CLuaBase::GetGlobalNumber
  0004e	e8 00 00 00 00	 call	 __ftol2

; 83   : 	byMaxLowStage	= static_cast<BYTE>( m_Lua.GetGlobalNumber( "LowStages" ) );

  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09HHJPKIBP@LowStages?$AA@
  00058	8b ce		 mov	 ecx, esi
  0005a	89 47 10	 mov	 DWORD PTR [edi+16], eax
  0005d	e8 00 00 00 00	 call	 ?GetGlobalNumber@CLuaBase@@QAENPAD@Z ; CLuaBase::GetGlobalNumber
  00062	e8 00 00 00 00	 call	 __ftol2

; 84   : 	byMaxHardStage	= static_cast<BYTE>( m_Lua.GetGlobalNumber( "HardStages" ) );

  00067	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@IGABJCKB@HardStages?$AA@
  0006c	8b ce		 mov	 ecx, esi
  0006e	88 47 14	 mov	 BYTE PTR [edi+20], al
  00071	e8 00 00 00 00	 call	 ?GetGlobalNumber@CLuaBase@@QAENPAD@Z ; CLuaBase::GetGlobalNumber
  00076	e8 00 00 00 00	 call	 __ftol2

; 85   : 
; 86   : 	m_Lua.GetGloabal( "tMonster" );

  0007b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08EABLEDPJ@tMonster?$AA@
  00080	88 47 15	 mov	 BYTE PTR [edi+21], al
  00083	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00086	68 ee d8 ff ff	 push	 -10002			; ffffd8eeH
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _lua_getfield

; 87   : 	m_Lua.PushNil();

  00091	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 _lua_pushnil

; 88   : 
; 89   : 
; 90   : 	while( m_Lua.TableLoop( -2 ) )

  0009a	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0009d	6a fe		 push	 -2			; fffffffeH
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 _lua_next
  000a5	83 c4 18	 add	 esp, 24			; 00000018H
  000a8	85 c0		 test	 eax, eax
  000aa	0f 84 c2 00 00
	00		 je	 $L254213
  000b0	53		 push	 ebx
  000b1	8d 5f 24	 lea	 ebx, DWORD PTR [edi+36]
$L254212:

; 91   : 	{
; 92   : 		__COLOSSEUM_MONSTER srMonster;
; 93   : 		srMonster.dwFakeId = static_cast<int>( CScript::GetDefineNum( m_Lua.GetFieldToString( -1, "strFakeMonsterId" ) ) );

  000b4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@DIBMDPLN@strFakeMonsterId?$AA@
  000b9	6a ff		 push	 -1
  000bb	8b ce		 mov	 ecx, esi
  000bd	e8 00 00 00 00	 call	 ?GetFieldToString@CLuaBase@@QAEPBDHPAD@Z ; CLuaBase::GetFieldToString
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?GetDefineNum@CScript@@SAHPBD@Z ; CScript::GetDefineNum
  000c8	83 c4 04	 add	 esp, 4

; 94   : 		srMonster.dwTrueId = static_cast<int>( CScript::GetDefineNum( m_Lua.GetFieldToString( -1, "strTrueMonsterId" ) ) );

  000cb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@FDCEDDIK@strTrueMonsterId?$AA@
  000d0	6a ff		 push	 -1
  000d2	8b ce		 mov	 ecx, esi
  000d4	89 44 24 18	 mov	 DWORD PTR _srMonster$254214[esp+52], eax
  000d8	e8 00 00 00 00	 call	 ?GetFieldToString@CLuaBase@@QAEPBDHPAD@Z ; CLuaBase::GetFieldToString
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?GetDefineNum@CScript@@SAHPBD@Z ; CScript::GetDefineNum
  000e3	83 c4 04	 add	 esp, 4

; 95   : 		srMonster.nTime = static_cast<int>( m_Lua.GetFieldToNumber( -1, "nTime" ) );

  000e6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KPPLCGGF@nTime?$AA@
  000eb	6a ff		 push	 -1
  000ed	8b ce		 mov	 ecx, esi
  000ef	89 44 24 14	 mov	 DWORD PTR _srMonster$254214[esp+48], eax
  000f3	e8 00 00 00 00	 call	 ?GetFieldToNumber@CLuaBase@@QAENHPAD@Z ; CLuaBase::GetFieldToNumber
  000f8	e8 00 00 00 00	 call	 __ftol2

; 96   : 		srMonster.nStage = static_cast<int>( m_Lua.GetFieldToNumber( -1, "nStage" ) );

  000fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06OJNKPJEO@nStage?$AA@
  00102	6a ff		 push	 -1
  00104	8b ce		 mov	 ecx, esi
  00106	89 44 24 24	 mov	 DWORD PTR _srMonster$254214[esp+64], eax
  0010a	e8 00 00 00 00	 call	 ?GetFieldToNumber@CLuaBase@@QAENHPAD@Z ; CLuaBase::GetFieldToNumber
  0010f	e8 00 00 00 00	 call	 __ftol2

; 97   : 		srMonster.nDifficult = static_cast<int>( m_Lua.GetFieldToNumber( -1, "nType" ) );

  00114	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05OLBMEBNJ@nType?$AA@
  00119	6a ff		 push	 -1
  0011b	8b ce		 mov	 ecx, esi
  0011d	89 44 24 28	 mov	 DWORD PTR _srMonster$254214[esp+68], eax
  00121	e8 00 00 00 00	 call	 ?GetFieldToNumber@CLuaBase@@QAENHPAD@Z ; CLuaBase::GetFieldToNumber
  00126	e8 00 00 00 00	 call	 __ftol2

; 98   : 		srMonster.nProb = static_cast<int>( m_Lua.GetFieldToNumber( -1, "nProb" ) );

  0012b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05JBKGBCJC@nProb?$AA@
  00130	6a ff		 push	 -1
  00132	8b ce		 mov	 ecx, esi
  00134	89 44 24 2c	 mov	 DWORD PTR _srMonster$254214[esp+72], eax
  00138	e8 00 00 00 00	 call	 ?GetFieldToNumber@CLuaBase@@QAENHPAD@Z ; CLuaBase::GetFieldToNumber
  0013d	e8 00 00 00 00	 call	 __ftol2
  00142	89 44 24 14	 mov	 DWORD PTR _srMonster$254214[esp+48], eax

; 99   : 		m_vecMonster.push_back( srMonster );

  00146	8d 44 24 0c	 lea	 eax, DWORD PTR _srMonster$254214[esp+40]
  0014a	50		 push	 eax
  0014b	8b cb		 mov	 ecx, ebx
  0014d	e8 00 00 00 00	 call	 ?push_back@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAEXABU__COLOSSEUM_MONSTER@@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::push_back

; 100  : 		m_Lua.Pop(1);

  00152	6a 01		 push	 1
  00154	8b ce		 mov	 ecx, esi
  00156	e8 00 00 00 00	 call	 ?Pop@CLuaBase@@QAEXH@Z	; CLuaBase::Pop
  0015b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0015e	6a fe		 push	 -2			; fffffffeH
  00160	51		 push	 ecx
  00161	e8 00 00 00 00	 call	 _lua_next
  00166	83 c4 08	 add	 esp, 8
  00169	85 c0		 test	 eax, eax
  0016b	0f 85 43 ff ff
	ff		 jne	 $L254212
  00171	5b		 pop	 ebx
$L254213:

; 101  : 	}
; 102  : 
; 103  : 
; 104  : 	m_Lua.Pop(0);

  00172	6a 00		 push	 0
  00174	8b ce		 mov	 ecx, esi
  00176	e8 00 00 00 00	 call	 ?Pop@CLuaBase@@QAEXH@Z	; CLuaBase::Pop
  0017b	5f		 pop	 edi

; 105  : 
; 106  : 
; 107  : 	return TRUE;

  0017c	b8 01 00 00 00	 mov	 eax, 1
  00181	5e		 pop	 esi

; 108  : }

  00182	83 c4 1c	 add	 esp, 28			; 0000001cH
  00185	c3		 ret	 0
$L269037:
?LoadScript@CColosseumMng@@QAEHXZ ENDP			; CColosseumMng::LoadScript
_TEXT	ENDS
PUBLIC	??0CColosseumMatch@@QAE@XZ			; CColosseumMatch::CColosseumMatch
EXTRN	?g_tmCurrent@@3KA:DWORD				; g_tmCurrent
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T269132 DD	0ffffffffH
	DD	FLAT:$L269042
$T269130 DD	019930520H
	DD	01H
	DD	FLAT:$T269132
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
xdata$x	ENDS
;	COMDAT ??0CColosseumMatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CColosseumMatch@@QAE@XZ PROC NEAR			; CColosseumMatch::CColosseumMatch, COMDAT
; _this$ = ecx

; 189  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CColosseumMatch@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	33 c0		 xor	 eax, eax
  0001b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CColosseumMatch@@6B@
  00021	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  00025	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00028	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0002b	89 46 28	 mov	 DWORD PTR [esi+40], eax

; 190  : 	m_bWaitTime	 = TRUE;

  0002e	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1

; 191  : 	m_nMoverID	 = NULL;

  00035	89 46 2c	 mov	 DWORD PTR [esi+44], eax

; 192  : 	m_nStartTime = g_tmCurrent;

  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent
  0003e	89 44 24 10	 mov	 DWORD PTR __$EHRec$[esp+28], eax
  00042	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 193  : 	m_nStage	 = 0;

  00045	88 46 08	 mov	 BYTE PTR [esi+8], al

; 194  : 	m_nNextStage = (int)g_tmCurrent + CColosseumMng::GetInstance()->nStartWaitTime;

  00048	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  0004d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent

; 195  : }

  00055	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00059	03 d0		 add	 edx, eax
  0005b	89 56 10	 mov	 DWORD PTR [esi+16], edx
  0005e	8b c6		 mov	 eax, esi
  00060	5e		 pop	 esi
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	83 c4 10	 add	 esp, 16			; 00000010H
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269042:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$??0CColosseumMatch@@QAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269130
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CColosseumMatch@@QAE@XZ ENDP				; CColosseumMatch::CColosseumMatch
PUBLIC	?CreateMover@CColosseumMatch@@QAEXXZ		; CColosseumMatch::CreateMover
EXTRN	?AddObj@CWorld@@QAEHPAVCObj@@HH@Z:NEAR		; CWorld::AddObj
EXTRN	?xRandom@@YAKKK@Z:NEAR				; xRandom
EXTRN	?SendColosseumReady2@CUser@@QAEXH@Z:NEAR	; CUser::SendColosseumReady2
EXTRN	?UpdateLocalMatrix@CObj@@QAEXXZ:NEAR		; CObj::UpdateLocalMatrix
EXTRN	?SetPos@CObj@@QAEXABUD3DXVECTOR3@@@Z:NEAR	; CObj::SetPos
EXTRN	?prj@@3VCProject@@A:BYTE			; prj
EXTRN	?CreateObj@@YAPAVCObj@@PAUIDirect3DDevice9@@KKH@Z:NEAR ; CreateObj
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T269808 DD	0ffffffffH
	DD	FLAT:$L269138
$T269785 DD	019930520H
	DD	01H
	DD	FLAT:$T269808
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
xdata$x	ENDS
;	COMDAT ?CreateMover@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT
_this$ = -56						; size = 4
_nTime$ = -52						; size = 4
$T269674 = -48						; size = 4
$T269657 = -44						; size = 4
_it$269649 = -44					; size = 4
_vPos$254329 = -40					; size = 12
_m_vecMobInfo$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
?CreateMover@CColosseumMatch@@QAEXXZ PROC NEAR		; CColosseumMatch::CreateMover, COMDAT
; _this$ = ecx

; 208  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?CreateMover@CColosseumMatch@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 209  : 	int nMoverID = 0;

  0001c	33 ff		 xor	 edi, edi
  0001e	89 4c 24 10	 mov	 DWORD PTR _this$[esp+72], ecx
  00022	33 db		 xor	 ebx, ebx

; 210  : 	int nTime = 0;

  00024	89 7c 24 14	 mov	 DWORD PTR _nTime$[esp+72], edi

; 211  : 
; 212  : 	vector<__COLOSSEUM_MONSTER>	m_vecMobInfo = CColosseumMng::GetInstance()->m_vecMonster;

  00028	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  0002d	83 c0 24	 add	 eax, 36			; 00000024H
  00030	50		 push	 eax
  00031	8d 4c 24 30	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+76]
  00035	e8 00 00 00 00	 call	 ??0?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@ABV01@@Z ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
  0003a	8b 6c 24 30	 mov	 ebp, DWORD PTR _m_vecMobInfo$[esp+76]
  0003e	89 7c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], edi
  00042	83 c5 14	 add	 ebp, 20			; 00000014H
  00045	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$L254318:

; 213  : 	for( unsigned int i = 0; i < m_vecMobInfo.size(); i++ )

  00050	8b 44 24 30	 mov	 eax, DWORD PTR _m_vecMobInfo$[esp+76]
  00054	85 c0		 test	 eax, eax
  00056	0f 84 b9 00 00
	00		 je	 $L269803
  0005c	8b 4c 24 34	 mov	 ecx, DWORD PTR _m_vecMobInfo$[esp+80]
  00060	2b c8		 sub	 ecx, eax
  00062	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00067	f7 e9		 imul	 ecx
  00069	03 d1		 add	 edx, ecx
  0006b	c1 fa 04	 sar	 edx, 4
  0006e	8b f2		 mov	 esi, edx
  00070	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00073	03 f2		 add	 esi, edx
  00075	3b f7		 cmp	 esi, edi
  00077	0f 86 98 00 00
	00		 jbe	 $L269803

; 214  : 	{
; 215  : 		if( m_vecMobInfo.at(i).nDifficult == m_byDifficult && m_vecMobInfo.at(i).nStage == m_nStage )

  0007d	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+72]
  00081	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00085	39 4d 04	 cmp	 DWORD PTR [ebp+4], ecx
  00088	75 55		 jne	 SHORT $L254319
  0008a	3b f7		 cmp	 esi, edi
  0008c	76 5a		 jbe	 SHORT $L269789
  0008e	0f b6 50 08	 movzx	 edx, BYTE PTR [eax+8]
  00092	39 55 00	 cmp	 DWORD PTR [ebp], edx
  00095	75 48		 jne	 SHORT $L254319

; 216  : 		{
; 217  : 			int nRnd = xRandom(1, 100);

  00097	6a 64		 push	 100			; 00000064H
  00099	6a 01		 push	 1
  0009b	e8 00 00 00 00	 call	 ?xRandom@@YAKKK@Z	; xRandom
  000a0	83 c4 08	 add	 esp, 8

; 218  : 
; 219  : 			if( nRnd > 100 - m_vecMobInfo.at(i).nProb )

  000a3	3b f7		 cmp	 esi, edi
  000a5	76 4a		 jbe	 SHORT $L269790
  000a7	8b 5d f4	 mov	 ebx, DWORD PTR [ebp-12]
  000aa	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  000af	2b cb		 sub	 ecx, ebx
  000b1	3b c1		 cmp	 eax, ecx
  000b3	7e 09		 jle	 SHORT $L254323

; 220  : 				nMoverID = m_vecMobInfo.at(i).dwTrueId;

  000b5	3b f7		 cmp	 esi, edi
  000b7	76 41		 jbe	 SHORT $L269791
  000b9	8b 5d ec	 mov	 ebx, DWORD PTR [ebp-20]

; 221  : 			else

  000bc	eb 07		 jmp	 SHORT $L254324
$L254323:

; 222  : 				nMoverID = m_vecMobInfo.at(i).dwFakeId;

  000be	3b f7		 cmp	 esi, edi
  000c0	76 41		 jbe	 SHORT $L269792
  000c2	8b 5d f0	 mov	 ebx, DWORD PTR [ebp-16]
$L254324:

; 223  : 
; 224  : 			nTime = m_vecMobInfo.at(i).nTime;

  000c5	3b f7		 cmp	 esi, edi
  000c7	76 43		 jbe	 SHORT $L269793
  000c9	8b 45 fc	 mov	 eax, DWORD PTR [ebp-4]

; 225  : 			m_nNextStage = g_tmCurrent + nTime;

  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent
  000d2	03 d0		 add	 edx, eax
  000d4	89 44 24 14	 mov	 DWORD PTR _nTime$[esp+72], eax
  000d8	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+72]
  000dc	89 50 10	 mov	 DWORD PTR [eax+16], edx
$L254319:
  000df	47		 inc	 edi
  000e0	83 c5 1c	 add	 ebp, 28			; 0000001cH
  000e3	e9 68 ff ff ff	 jmp	 $L254318
$L269789:

; 214  : 	{
; 215  : 		if( m_vecMobInfo.at(i).nDifficult == m_byDifficult && m_vecMobInfo.at(i).nStage == m_nStage )

  000e8	8d 4c 24 2c	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+72]
  000ec	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L269790:

; 218  : 
; 219  : 			if( nRnd > 100 - m_vecMobInfo.at(i).nProb )

  000f1	8d 4c 24 2c	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+72]
  000f5	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L269791:

; 220  : 				nMoverID = m_vecMobInfo.at(i).dwTrueId;

  000fa	8d 4c 24 2c	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+72]
  000fe	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L269792:

; 222  : 				nMoverID = m_vecMobInfo.at(i).dwFakeId;

  00103	8d 4c 24 2c	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+72]
  00107	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L269793:

; 223  : 
; 224  : 			nTime = m_vecMobInfo.at(i).nTime;

  0010c	8d 4c 24 2c	 lea	 ecx, DWORD PTR _m_vecMobInfo$[esp+72]
  00110	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@IBEXXZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::_Xran
$L269803:

; 226  : 		}
; 227  : 	}
; 228  : 
; 229  : 	if( nMoverID != 0 )

  00115	85 db		 test	 ebx, ebx
  00117	0f 84 fb 00 00
	00		 je	 $L269805

; 230  : 	{
; 231  : 		MoverProp* pMoverProp = prj.GetMoverPropEx( nMoverID );

  0011d	7c 19		 jl	 SHORT $L269586
  0011f	3b 1d d0 01 00
	00		 cmp	 ebx, DWORD PTR ?prj@@3VCProject@@A+464
  00125	7d 11		 jge	 SHORT $L269586
  00127	a1 d4 01 00 00	 mov	 eax, DWORD PTR ?prj@@3VCProject@@A+468
  0012c	69 db d8 06 00
	00		 imul	 ebx, 1752		; 000006d8H
  00132	03 d8		 add	 ebx, eax
  00134	8b f3		 mov	 esi, ebx
  00136	eb 02		 jmp	 SHORT $L269584
$L269586:
  00138	33 f6		 xor	 esi, esi
$L269584:

; 232  : 		CWorld* pWorld = g_WorldMng.GetWorld( WI_WORLD_COLOSSEUM );

  0013a	68 e7 00 00 00	 push	 231			; 000000e7H
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_WorldMng@@3VCWorldMng@@A
  00144	e8 00 00 00 00	 call	 ?GetWorld@CWorldMng@@QAEPAVCWorld@@K@Z ; CWorldMng::GetWorld
  00149	8b f8		 mov	 edi, eax

; 233  : 
; 234  : 		if( pWorld && pMoverProp && pMoverProp->dwID != 0 )

  0014b	85 ff		 test	 edi, edi
  0014d	74 7b		 je	 SHORT $L269804
  0014f	85 f6		 test	 esi, esi
  00151	74 77		 je	 SHORT $L269804
  00153	8b 06		 mov	 eax, DWORD PTR [esi]
  00155	85 c0		 test	 eax, eax
  00157	74 71		 je	 SHORT $L269804

; 235  : 		{
; 236  : 			D3DXVECTOR3 vPos( 1291.0F, 100.0F, 1231.0F );
; 237  : 			CObj* pObj	= CreateObj( D3DDEVICE, OT_MOVER, pMoverProp->dwID );

  00159	6a 01		 push	 1
  0015b	50		 push	 eax
  0015c	6a 05		 push	 5
  0015e	6a 00		 push	 0
  00160	c7 44 24 30 00
	60 a1 44	 mov	 DWORD PTR _vPos$254329[esp+88], 1151426560 ; 44a16000H
  00168	c7 44 24 34 00
	00 c8 42	 mov	 DWORD PTR _vPos$254329[esp+92], 1120403456 ; 42c80000H
  00170	c7 44 24 38 00
	e0 99 44	 mov	 DWORD PTR _vPos$254329[esp+96], 1150935040 ; 4499e000H
  00178	e8 00 00 00 00	 call	 ?CreateObj@@YAPAVCObj@@PAUIDirect3DDevice9@@KKH@Z ; CreateObj
  0017d	83 c4 10	 add	 esp, 16			; 00000010H

; 238  : 			pObj->SetPos( vPos );

  00180	8d 4c 24 20	 lea	 ecx, DWORD PTR _vPos$254329[esp+72]
  00184	8b f0		 mov	 esi, eax
  00186	51		 push	 ecx
  00187	8b ce		 mov	 ecx, esi
  00189	e8 00 00 00 00	 call	 ?SetPos@CObj@@QAEXABUD3DXVECTOR3@@@Z ; CObj::SetPos

; 239  : 			pObj->InitMotion( MTI_STAND );

  0018e	8b 16		 mov	 edx, DWORD PTR [esi]
  00190	6a 00		 push	 0
  00192	8b ce		 mov	 ecx, esi
  00194	ff 52 08	 call	 DWORD PTR [edx+8]

; 240  : 			pObj->UpdateLocalMatrix();

  00197	8b ce		 mov	 ecx, esi
  00199	e8 00 00 00 00	 call	 ?UpdateLocalMatrix@CObj@@QAEXXZ ; CObj::UpdateLocalMatrix

; 241  : 			((CMover*)pObj)->m_bActiveAttack = TRUE;
; 242  : 			((CMover*)pObj)->AddItToGlobalId();

  0019e	8b 06		 mov	 eax, DWORD PTR [esi]
  001a0	8b ce		 mov	 ecx, esi
  001a2	c7 86 70 06 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+1648], 1
  001ac	ff 50 3c	 call	 DWORD PTR [eax+60]

; 243  : 			pWorld->ADDOBJ( pObj, FALSE, m_uPartyID );

  001af	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+72]
  001b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  001b6	51		 push	 ecx
  001b7	6a 00		 push	 0
  001b9	56		 push	 esi
  001ba	8b cf		 mov	 ecx, edi
  001bc	e8 00 00 00 00	 call	 ?AddObj@CWorld@@QAEHPAVCObj@@HH@Z ; CWorld::AddObj

; 244  : 
; 245  : 			m_nMoverID = ((CMover*)pObj)->GetId();

  001c1	8b 96 bc 01 00
	00		 mov	 edx, DWORD PTR [esi+444]
  001c7	89 53 2c	 mov	 DWORD PTR [ebx+44], edx
$L269804:

; 246  : 		}
; 247  : 	    if( pWorld->GetID() == WI_WORLD_MADRIGAL )

  001ca	83 3f 01	 cmp	 DWORD PTR [edi], 1
  001cd	75 49		 jne	 SHORT $L269805

; 248  : 	    {
; 249  : 		CColosseumMng::GetInstance()->DestroyMatch( m_uPartyID );

  001cf	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+72]
  001d3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d6	89 4c 24 18	 mov	 DWORD PTR $T269674[esp+72], ecx
  001da	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  001df	8b f0		 mov	 esi, eax
  001e1	8d 54 24 18	 lea	 edx, DWORD PTR $T269674[esp+72]
  001e5	52		 push	 edx
  001e6	8d 44 24 20	 lea	 eax, DWORD PTR _it$269649[esp+76]
  001ea	8d 6e 18	 lea	 ebp, DWORD PTR [esi+24]
  001ed	50		 push	 eax
  001ee	8b cd		 mov	 ecx, ebp
  001f0	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find
  001f5	8b 7c 24 1c	 mov	 edi, DWORD PTR _it$269649[esp+72]
  001f9	3b 7e 1c	 cmp	 edi, DWORD PTR [esi+28]
  001fc	74 1a		 je	 SHORT $L269805
  001fe	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00201	85 c9		 test	 ecx, ecx
  00203	74 06		 je	 SHORT $L269655
  00205	8b 11		 mov	 edx, DWORD PTR [ecx]
  00207	6a 01		 push	 1
  00209	ff 12		 call	 DWORD PTR [edx]
$L269655:
  0020b	57		 push	 edi
  0020c	8d 44 24 20	 lea	 eax, DWORD PTR $T269657[esp+76]
  00210	50		 push	 eax
  00211	8b cd		 mov	 ecx, ebp
  00213	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
$L269805:

; 250  : 	    }
; 251  : 	}
; 252  : 
; 253  : 	for( unsigned int i = 0; i < m_vecPlayerID.size(); i++ )

  00218	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+72]
  0021c	33 ff		 xor	 edi, edi
  0021e	83 c6 1c	 add	 esi, 28			; 0000001cH
$L254336:
  00221	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00224	85 c9		 test	 ecx, ecx
  00226	74 4a		 je	 SHORT $L254338
  00228	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0022b	2b c1		 sub	 eax, ecx
  0022d	c1 f8 02	 sar	 eax, 2
  00230	3b f8		 cmp	 edi, eax
  00232	73 3e		 jae	 SHORT $L254338

; 254  : 	{
; 255  : 		CUser* pUser = g_UserMng.GetUserByPlayerID( m_vecPlayerID.at(i) );

  00234	85 c9		 test	 ecx, ecx
  00236	74 33		 je	 SHORT $L269798
  00238	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0023b	2b c1		 sub	 eax, ecx
  0023d	c1 f8 02	 sar	 eax, 2
  00240	3b c7		 cmp	 eax, edi
  00242	76 27		 jbe	 SHORT $L269798
  00244	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00247	51		 push	 ecx
  00248	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  0024d	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID

; 256  : 		if( IsValidObj( pUser ) )

  00252	85 c0		 test	 eax, eax
  00254	74 12		 je	 SHORT $L254337
  00256	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  0025a	75 0c		 jne	 SHORT $L254337

; 257  : 			pUser->SendColosseumReady2( nTime );

  0025c	8b 54 24 14	 mov	 edx, DWORD PTR _nTime$[esp+72]
  00260	52		 push	 edx
  00261	8b c8		 mov	 ecx, eax
  00263	e8 00 00 00 00	 call	 ?SendColosseumReady2@CUser@@QAEXH@Z ; CUser::SendColosseumReady2
$L254337:

; 250  : 	    }
; 251  : 	}
; 252  : 
; 253  : 	for( unsigned int i = 0; i < m_vecPlayerID.size(); i++ )

  00268	47		 inc	 edi
  00269	eb b6		 jmp	 SHORT $L254336
$L269798:

; 254  : 	{
; 255  : 		CUser* pUser = g_UserMng.GetUserByPlayerID( m_vecPlayerID.at(i) );

  0026b	8b ce		 mov	 ecx, esi
  0026d	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L254338:

; 258  : 	}
; 259  : }

  00272	8b 44 24 30	 mov	 eax, DWORD PTR _m_vecMobInfo$[esp+76]
  00276	85 c0		 test	 eax, eax
  00278	74 09		 je	 SHORT $L269780
  0027a	50		 push	 eax
  0027b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00280	83 c4 04	 add	 esp, 4
$L269780:
  00283	8b 4c 24 3c	 mov	 ecx, DWORD PTR __$EHRec$[esp+72]
  00287	5f		 pop	 edi
  00288	5e		 pop	 esi
  00289	5d		 pop	 ebp
  0028a	5b		 pop	 ebx
  0028b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00292	83 c4 38	 add	 esp, 56			; 00000038H
  00295	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269138:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _m_vecMobInfo$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@U__COLOSSEUM_MONSTER@@V?$allocator@U__COLOSSEUM_MONSTER@@@std@@@std@@QAE@XZ ; std::vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >::~vector<__COLOSSEUM_MONSTER,std::allocator<__COLOSSEUM_MONSTER> >
__ehhandler$?CreateMover@CColosseumMatch@@QAEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269785
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateMover@CColosseumMatch@@QAEXXZ ENDP		; CColosseumMatch::CreateMover
PUBLIC	?KickUser@CColosseumMatch@@QAEXK@Z		; CColosseumMatch::KickUser
EXTRN	?SendColosseumEndMatch@CUser@@QAEXHH@Z:NEAR	; CUser::SendColosseumEndMatch
; Function compile flags: /Ogty
;	COMDAT ?KickUser@CColosseumMatch@@QAEXK@Z
_TEXT	SEGMENT
$T269988 = -20						; size = 4
_this$ = -20						; size = 4
$T269971 = -16						; size = 4
_it$269963 = -16					; size = 4
_bWin$ = -16						; size = 4
$T269814 = -12						; size = 12
_m_uPlayerID$ = 8					; size = 4
?KickUser@CColosseumMatch@@QAEXK@Z PROC NEAR		; CColosseumMatch::KickUser, COMDAT
; _this$ = ecx

; 289  : {

  00000	83 ec 14	 sub	 esp, 20			; 00000014H
  00003	53		 push	 ebx

; 290  : 	BOOL bWin;
; 291  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00004	8b 5c 24 08	 mov	 ebx, DWORD PTR _bWin$[esp+24]
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  0000f	33 ff		 xor	 edi, edi
  00011	8d 69 1c	 lea	 ebp, DWORD PTR [ecx+28]
$L254370:
  00014	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 7b		 je	 SHORT $L254372
  0001b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0001e	2b c1		 sub	 eax, ecx
  00020	c1 f8 02	 sar	 eax, 2
  00023	3b f8		 cmp	 edi, eax
  00025	73 6f		 jae	 SHORT $L254372

; 292  : 	{
; 293  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  00027	85 c9		 test	 ecx, ecx
  00029	74 64		 je	 SHORT $L269994
  0002b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0002e	2b c1		 sub	 eax, ecx
  00030	c1 f8 02	 sar	 eax, 2
  00033	3b c7		 cmp	 eax, edi
  00035	76 58		 jbe	 SHORT $L269994
  00037	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  0003a	51		 push	 ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00040	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
  00045	8b f0		 mov	 esi, eax

; 294  : 		if( IsValidObj( pUser ) )

  00047	85 f6		 test	 esi, esi
  00049	74 41		 je	 SHORT $L254371
  0004b	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  0004f	75 3b		 jne	 SHORT $L254371

; 295  : 		{
; 296  : 			pUser->SendColosseumEndMatch( bWin, 0 );

  00051	6a 00		 push	 0
  00053	53		 push	 ebx
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SendColosseumEndMatch@CUser@@QAEXHH@Z ; CUser::SendColosseumEndMatch

; 297  : 			pUser->REPLACE( g_uIdofMulti, WI_WORLD_MADRIGAL, D3DXVECTOR3( 6971.984f, 99.8f, 3336.884f ), REPLACE_NORMAL, nDefaultLayer );

  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_uIdofMulti@@3KA ; g_uIdofMulti
  00061	6a 00		 push	 0
  00063	6a 00		 push	 0
  00065	8d 44 24 20	 lea	 eax, DWORD PTR $T269814[esp+44]
  00069	50		 push	 eax
  0006a	6a 01		 push	 1
  0006c	51		 push	 ecx
  0006d	8b ce		 mov	 ecx, esi
  0006f	c7 44 24 2c df
	df d9 45	 mov	 DWORD PTR $T269814[esp+56], 1171906527 ; 45d9dfdfH
  00077	c7 44 24 30 9a
	99 c7 42	 mov	 DWORD PTR $T269814[esp+60], 1120377242 ; 42c7999aH
  0007f	c7 44 24 34 25
	8e 50 45	 mov	 DWORD PTR $T269814[esp+64], 1162907173 ; 45508e25H
  00087	e8 00 00 00 00	 call	 ?Replace@CMover@@QAEHKKAAUD3DXVECTOR3@@W4REPLACE_TYPE@@H@Z ; CMover::Replace
$L254371:

; 290  : 	BOOL bWin;
; 291  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  0008c	47		 inc	 edi
  0008d	eb 85		 jmp	 SHORT $L254370
$L269994:

; 292  : 	{
; 293  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  0008f	8b cd		 mov	 ecx, ebp
  00091	e8 00 00 00 00	 call	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L270002:
$L254372:

; 298  : 		}
; 299  : 	}
; 300  : 	CColosseumMng::GetInstance()->DestroyMatch( m_uPartyID );

  00096	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+36]
  0009a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009d	89 44 24 10	 mov	 DWORD PTR $T269988[esp+36], eax
  000a1	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  000a6	8b f0		 mov	 esi, eax
  000a8	8d 4c 24 10	 lea	 ecx, DWORD PTR $T269988[esp+36]
  000ac	51		 push	 ecx
  000ad	8d 54 24 18	 lea	 edx, DWORD PTR _it$269963[esp+40]
  000b1	8d 6e 18	 lea	 ebp, DWORD PTR [esi+24]
  000b4	52		 push	 edx
  000b5	8b cd		 mov	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find
  000bc	8b 7c 24 14	 mov	 edi, DWORD PTR _it$269963[esp+36]
  000c0	3b 7e 1c	 cmp	 edi, DWORD PTR [esi+28]
  000c3	74 1a		 je	 SHORT $L269962
  000c5	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000c8	85 c9		 test	 ecx, ecx
  000ca	74 06		 je	 SHORT $L269969
  000cc	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ce	6a 01		 push	 1
  000d0	ff 10		 call	 DWORD PTR [eax]
$L269969:
  000d2	57		 push	 edi
  000d3	8d 4c 24 18	 lea	 ecx, DWORD PTR $T269971[esp+40]
  000d7	51		 push	 ecx
  000d8	8b cd		 mov	 ecx, ebp
  000da	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
$L269962:
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5d		 pop	 ebp
  000e2	5b		 pop	 ebx

; 301  : }

  000e3	83 c4 14	 add	 esp, 20			; 00000014H
  000e6	c2 04 00	 ret	 4
$L270001:
?KickUser@CColosseumMatch@@QAEXK@Z ENDP			; CColosseumMatch::KickUser
_TEXT	ENDS
PUBLIC	?EndWaitTime@CColosseumMatch@@QAEXXZ		; CColosseumMatch::EndWaitTime
EXTRN	?SendColosseumReady1@CUser@@QAEXHE@Z:NEAR	; CUser::SendColosseumReady1
; Function compile flags: /Ogty
;	COMDAT ?EndWaitTime@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT
?EndWaitTime@CColosseumMatch@@QAEXXZ PROC NEAR		; CColosseumMatch::EndWaitTime, COMDAT
; _this$ = ecx

; 303  : {

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	8b d9		 mov	 ebx, ecx

; 304  : 
; 305  : 	if( m_bWaitTime )

  00005	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00008	57		 push	 edi
  00009	33 ff		 xor	 edi, edi
  0000b	3b c7		 cmp	 eax, edi
  0000d	74 14		 je	 SHORT $L254379

; 306  : 	{
; 307  : 		m_nNextStage = (int)g_tmCurrent + (int)CColosseumMng::GetInstance()->nWaitAfterStage;

  0000f	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  00014	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00017	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent
  0001d	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 308  : 		m_bWaitTime	 = FALSE;

  00020	89 7b 14	 mov	 DWORD PTR [ebx+20], edi
$L254379:
  00023	8d 6b 1c	 lea	 ebp, DWORD PTR [ebx+28]
$L254383:

; 309  : 	}
; 310  : 
; 311  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00026	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00029	85 c9		 test	 ecx, ecx
  0002b	74 5c		 je	 SHORT $L254385
  0002d	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00030	2b c1		 sub	 eax, ecx
  00032	c1 f8 02	 sar	 eax, 2
  00035	3b f8		 cmp	 edi, eax
  00037	73 50		 jae	 SHORT $L254385

; 312  : 	{
; 313  : 
; 314  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  00039	85 c9		 test	 ecx, ecx
  0003b	74 45		 je	 SHORT $L270104
  0003d	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00040	2b c1		 sub	 eax, ecx
  00042	c1 f8 02	 sar	 eax, 2
  00045	3b c7		 cmp	 eax, edi
  00047	76 39		 jbe	 SHORT $L270104
  00049	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  0004c	51		 push	 ecx
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00052	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
  00057	8b f0		 mov	 esi, eax

; 315  : 		if( IsValidObj( pUser ) )

  00059	85 f6		 test	 esi, esi
  0005b	74 22		 je	 SHORT $L254384
  0005d	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  00061	75 1c		 jne	 SHORT $L254384

; 316  : 		{
; 317  : 			pUser->SendColosseumStart(0);

  00063	6a 00		 push	 0
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?SendColosseumStart@CUser@@QAEXH@Z ; CUser::SendColosseumStart

; 318  : 			pUser->SendColosseumReady1( m_nNextStage, m_nStage + 1 );

  0006c	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  0006f	33 c9		 xor	 ecx, ecx
  00071	8a 4b 08	 mov	 cl, BYTE PTR [ebx+8]
  00074	fe c1		 inc	 cl
  00076	51		 push	 ecx
  00077	52		 push	 edx
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?SendColosseumReady1@CUser@@QAEXHE@Z ; CUser::SendColosseumReady1
$L254384:

; 309  : 	}
; 310  : 
; 311  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  0007f	47		 inc	 edi
  00080	eb a4		 jmp	 SHORT $L254383
$L270104:

; 312  : 	{
; 313  : 
; 314  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  00082	8b cd		 mov	 ecx, ebp
  00084	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L254385:
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5d		 pop	 ebp
  0008c	5b		 pop	 ebx

; 319  : 		}
; 320  : 	}
; 321  : }

  0008d	c3		 ret	 0
?EndWaitTime@CColosseumMatch@@QAEXXZ ENDP		; CColosseumMatch::EndWaitTime
_TEXT	ENDS
PUBLIC	?DestroyMover@CColosseumMatch@@QAEXXZ		; CColosseumMatch::DestroyMover
EXTRN	?AddText@CUser@@QAEXPBD@Z:NEAR			; CUser::AddText
EXTRN	_itoa:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T270332 DD	0ffffffffH
	DD	FLAT:$L270109
$T270319 DD	019930520H
	DD	01H
	DD	FLAT:$T270332
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
xdata$x	ENDS
;	COMDAT ?DestroyMover@CColosseumMatch@@QAEXXZ
_TEXT	SEGMENT
_strInt$254394 = -24					; size = 2
_this$ = -20						; size = 4
_strTemp$254401 = -16					; size = 4
_pWorld$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DestroyMover@CColosseumMatch@@QAEXXZ PROC NEAR		; CColosseumMatch::DestroyMover, COMDAT
; _this$ = ecx

; 324  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?DestroyMover@CColosseumMatch@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 325  : //CMover* g_pPlayer;
; 326  : CWorld* pWorld;/// = g_pPlayer->GetWorld();
; 327  : if( pWorld->GetID() == WI_WORLD_COLOSSEUM )

  00018	8b 44 24 08	 mov	 eax, DWORD PTR _pWorld$[esp+24]
  0001c	53		 push	 ebx
  0001d	8b d9		 mov	 ebx, ecx
  0001f	81 38 e7 00 00
	00		 cmp	 DWORD PTR [eax], 231	; 000000e7H
  00025	89 5c 24 08	 mov	 DWORD PTR _this$[esp+28], ebx
  00029	0f 85 58 01 00
	00		 jne	 $L254398
  0002f	55		 push	 ebp
  00030	57		 push	 edi

; 328  : {
; 329  : 	m_nMoverID = NULL;

  00031	33 ff		 xor	 edi, edi
  00033	89 7b 2c	 mov	 DWORD PTR [ebx+44], edi

; 330  : 	m_bWaitTime  = FALSE;

  00036	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 331  : 
; 332  : 	m_nNextStage = (int)g_tmCurrent + CColosseumMng::GetInstance()->nWaitAfterStage;

  00039	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  0003e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00041	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent

; 333  : 
; 334  : 	TCHAR strInt[2];
; 335  : 	itoa( m_nStage, strInt, 10 );

  00047	0f b6 43 08	 movzx	 eax, BYTE PTR [ebx+8]
  0004b	6a 0a		 push	 10			; 0000000aH
  0004d	8d 54 24 10	 lea	 edx, DWORD PTR _strInt$254394[esp+40]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
  00056	e8 00 00 00 00	 call	 _itoa
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 336  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  0005e	33 ed		 xor	 ebp, ebp
  00060	56		 push	 esi
$L254396:
  00061	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00064	3b cf		 cmp	 ecx, edi
  00066	8d 53 1c	 lea	 edx, DWORD PTR [ebx+28]
  00069	0f 84 15 01 00
	00		 je	 $L270330
  0006f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00072	2b c1		 sub	 eax, ecx
  00074	c1 f8 02	 sar	 eax, 2
  00077	3b e8		 cmp	 ebp, eax
  00079	0f 83 05 01 00
	00		 jae	 $L270330

; 337  : 	{
; 338  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  0007f	3b cf		 cmp	 ecx, edi
  00081	0f 84 f6 00 00
	00		 je	 $L270325
  00087	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008a	2b c1		 sub	 eax, ecx
  0008c	c1 f8 02	 sar	 eax, 2
  0008f	3b c5		 cmp	 eax, ebp
  00091	0f 86 e6 00 00
	00		 jbe	 $L270325
  00097	8b 0c a9	 mov	 ecx, DWORD PTR [ecx+ebp*4]
  0009a	51		 push	 ecx
  0009b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  000a0	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
  000a5	8b f0		 mov	 esi, eax

; 339  : 		if( IsValidObj( pUser ) )

  000a7	3b f7		 cmp	 esi, edi
  000a9	0f 84 c6 00 00
	00		 je	 $L254397
  000af	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  000b3	0f 85 bc 00 00
	00		 jne	 $L254397

; 340  : 		{
; 341  : 				CString strTemp;

  000b9	e8 00 00 00 00	 call	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
  000be	8b 10		 mov	 edx, DWORD PTR [eax]
  000c0	8b c8		 mov	 ecx, eax
  000c2	ff 52 0c	 call	 DWORD PTR [edx+12]
  000c5	83 c0 10	 add	 eax, 16			; 00000010H
  000c8	89 44 24 18	 mov	 DWORD PTR _strTemp$254401[esp+40], eax

; 342  : 				strTemp.Format(_T( prj.GetTextColor(TID_COLOSSEUM_COLOSUCCESS01) ), strInt );//.GetText

  000cc	a1 c8 02 00 00	 mov	 eax, DWORD PTR ?prj@@3VCProject@@A+712
  000d1	3d e3 11 00 00	 cmp	 eax, 4579		; 000011e3H
  000d6	89 7c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], edi
  000da	7e 19		 jle	 SHORT $L270270
  000dc	76 0f		 jbe	 SHORT $L270323
  000de	a1 b8 02 00 00	 mov	 eax, DWORD PTR ?prj@@3VCProject@@A+696
  000e3	8b 80 8c 47 00
	00		 mov	 eax, DWORD PTR [eax+18316]
  000e9	3b c7		 cmp	 eax, edi
  000eb	75 04		 jne	 SHORT $L270271
$L270323:
  000ed	33 c0		 xor	 eax, eax
  000ef	eb 20		 jmp	 SHORT $L270265
$L270271:
  000f1	8b 00		 mov	 eax, DWORD PTR [eax]
  000f3	eb 1c		 jmp	 SHORT $L270265
$L270270:
  000f5	68 e3 11 00 00	 push	 4579			; 000011e3H
  000fa	50		 push	 eax
  000fb	57		 push	 edi
  000fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@DFAACJEE@GetTextColor?5range_error?$AA@
  00101	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HMFGHCP@?$CFs?5min?3?$CFd?0?5max?3?$CFd?0?5index?3?$CFd?$AA@
  00106	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0010b	83 c4 14	 add	 esp, 20			; 00000014H
  0010e	83 c8 ff	 or	 eax, -1
$L270265:
  00111	8d 4c 24 10	 lea	 ecx, DWORD PTR _strInt$254394[esp+40]
  00115	51		 push	 ecx
  00116	50		 push	 eax
  00117	8d 54 24 20	 lea	 edx, DWORD PTR _strTemp$254401[esp+48]
  0011b	52		 push	 edx
  0011c	e8 00 00 00 00	 call	 ?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXIZZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format

; 343  : 				pUser->AddText( strTemp );

  00121	8b 7c 24 24	 mov	 edi, DWORD PTR _strTemp$254401[esp+52]
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH
  00128	57		 push	 edi
  00129	8b ce		 mov	 ecx, esi
  0012b	e8 00 00 00 00	 call	 ?AddText@CUser@@QAEXPBD@Z ; CUser::AddText

; 344  : 				
; 345  : 
; 346  : 			if( m_nStage < CColosseumMng::GetInstance()->byMaxHardStage ) 

  00130	8a 5b 08	 mov	 bl, BYTE PTR [ebx+8]
  00133	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  00138	3a 58 15	 cmp	 bl, BYTE PTR [eax+21]
  0013b	73 12		 jae	 SHORT $L254402

; 347  : 			pUser->SendColosseumReady1( m_nNextStage, m_nStage + 1 );

  0013d	8b 44 24 14	 mov	 eax, DWORD PTR _this$[esp+40]
  00141	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00144	fe c3		 inc	 bl
  00146	53		 push	 ebx
  00147	51		 push	 ecx
  00148	8b ce		 mov	 ecx, esi
  0014a	e8 00 00 00 00	 call	 ?SendColosseumReady1@CUser@@QAEXHE@Z ; CUser::SendColosseumReady1
$L254402:

; 348  : 		}

  0014f	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00152	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  0015a	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  0015d	83 c9 ff	 or	 ecx, -1
  00160	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00164	49		 dec	 ecx
  00165	85 c9		 test	 ecx, ecx
  00167	7f 08		 jg	 SHORT $L270326
  00169	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016d	50		 push	 eax
  0016e	ff 52 04	 call	 DWORD PTR [edx+4]
$L270326:
  00171	8b 5c 24 14	 mov	 ebx, DWORD PTR _this$[esp+40]
$L254397:

; 336  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00175	45		 inc	 ebp
  00176	33 ff		 xor	 edi, edi
  00178	e9 e4 fe ff ff	 jmp	 $L254396
$L270325:

; 337  : 	{
; 338  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  0017d	8b ca		 mov	 ecx, edx
  0017f	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L270330:
  00184	5e		 pop	 esi
  00185	5f		 pop	 edi
  00186	5d		 pop	 ebp
$L254398:

; 349  : 
; 350  : 	}
; 351  : }
; 352  : else 
; 353  :    {
; 354  :    }
; 355  : }

  00187	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0018b	5b		 pop	 ebx
  0018c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00193	83 c4 18	 add	 esp, 24			; 00000018H
  00196	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L270109:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$254401[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?DestroyMover@CColosseumMatch@@QAEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T270319
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DestroyMover@CColosseumMatch@@QAEXXZ ENDP		; CColosseumMatch::DestroyMover
PUBLIC	?EndMatch@CColosseumMatch@@QAEXH@Z		; CColosseumMatch::EndMatch
; Function compile flags: /Ogty
;	COMDAT ?EndMatch@CColosseumMatch@@QAEXH@Z
_TEXT	SEGMENT
_it$270510 = -16					; size = 4
$T270338 = -12						; size = 12
$T270492 = 8						; size = 4
$T270512 = 8						; size = 4
_bWin$ = 8						; size = 4
?EndMatch@CColosseumMatch@@QAEXH@Z PROC NEAR		; CColosseumMatch::EndMatch, COMDAT
; _this$ = ecx

; 358  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	57		 push	 edi

; 359  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00009	33 ff		 xor	 edi, edi
  0000b	8d 6b 1c	 lea	 ebp, DWORD PTR [ebx+28]
  0000e	8b ff		 npad	 2
$L254409:
  00010	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00013	85 c9		 test	 ecx, ecx
  00015	0f 84 8a 00 00
	00		 je	 $L254411
  0001b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0001e	2b c1		 sub	 eax, ecx
  00020	c1 f8 02	 sar	 eax, 2
  00023	3b f8		 cmp	 edi, eax
  00025	73 7e		 jae	 SHORT $L254411

; 360  : 	{
; 361  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  00027	85 c9		 test	 ecx, ecx
  00029	74 73		 je	 SHORT $L270518
  0002b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0002e	2b c1		 sub	 eax, ecx
  00030	c1 f8 02	 sar	 eax, 2
  00033	3b c7		 cmp	 eax, edi
  00035	76 67		 jbe	 SHORT $L270518
  00037	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  0003a	51		 push	 ecx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00040	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
  00045	8b f0		 mov	 esi, eax

; 362  : 		if( IsValidObj( pUser ) )

  00047	85 f6		 test	 esi, esi
  00049	74 4d		 je	 SHORT $L254410
  0004b	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  0004f	75 47		 jne	 SHORT $L254410

; 363  : 		{
; 364  : 			pUser->SendColosseumEndMatch( bWin, ( g_tmCurrent - m_nStartTime ) );

  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent
  00056	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  00059	8b 4c 24 24	 mov	 ecx, DWORD PTR _bWin$[esp+28]
  0005d	2b c2		 sub	 eax, edx
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SendColosseumEndMatch@CUser@@QAEXHH@Z ; CUser::SendColosseumEndMatch

; 365  : 	
; 366  : 			pUser->REPLACE( g_uIdofMulti, WI_WORLD_MADRIGAL, D3DXVECTOR3( 6971.984f, 99.8f, 3336.884f ), REPLACE_NORMAL, nDefaultLayer );

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_uIdofMulti@@3KA ; g_uIdofMulti
  0006d	6a 00		 push	 0
  0006f	6a 00		 push	 0
  00071	8d 54 24 1c	 lea	 edx, DWORD PTR $T270338[esp+40]
  00075	52		 push	 edx
  00076	6a 01		 push	 1
  00078	50		 push	 eax
  00079	8b ce		 mov	 ecx, esi
  0007b	c7 44 24 28 df
	df d9 45	 mov	 DWORD PTR $T270338[esp+52], 1171906527 ; 45d9dfdfH
  00083	c7 44 24 2c 9a
	99 c7 42	 mov	 DWORD PTR $T270338[esp+56], 1120377242 ; 42c7999aH
  0008b	c7 44 24 30 25
	8e 50 45	 mov	 DWORD PTR $T270338[esp+60], 1162907173 ; 45508e25H
  00093	e8 00 00 00 00	 call	 ?Replace@CMover@@QAEHKKAAUD3DXVECTOR3@@W4REPLACE_TYPE@@H@Z ; CMover::Replace
$L254410:

; 359  : 	for( int i = 0; i < m_vecPlayerID.size(); i++ )

  00098	47		 inc	 edi
  00099	e9 72 ff ff ff	 jmp	 $L254409
$L270518:

; 360  : 	{
; 361  : 		CUser* pUser = GetUser( m_vecPlayerID.at(i) );

  0009e	8b cd		 mov	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
$L270520:
$L254411:

; 367  : 		}
; 368  : 	}
; 369  : 	CColosseumMng::GetInstance()->DestroyMatch( m_uPartyID );

  000a5	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000a8	89 4c 24 24	 mov	 DWORD PTR $T270512[esp+28], ecx
  000ac	e8 00 00 00 00	 call	 ?GetInstance@CColosseumMng@@SAPAV1@XZ ; CColosseumMng::GetInstance
  000b1	8b f0		 mov	 esi, eax
  000b3	8d 54 24 24	 lea	 edx, DWORD PTR $T270512[esp+28]
  000b7	52		 push	 edx
  000b8	8d 44 24 14	 lea	 eax, DWORD PTR _it$270510[esp+36]
  000bc	8d 6e 18	 lea	 ebp, DWORD PTR [esi+24]
  000bf	50		 push	 eax
  000c0	8b cd		 mov	 ecx, ebp
  000c2	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::find
  000c7	8b 7c 24 10	 mov	 edi, DWORD PTR _it$270510[esp+32]
  000cb	3b 7e 1c	 cmp	 edi, DWORD PTR [esi+28]
  000ce	74 1a		 je	 SHORT $L270509
  000d0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000d3	85 c9		 test	 ecx, ecx
  000d5	74 06		 je	 SHORT $L270490
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	6a 01		 push	 1
  000db	ff 12		 call	 DWORD PTR [edx]
$L270490:
  000dd	57		 push	 edi
  000de	8d 44 24 28	 lea	 eax, DWORD PTR $T270492[esp+32]
  000e2	50		 push	 eax
  000e3	8b cd		 mov	 ecx, ebp
  000e5	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::erase
$L270509:
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5d		 pop	 ebp
  000ed	5b		 pop	 ebx

; 370  : }

  000ee	83 c4 10	 add	 esp, 16			; 00000010H
  000f1	c2 04 00	 ret	 4
$L270519:
?EndMatch@CColosseumMatch@@QAEXH@Z ENDP			; CColosseumMatch::EndMatch
_TEXT	ENDS
PUBLIC	?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z ; CColosseumMng::CreateNewMatch
EXTRN	?GetGuild@CMover@@QAEPAVCGuild@@XZ:NEAR		; CMover::GetGuild
EXTRN	?g_PartyMng@@3VCPartyMng@@A:BYTE		; g_PartyMng
EXTRN	?GetParty@CPartyMng@@QAEPAVCParty@@K@Z:NEAR	; CPartyMng::GetParty
EXTRN	?SendColosseumEnter@CUser@@QAEXXZ:NEAR		; CUser::SendColosseumEnter
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T270570 DD	0ffffffffH
	DD	FLAT:$L270531
$T270562 DD	019930520H
	DD	01H
	DD	FLAT:$T270570
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\colosseum.cpp
xdata$x	ENDS
;	COMDAT ?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z
_TEXT	SEGMENT
$T270528 = -28						; size = 8
_this$ = -28						; size = 4
$T270530 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_pUser$ = 8						; size = 4
_byDifficult$ = 12					; size = 1
$T270525 = 16						; size = 4
_byMenu$ = 16						; size = 1
?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z PROC NEAR ; CColosseumMng::CreateNewMatch, COMDAT
; _this$ = ecx

; 30   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	55		 push	 ebp
  00019	56		 push	 esi

; 31   : 		CParty* pParty = g_PartyMng.GetParty( pUser->GetPartyId() );

  0001a	8b 74 24 28	 mov	 esi, DWORD PTR _pUser$[esp+32]
  0001e	8b 86 18 07 00
	00		 mov	 eax, DWORD PTR [esi+1816]
  00024	57		 push	 edi
  00025	8b f9		 mov	 edi, ecx
  00027	50		 push	 eax
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_PartyMng@@3VCPartyMng@@A
  0002d	89 7c 24 10	 mov	 DWORD PTR _this$[esp+44], edi
  00031	e8 00 00 00 00	 call	 ?GetParty@CPartyMng@@QAEPAVCParty@@K@Z ; CPartyMng::GetParty
  00036	8b e8		 mov	 ebp, eax

; 32   : 		if( pParty && IsValidObj( pUser ) )

  00038	85 ed		 test	 ebp, ebp
  0003a	0f 84 75 01 00
	00		 je	 $L254018
  00040	f6 46 04 01	 test	 BYTE PTR [esi+4], 1
  00044	0f 85 6b 01 00
	00		 jne	 $L254018

; 33   : 		{
; 34   : 			if( GetMatchByParty( pParty ) != 0 ) return FALSE;

  0004a	55		 push	 ebp
  0004b	8b cf		 mov	 ecx, edi
  0004d	e8 00 00 00 00	 call	 ?GetMatchByParty@CColosseumMng@@QAEPAVCColosseumMatch@@PAVCParty@@@Z ; CColosseumMng::GetMatchByParty
  00052	85 c0		 test	 eax, eax
  00054	0f 85 5b 01 00
	00		 jne	 $L254018
  0005a	53		 push	 ebx

; 35   : 			if( !pUser->GetGuild() && byMenu == 2 ) return FALSE;

  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?GetGuild@CMover@@QAEPAVCGuild@@XZ ; CMover::GetGuild
  00062	85 c0		 test	 eax, eax
  00064	8a 5c 24 38	 mov	 bl, BYTE PTR _byMenu$[esp+40]
  00068	75 1c		 jne	 SHORT $L254020
  0006a	80 fb 02	 cmp	 bl, 2
  0006d	75 17		 jne	 SHORT $L254020
$L270569:
  0006f	5b		 pop	 ebx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	33 c0		 xor	 eax, eax
  00074	5d		 pop	 ebp

; 69   : 		}
; 70   : 		return FALSE;
; 71   : }

  00075	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00080	83 c4 1c	 add	 esp, 28			; 0000001cH
  00083	c2 0c 00	 ret	 12			; 0000000cH
$L254020:

; 36   : 			if( byDifficult != 1 && byDifficult != 2 ) byDifficult = 1;

  00086	8a 44 24 34	 mov	 al, BYTE PTR _byDifficult$[esp+40]
  0008a	3c 01		 cmp	 al, 1
  0008c	74 0d		 je	 SHORT $L254021
  0008e	3c 02		 cmp	 al, 2
  00090	74 09		 je	 SHORT $L254021
  00092	c6 44 24 34 01	 mov	 BYTE PTR _byDifficult$[esp+40], 1
  00097	8a 44 24 34	 mov	 al, BYTE PTR _byDifficult$[esp+40]
$L254021:

; 37   : 			if( byMenu != 1 && byMenu != 2 ) byMenu = 1;

  0009b	80 fb 01	 cmp	 bl, 1
  0009e	74 07		 je	 SHORT $L254022
  000a0	80 fb 02	 cmp	 bl, 2
  000a3	74 02		 je	 SHORT $L254022
  000a5	b3 01		 mov	 bl, 1
$L254022:

; 38   : 			if( byDifficult == 1 && pUser->m_nLevel > 90 ) return FALSE;

  000a7	3c 01		 cmp	 al, 1
  000a9	75 09		 jne	 SHORT $L254023
  000ab	83 be e0 05 00
	00 5a		 cmp	 DWORD PTR [esi+1504], 90 ; 0000005aH
  000b2	7f bb		 jg	 SHORT $L270569
$L254023:

; 39   : 
; 40   : 			CColosseumMatch* pMatch = new CColosseumMatch;

  000b4	6a 38		 push	 56			; 00000038H
  000b6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000bb	83 c4 04	 add	 esp, 4
  000be	89 44 24 38	 mov	 DWORD PTR $T270525[esp+40], eax
  000c2	33 f6		 xor	 esi, esi
  000c4	3b c6		 cmp	 eax, esi
  000c6	89 74 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], esi
  000ca	74 09		 je	 SHORT $L270527
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??0CColosseumMatch@@QAE@XZ ; CColosseumMatch::CColosseumMatch
  000d3	8b f0		 mov	 esi, eax
$L270527:

; 41   : 			pMatch->m_uPartyID = pParty->m_uPartyId;
; 42   : 			pMatch->m_byDifficult = byDifficult;
; 43   : 			pMatch->m_byMenu = byMenu;
; 44   : 			if( byMenu == 2 )

  000d5	80 fb 02	 cmp	 bl, 2
  000d8	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  000db	8a 4c 24 34	 mov	 cl, BYTE PTR _byDifficult$[esp+40]
  000df	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  000e7	89 46 04	 mov	 DWORD PTR [esi+4], eax
  000ea	88 4e 18	 mov	 BYTE PTR [esi+24], cl
  000ed	88 5e 19	 mov	 BYTE PTR [esi+25], bl
  000f0	0f 85 ac 00 00
	00		 jne	 $L254029

; 45   : 				pMatch->m_uGuildID = pUser->m_idGuild;

  000f6	8b 54 24 30	 mov	 edx, DWORD PTR _pUser$[esp+40]
  000fa	8b 82 1c 07 00
	00		 mov	 eax, DWORD PTR [edx+1820]
  00100	89 46 30	 mov	 DWORD PTR [esi+48], eax
$L254030:

; 50   : 				pMatch->m_byBossStage = xRandom( 1, byMaxHardStage );

  00103	0f b6 57 15	 movzx	 edx, BYTE PTR [edi+21]
  00107	52		 push	 edx
$L270568:
  00108	6a 01		 push	 1
  0010a	e8 00 00 00 00	 call	 ?xRandom@@YAKKK@Z	; xRandom
  0010f	83 c4 08	 add	 esp, 8

; 51   : 
; 52   : 			pMatch->CreateRoomLayer();

  00112	8b ce		 mov	 ecx, esi
  00114	88 46 34	 mov	 BYTE PTR [esi+52], al
  00117	e8 00 00 00 00	 call	 ?CreateRoomLayer@CColosseumMatch@@QAEXXZ ; CColosseumMatch::CreateRoomLayer

; 53   : 
; 54   : 			for( int i = 1; i < pParty->m_nSizeofMember; i++ )

  0011c	8b 85 cc 01 00
	00		 mov	 eax, DWORD PTR [ebp+460]
  00122	bb 01 00 00 00	 mov	 ebx, 1
  00127	3b c3		 cmp	 eax, ebx
  00129	7e 40		 jle	 SHORT $L254035

; 51   : 
; 52   : 			pMatch->CreateRoomLayer();

  0012b	8d 7d 44	 lea	 edi, DWORD PTR [ebp+68]
  0012e	8b ff		 npad	 2
$L254033:

; 55   : 			{
; 56   : 				CUser* pPartyUser = g_UserMng.GetUserByPlayerID( pParty->m_aMember[i].m_uPlayerId );

  00130	8b 07		 mov	 eax, DWORD PTR [edi]
  00132	50		 push	 eax
  00133	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00138	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID
  0013d	8b c8		 mov	 ecx, eax

; 57   : 				if( pPartyUser )

  0013f	85 c9		 test	 ecx, ecx
  00141	74 16		 je	 SHORT $L254034

; 58   : 					if( pMatch->m_byMenu == 2 )

  00143	80 7e 19 02	 cmp	 BYTE PTR [esi+25], 2
  00147	75 0b		 jne	 SHORT $L254038

; 59   : 					{
; 60   : 						if( pPartyUser->m_idGuild == pMatch->m_uGuildID )

  00149	8b 91 1c 07 00
	00		 mov	 edx, DWORD PTR [ecx+1820]
  0014f	3b 56 30	 cmp	 edx, DWORD PTR [esi+48]
  00152	75 05		 jne	 SHORT $L254034
$L254038:

; 61   : 							pPartyUser->SendColosseumEnter();
; 62   : 					}
; 63   : 					else
; 64   : 						pPartyUser->SendColosseumEnter();

  00154	e8 00 00 00 00	 call	 ?SendColosseumEnter@CUser@@QAEXXZ ; CUser::SendColosseumEnter
$L254034:

; 53   : 
; 54   : 			for( int i = 1; i < pParty->m_nSizeofMember; i++ )

  00159	8b 85 cc 01 00
	00		 mov	 eax, DWORD PTR [ebp+460]
  0015f	43		 inc	 ebx
  00160	83 c7 1c	 add	 edi, 28			; 0000001cH
  00163	3b d8		 cmp	 ebx, eax
  00165	7c c9		 jl	 SHORT $L254033
  00167	8b 7c 24 10	 mov	 edi, DWORD PTR _this$[esp+44]
$L254035:

; 65   : 			}
; 66   : 
; 67   : 			m_mapMatch.insert( make_pair( pParty->m_uPartyId, pMatch ));

  0016b	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  0016e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T270528[esp+44]
  00172	51		 push	 ecx
  00173	8d 54 24 1c	 lea	 edx, DWORD PTR $T270530[esp+48]
  00177	52		 push	 edx
  00178	8d 4f 18	 lea	 ecx, DWORD PTR [edi+24]
  0017b	89 44 24 18	 mov	 DWORD PTR $T270528[esp+52], eax
  0017f	89 74 24 1c	 mov	 DWORD PTR $T270528[esp+56], esi
  00183	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCColosseumMatch@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::insert
  00188	5b		 pop	 ebx
  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi

; 68   : 			return TRUE;

  0018b	b8 01 00 00 00	 mov	 eax, 1
  00190	5d		 pop	 ebp

; 69   : 		}
; 70   : 		return FALSE;
; 71   : }

  00191	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00195	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0019c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0019f	c2 0c 00	 ret	 12			; 0000000cH
$L254029:

; 46   : 
; 47   : 			if( byMenu == 1 )

  001a2	80 fb 01	 cmp	 bl, 1
  001a5	0f 85 58 ff ff
	ff		 jne	 $L254030

; 48   : 				pMatch->m_byBossStage = xRandom( 1, byMaxLowStage );

  001ab	0f b6 4f 14	 movzx	 ecx, BYTE PTR [edi+20]
  001af	51		 push	 ecx

; 49   : 			else

  001b0	e9 53 ff ff ff	 jmp	 $L270568
$L254018:

; 69   : 		}
; 70   : 		return FALSE;
; 71   : }

  001b5	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  001b9	5f		 pop	 edi
  001ba	5e		 pop	 esi
  001bb	33 c0		 xor	 eax, eax
  001bd	5d		 pop	 ebp
  001be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c5	83 c4 1c	 add	 esp, 28			; 0000001cH
  001c8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L270531:
  00000	8b 45 0c	 mov	 eax, DWORD PTR $T270525[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T270562
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateNewMatch@CColosseumMng@@QAEHPAVCUser@@EE@Z ENDP	; CColosseumMng::CreateNewMatch
PUBLIC	?Process@CColosseumMng@@QAEXXZ			; CColosseumMng::Process
EXTRN	?GetMover@CProject@@QAEPAVCMover@@K@Z:NEAR	; CProject::GetMover
; Function compile flags: /Ogty
;	COMDAT ?Process@CColosseumMng@@QAEXXZ
_TEXT	SEGMENT
_it$254242 = -8						; size = 4
_this$ = -4						; size = 4
?Process@CColosseumMng@@QAEXXZ PROC NEAR		; CColosseumMng::Process, COMDAT
; _this$ = ecx

; 123  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 124  : 	for( COLOSSEUMMATCH::iterator it = m_mapMatch.begin(); it != m_mapMatch.end(); it++ )

  00006	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	3b c1		 cmp	 eax, ecx
  0000d	89 74 24 08	 mov	 DWORD PTR _this$[esp+12], esi
  00011	89 44 24 04	 mov	 DWORD PTR _it$254242[esp+12], eax
  00015	0f 84 e7 00 00
	00		 je	 $L254248
  0001b	55		 push	 ebp
  0001c	57		 push	 edi
  0001d	8d 49 00	 npad	 3
$L270621:

; 125  : 	{
; 126  : 		u_long idParty = it->first;
; 127  : 		CColosseumMatch* pMatch = it->second;

  00020	8b 68 10	 mov	 ebp, DWORD PTR [eax+16]

; 128  : 
; 129  : 		if( !pMatch ) return;

  00023	85 ed		 test	 ebp, ebp
  00025	0f 84 d5 00 00
	00		 je	 $L270799

; 130  : 
; 131  : 		CMover* pMover = prj.GetMover(pMatch->m_nMoverID);

  0002b	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  0002e	50		 push	 eax
  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A
  00034	e8 00 00 00 00	 call	 ?GetMover@CProject@@QAEPAVCMover@@K@Z ; CProject::GetMover

; 132  : 		if( pMover )

  00039	85 c0		 test	 eax, eax

; 133  : 		{
; 134  : 			if( pMatch->m_nNextStage < (int)g_tmCurrent )

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_tmCurrent@@3KA ; g_tmCurrent
  00040	74 19		 je	 SHORT $L254253
  00042	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00045	3b c8		 cmp	 ecx, eax
  00047	0f 8d 9d 00 00
	00		 jge	 $L254247

; 135  : 				pMatch->EndMatch( FALSE );

  0004d	6a 00		 push	 0
  0004f	8b cd		 mov	 ecx, ebp
  00051	e8 00 00 00 00	 call	 ?EndMatch@CColosseumMatch@@QAEXH@Z ; CColosseumMatch::EndMatch

; 136  : 		}
; 137  : 		else

  00056	e9 8f 00 00 00	 jmp	 $L254247
$L254253:

; 138  : 		{
; 139  : 			//Kontrollieren ob letze Stage erreicht wurde
; 140  : 			if( pMatch->m_nNextStage < (int)g_tmCurrent )

  0005b	8b 55 10	 mov	 edx, DWORD PTR [ebp+16]
  0005e	3b d0		 cmp	 edx, eax
  00060	0f 8d 84 00 00
	00		 jge	 $L254247

; 141  : 			{
; 142  : 				if( pMatch->m_nStage == 0 )

  00066	8a 45 08	 mov	 al, BYTE PTR [ebp+8]
  00069	84 c0		 test	 al, al
  0006b	75 57		 jne	 SHORT $L270795

; 143  : 				{
; 144  : 					for( int i = 0; i < pMatch->m_vecPlayerID.size(); i++ )

  0006d	33 f6		 xor	 esi, esi
  0006f	8d 7d 1c	 lea	 edi, DWORD PTR [ebp+28]
$L254261:
  00072	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00075	85 c9		 test	 ecx, ecx
  00077	74 47		 je	 SHORT $L270798
  00079	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0007c	2b c1		 sub	 eax, ecx
  0007e	c1 f8 02	 sar	 eax, 2
  00081	3b f0		 cmp	 esi, eax
  00083	73 3b		 jae	 SHORT $L270798

; 145  : 					{
; 146  : 						CUser* pUser = pMatch->GetUser( pMatch->m_vecPlayerID.at(i) );

  00085	85 c9		 test	 ecx, ecx
  00087	74 7e		 je	 SHORT $L270791
  00089	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0008c	2b c1		 sub	 eax, ecx
  0008e	c1 f8 02	 sar	 eax, 2
  00091	3b c6		 cmp	 eax, esi
  00093	76 72		 jbe	 SHORT $L270791
  00095	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00098	51		 push	 ecx
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  0009e	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID

; 147  : 						if( IsValidObj( pUser ) && pMatch->m_bWaitTime )

  000a3	85 c0		 test	 eax, eax
  000a5	74 16		 je	 SHORT $L254262
  000a7	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  000ab	75 10		 jne	 SHORT $L254262
  000ad	8b 4d 14	 mov	 ecx, DWORD PTR [ebp+20]
  000b0	85 c9		 test	 ecx, ecx
  000b2	74 09		 je	 SHORT $L254262

; 148  : 							pUser->SendColosseumStart(0);

  000b4	6a 00		 push	 0
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ?SendColosseumStart@CUser@@QAEXH@Z ; CUser::SendColosseumStart
$L254262:

; 143  : 				{
; 144  : 					for( int i = 0; i < pMatch->m_vecPlayerID.size(); i++ )

  000bd	46		 inc	 esi
  000be	eb b2		 jmp	 SHORT $L254261
$L270798:
  000c0	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+20]
$L270795:

; 149  : 					}
; 150  : 				}
; 151  : 				if( pMatch->m_nStage >= byMaxLowStage )

  000c4	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  000c7	8a 45 08	 mov	 al, BYTE PTR [ebp+8]
  000ca	3a c1		 cmp	 al, cl

; 152  : 					pMatch->EndMatch( TRUE );

  000cc	8b cd		 mov	 ecx, ebp
  000ce	72 09		 jb	 SHORT $L254266
  000d0	6a 01		 push	 1
  000d2	e8 00 00 00 00	 call	 ?EndMatch@CColosseumMatch@@QAEXH@Z ; CColosseumMatch::EndMatch

; 153  : 				else

  000d7	eb 11		 jmp	 SHORT $L254247
$L254266:

; 154  : 				{
; 155  : 					pMatch->m_bWaitTime = FALSE;
; 156  : 					pMatch->m_nStage++;

  000d9	fe c0		 inc	 al
  000db	c7 45 14 00 00
	00 00		 mov	 DWORD PTR [ebp+20], 0
  000e2	88 45 08	 mov	 BYTE PTR [ebp+8], al

; 157  : 					pMatch->CreateMover();

  000e5	e8 00 00 00 00	 call	 ?CreateMover@CColosseumMatch@@QAEXXZ ; CColosseumMatch::CreateMover
$L254247:
  000ea	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$254242[esp+20]
  000ee	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCColosseumMatch@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCColosseumMatch@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CColosseumMatch *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CColosseumMatch *> >,0> >::const_iterator::_Inc
  000f3	8b 44 24 0c	 mov	 eax, DWORD PTR _it$254242[esp+20]
  000f7	3b 46 1c	 cmp	 eax, DWORD PTR [esi+28]
  000fa	0f 85 20 ff ff
	ff		 jne	 $L270621
$L270799:
  00100	5f		 pop	 edi
  00101	5d		 pop	 ebp
$L254248:
  00102	5e		 pop	 esi

; 158  : 				}
; 159  : 			}
; 160  : 		}
; 161  : 	}
; 162  : }

  00103	83 c4 08	 add	 esp, 8
  00106	c3		 ret	 0
$L270791:

; 145  : 					{
; 146  : 						CUser* pUser = pMatch->GetUser( pMatch->m_vecPlayerID.at(i) );

  00107	8b cf		 mov	 ecx, edi
  00109	e9 00 00 00 00	 jmp	 ?_Xran@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xran
?Process@CColosseumMng@@QAEXXZ ENDP			; CColosseumMng::Process
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?sColosseum@?1??GetInstance@CColosseumMng@@SAPAV2@XZ@4V2@A
  00005	e9 00 00 00 00	 jmp	 ??1CColosseumMng@@UAE@XZ ; CColosseumMng::~CColosseumMng
_$E2	ENDP
text$yd	ENDS
END
