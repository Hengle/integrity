; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	\Documents and Settings\test\Mes documents\Source\Virtuos_v17\Build\Program\_Common\Campus.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0DO@DGDKGKMG@Pupil?5is?5already?5campus?5member?5?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@JNKIGAEJ@Pupil?5is?5full?5?9?5idCampus?5?3?5?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@BJIJDFJ@Member?5not?5found?5?9?5idCampus?5?3?5?$CFd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ?GetPlayerId@CCampusMember@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLevel@CCampusMember@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampusId@CCampus@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCampusId@CCampus@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMaster@CCampus@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsMaster@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectMemberClear@__GuildCombatMember@CGuildCombat@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0__MINIGAME_PACKET@@QAE@GHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@__MINIGAME_PACKET@@UAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@__MINIGAME_EXT_PACKET@@UAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MINIGMAME_PRIZE_LIST@CRainbowRaceMng@@QAE@KHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CCampusMember@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCampusMember@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CCampusMember@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CCampus@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCampus@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CCampus@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampusMember@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CCampus@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsPupil@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPupilNum@CCampus@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMemberLv@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsMember@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveMember@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMember@CCampus@@QAEPAVCCampusMember@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsChangeBuffLevel@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffLevel@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CCampusMng@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCampusMng@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CCampusMng@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampus@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CCampusMng@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveCampus@CCampusMng@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsFull@?$CStack@K@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@@std@@QAEAAPAVCCtrl@@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCCtrl@@@std@@QAE@ABKABQAVCCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMax@?$CItemContainer@VCItemElem@@@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEAAPAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEAAPAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuild@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuild@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEAAPAU__JOINPLAYER@CGuildCombat@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAU_PlayerData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAU_PlayerData@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAEXABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCRainbowRace@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCRainbowRace@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAEAAPAVCMiniGameBase@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAEAAUGuildHouse_Furniture_Info@CGuildHouseBase@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCCampusMember@@@std@@QAE@ABKABQAVCCampusMember@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCCampus@@@std@@QAE@ABKABQAVCCampus@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKK@std@@QAE@ABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCCtrl@@@std@@QAE@ABKABQAVCCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEABQAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEABQAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAE@V?$allocator@U__SECRETROOM_MONSTER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__SECRETROOM_MONSTER@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@V312@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@V312@ABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU34@IABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCGuildHouseBase@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEAAPAU__JOINPLAYER@CGuildCombat@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEAAPAVCMiniGameBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEAAUGuildHouse_Furniture_Info@CGuildHouseBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampusMember@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampus@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@IAEXPAPAU__JOINPLAYER@CGuildCombat@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@QAEXPAPAU__JOINPLAYER@CGuildCombat@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IAEXPAU__SECRETROOM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U__SECRETROOM_MONSTER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEXPAU__SECRETROOM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEPAU__SECRETROOM_MONSTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXViterator@12@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEXViterator@12@IABUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCGuildHouseBase@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE@PAPAU__JOINPLAYER@CGuildCombat@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QBEABQAU__JOINPLAYER@CGuildCombat@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE@PAPAVCMiniGameBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QBEABQAVCMiniGameBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE@PAUGuildHouse_Furniture_Info@CGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QBEABUGuildHouse_Furniture_Info@CGuildHouseBase@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKK@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U__SECRETROOM_MONSTER@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@QAE@PAPAU__JOINPLAYER@CGuildCombat@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QAE@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCMiniGameBase@@V?$allocator@PAVCMiniGameBase@@@std@@@std@@QAE@PAPAVCMiniGameBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UGuildHouse_Furniture_Info@CGuildHouseBase@@V?$allocator@UGuildHouse_Furniture_Info@CGuildHouseBase@@@std@@@std@@QAE@PAUGuildHouse_Furniture_Info@CGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKK@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCGuildHouseBase@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKU_Friend@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKU_Friend@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABVconst_iterator@?$vector@EV?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Assign@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__SPAWNREGION@CEventLua@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAU__SPAWNREGION@CEventLua@@IU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@IABU12@AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUWORMON@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWORMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UWORMON@@V?$allocator@UWORMON@@@std@@@std@@YAXPAUWORMON@@0AAV?$allocator@UWORMON@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEMGAME@CMiniGame@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEMGAME@CMiniGame@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEMGAME@CMiniGame@@V?$allocator@U__ITEMGAME@CMiniGame@@@std@@@std@@YAXPAU__ITEMGAME@CMiniGame@@0AAV?$allocator@U__ITEMGAME@CMiniGame@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@HV?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEM@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEM@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEM@CExchange@@V?$allocator@U__ITEM@CExchange@@@std@@@std@@YAXPAU__ITEM@CExchange@@0AAV?$allocator@U__ITEM@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__POINT@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__POINT@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__POINT@CExchange@@V?$allocator@U__POINT@CExchange@@@std@@@std@@YAXPAU__POINT@CExchange@@0AAV?$allocator@U__POINT@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUD3DXVECTOR3@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@0AAV?$allocator@UD3DXVECTOR3@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_GIFTBOX@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_GIFTBOX@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U_GIFTBOX@@V?$allocator@U_GIFTBOX@@@std@@@std@@YAXPAU_GIFTBOX@@0AAV?$allocator@U_GIFTBOX@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SPAWNREGION@CEventLua@@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@0AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$make_pair@KPAVCGuildHouseBase@@@std@@YA?AU?$pair@KPAVCGuildHouseBase@@@0@KPAVCGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0KPAVCGuildHouseBase@@@?$pair@$$CBKPAVCGuildHouseBase@@@std@@QAE@ABU?$pair@KPAVCGuildHouseBase@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@@?$vector@KV?$allocator@K@std@@@std@@IAEPAKVconst_iterator@01@0PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IABU12@AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAKK@std@@YAXPAK0ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagACTMSG@@@?$allocator@PAPAUtagACTMSG@@@std@@QAE@ABV?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagACTMSG@@@std@@YAXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagMAGICATKMSG@@@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAE@ABV?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagMAGICATKMSG@@@std@@YAXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@YAXPAPAU__JOINPLAYER@CGuildCombat@@0AAV?$allocator@PAU__JOINPLAYER@CGuildCombat@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@YAXPAU__SECRETROOM_MONSTER@@0AAV?$allocator@U__SECRETROOM_MONSTER@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U__SECRETROOM_MONSTER@@@std@@YAPAU__SECRETROOM_MONSTER@@IPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@?$vector@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@IAEPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU23@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@U12@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagACTMSG@@@std@@YAXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagMAGICATKMSG@@@std@@YAXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKK@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IPAU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCGuildHouseBase@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildHouseBase@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKK@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UWORMON@@@std@@QAEXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEMGAME@CMiniGame@@@std@@QAEXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEM@CExchange@@@std@@QAEXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__POINT@CExchange@@@std@@QAEXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@ABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UD3DXVECTOR3@@@std@@QAEXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_GIFTBOX@@@std@@QAEXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCGuildHouseBase@@@std@@QAE@ABKABQAVCGuildHouseBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@AAPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@IABU12@AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@U__JOINPLAYER@CGuildCombat@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU__JOINPLAYER@CGuildCombat@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAU__JOINPLAYER@CGuildCombat@@V?$allocator@PAU__JOINPLAYER@CGuildCombat@@@std@@@std@@YAXPAPAU__JOINPLAYER@CGuildCombat@@0AAV?$allocator@PAU__JOINPLAYER@CGuildCombat@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__SECRETROOM_MONSTER@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__SECRETROOM_MONSTER@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SECRETROOM_MONSTER@@V?$allocator@U__SECRETROOM_MONSTER@@@std@@@std@@YAXPAU__SECRETROOM_MONSTER@@0AAV?$allocator@U__SECRETROOM_MONSTER@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@0AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UWORMON@@@std@@YAXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEMGAME@CMiniGame@@@std@@YAXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEM@CExchange@@@std@@YAXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__POINT@CExchange@@@std@@YAXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@U__SPAWNREGION@CEventLua@@U12@@std@@YAXPAU__SPAWNREGION@CEventLua@@ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__SPAWNREGION@CEventLua@@@std@@YAXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UD3DXVECTOR3@@@std@@YAXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_GIFTBOX@@@std@@YAXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@E@std@@QAEXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@E@std@@QAEXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__SECRETROOM_MONSTER@@@std@@QAEXPAU__SECRETROOM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@ABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@QAEXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAK@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@KV?$allocator@K@std@@@0@AAPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAKIK@std@@YAXPAKIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@V?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@@std@@YAPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@PAU12@00AAV?$allocator@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@EE@std@@YAXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@E@std@@YAXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__SECRETROOM_MONSTER@@@std@@YAXPAU__SECRETROOM_MONSTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@U12@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@std@@YAXPAUMINIGMAME_PRIZE_LIST@CRainbowRaceMng@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@K@std@@QAEXPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@KK@std@@YAXPAKABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@K@std@@YAXPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEU_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@EE@std@@YAPAEPAE00AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEVconst_iterator@01@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCtrl@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCtrl@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCtrl@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValidObj@@YAHPAVCObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDelete@CObj@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5@YAAAVCAr@@AAV0@AAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?time_null@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6@YAAAVCAr@@AAV0@UD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7__MINIGAME_EXT_PACKET@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7__MINIGAME_PACKET@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsStoring@CAr@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTickCount@CTime@ATL@@SG?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetPlayerId@CCampusMember@@QAEKXZ		; CCampusMember::GetPlayerId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
;	COMDAT ?GetPlayerId@CCampusMember@@QAEKXZ
_TEXT	SEGMENT
?GetPlayerId@CCampusMember@@QAEKXZ PROC NEAR		; CCampusMember::GetPlayerId, COMDAT
; _this$ = ecx

; 29   : 	u_long	GetPlayerId()	{	return m_idPlayer;	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetPlayerId@CCampusMember@@QAEKXZ ENDP			; CCampusMember::GetPlayerId
_TEXT	ENDS
PUBLIC	?GetLevel@CCampusMember@@QAEHXZ			; CCampusMember::GetLevel
; Function compile flags: /Ogty
;	COMDAT ?GetLevel@CCampusMember@@QAEHXZ
_TEXT	SEGMENT
?GetLevel@CCampusMember@@QAEHXZ PROC NEAR		; CCampusMember::GetLevel, COMDAT
; _this$ = ecx

; 32   : 	int		GetLevel()	{	return m_nMemberLv;	}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetLevel@CCampusMember@@QAEHXZ ENDP			; CCampusMember::GetLevel
_TEXT	ENDS
PUBLIC	?GetCampusId@CCampus@@QAEKXZ			; CCampus::GetCampusId
; Function compile flags: /Ogty
;	COMDAT ?GetCampusId@CCampus@@QAEKXZ
_TEXT	SEGMENT
?GetCampusId@CCampus@@QAEKXZ PROC NEAR			; CCampus::GetCampusId, COMDAT
; _this$ = ecx

; 50   : 	u_long	GetCampusId()	{	return m_idCampus;	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetCampusId@CCampus@@QAEKXZ ENDP			; CCampus::GetCampusId
_TEXT	ENDS
PUBLIC	?SetCampusId@CCampus@@QAEXK@Z			; CCampus::SetCampusId
; Function compile flags: /Ogty
;	COMDAT ?SetCampusId@CCampus@@QAEXK@Z
_TEXT	SEGMENT
_idCampus$ = 8						; size = 4
?SetCampusId@CCampus@@QAEXK@Z PROC NEAR			; CCampus::SetCampusId, COMDAT
; _this$ = ecx

; 51   : 	void	SetCampusId( u_long idCampus )	{	m_idCampus = idCampus;	}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _idCampus$[esp-4]
  00004	89 01		 mov	 DWORD PTR [ecx], eax
  00006	c2 04 00	 ret	 4
?SetCampusId@CCampus@@QAEXK@Z ENDP			; CCampus::SetCampusId
_TEXT	ENDS
PUBLIC	?GetMaster@CCampus@@QAEKXZ			; CCampus::GetMaster
; Function compile flags: /Ogty
;	COMDAT ?GetMaster@CCampus@@QAEKXZ
_TEXT	SEGMENT
?GetMaster@CCampus@@QAEKXZ PROC NEAR			; CCampus::GetMaster, COMDAT
; _this$ = ecx

; 52   : 	u_long	GetMaster()		{	return m_idMaster;	}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetMaster@CCampus@@QAEKXZ ENDP				; CCampus::GetMaster
_TEXT	ENDS
PUBLIC	?IsMaster@CCampus@@QAEHK@Z			; CCampus::IsMaster
; Function compile flags: /Ogty
;	COMDAT ?IsMaster@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?IsMaster@CCampus@@QAEHK@Z PROC NEAR			; CCampus::IsMaster, COMDAT
; _this$ = ecx

; 54   : 	BOOL	IsMaster( u_long idPlayer )		{	return ( idPlayer == m_idMaster );	}

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _idPlayer$[esp-4]
  00004	56		 push	 esi
  00005	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00008	33 c0		 xor	 eax, eax
  0000a	3b d6		 cmp	 edx, esi
  0000c	0f 94 c0	 sete	 al
  0000f	5e		 pop	 esi
  00010	c2 04 00	 ret	 4
?IsMaster@CCampus@@QAEHK@Z ENDP				; CCampus::IsMaster
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0CCampusMember@@QAE@XZ			; CCampusMember::CCampusMember
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ??0CCampusMember@@QAE@XZ
_TEXT	SEGMENT
??0CCampusMember@@QAE@XZ PROC NEAR			; CCampusMember::CCampusMember, COMDAT
; _this$ = ecx

; 19   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00008	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 20   : 
; 21   : }

  0000f	c3		 ret	 0
??0CCampusMember@@QAE@XZ ENDP				; CCampusMember::CCampusMember
_TEXT	ENDS
PUBLIC	??1CCampusMember@@QAE@XZ			; CCampusMember::~CCampusMember
; Function compile flags: /Ogty
;	COMDAT ??1CCampusMember@@QAE@XZ
_TEXT	SEGMENT
??1CCampusMember@@QAE@XZ PROC NEAR			; CCampusMember::~CCampusMember, COMDAT
; _this$ = ecx

; 25   : 
; 26   : }

  00000	c3		 ret	 0
??1CCampusMember@@QAE@XZ ENDP				; CCampusMember::~CCampusMember
_TEXT	ENDS
PUBLIC	??_GCCampusMember@@QAEPAXI@Z			; CCampusMember::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCCampusMember@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampusMember@@QAEPAXI@Z PROC NEAR			; CCampusMember::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	f6 44 24 04 01	 test	 BYTE PTR ___flags$[esp-4], 1
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	74 09		 je	 SHORT $L255713
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L255713:
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??_GCCampusMember@@QAEPAXI@Z ENDP			; CCampusMember::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCCampusMember@@@std@@QAE@ABKABQAVCCampusMember@@@Z ; std::pair<unsigned long const ,CCampusMember *>::pair<unsigned long const ,CCampusMember *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKPAVCCampusMember@@@std@@QAE@ABKABQAVCCampusMember@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCCampusMember@@@std@@QAE@ABKABQAVCCampusMember@@@Z PROC NEAR ; std::pair<unsigned long const ,CCampusMember *>::pair<unsigned long const ,CCampusMember *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCCampusMember@@@std@@QAE@ABKABQAVCCampusMember@@@Z ENDP ; std::pair<unsigned long const ,CCampusMember *>::pair<unsigned long const ,CCampusMember *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCCampus@@@std@@QAE@ABKABQAVCCampus@@@Z ; std::pair<unsigned long const ,CCampus *>::pair<unsigned long const ,CCampus *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCCampus@@@std@@QAE@ABKABQAVCCampus@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCCampus@@@std@@QAE@ABKABQAVCCampus@@@Z PROC NEAR ; std::pair<unsigned long const ,CCampus *>::pair<unsigned long const ,CCampus *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCCampus@@@std@@QAE@ABKABQAVCCampus@@@Z ENDP ; std::pair<unsigned long const ,CCampus *>::pair<unsigned long const ,CCampus *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKK@std@@QAE@ABK0@Z		; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKK@std@@QAE@ABK0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKK@std@@QAE@ABK0@Z PROC NEAR		; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKK@std@@QAE@ABK0@Z ENDP			; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L255735
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L255735:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L255740
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L255740:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampusMember@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampus@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCCampus@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z ENDP ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@XZ	; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampusMember@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampusMember@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampusMember@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampusMember@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::allocator<std::pair<unsigned long const ,CCampusMember *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampus@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampus@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampus@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCCampus@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CCampus *> >::allocator<std::pair<unsigned long const ,CCampus *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKK@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,unsigned long> >::allocator<std::pair<unsigned long const ,unsigned long> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampusMember@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampusMember@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampusMember@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampus@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampus@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCCampus@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L252429
  0000e	8b ff		 npad	 2
$L252428:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L252428
$L252429:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L252433
  0000d	8d 49 00	 npad	 3
$L252432:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L252432
$L252433:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CCampusMember *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L252477
  0000e	8b ff		 npad	 2
$L252476:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L252476
$L252477:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L252481
  0000d	8d 49 00	 npad	 3
$L252480:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L252480
$L252481:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CCampus *> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CCampus *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CCampus *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L252525
  0000e	8b ff		 npad	 2
$L252524:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L252524
$L252525:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L252529
  0000d	8d 49 00	 npad	 3
$L252528:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L252528
$L252529:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKK@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,unsigned long> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKK@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKK@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKK@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L252572

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L252572:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L256117

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L256102
$L256101:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L256101
$L256102:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L256117:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L256120
  0003d	8d 49 00	 npad	 3
$L252578:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L252579

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L252578
$L252579:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L256120

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L256120:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L252754

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L252754:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L256176

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L256161
$L256160:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L256160
$L256161:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L256176:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L256179
  0003d	8d 49 00	 npad	 3
$L252760:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L252761

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L252760
$L252761:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L256179

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L256179:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L252765

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L252765:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L256235

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L256220
$L256219:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L256219
$L256220:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L256235:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L256238
  0003d	8d 49 00	 npad	 3
$L252771:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L252772

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L252771
$L252772:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L256238

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L256238:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKK@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKK@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKK@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKK@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$fill@PAKK@std@@YAXPAK0ABK@Z			; std::fill<unsigned long *,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAKK@std@@YAXPAK0ABK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAKK@std@@YAXPAK0ABK@Z PROC NEAR		; std::fill<unsigned long *,unsigned long>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L253698
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L253696:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L253696
  0001c	5e		 pop	 esi
$L253698:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAKK@std@@YAXPAK0ABK@Z ENDP			; std::fill<unsigned long *,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *><std::pair<unsigned long const ,CCampusMember *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *><std::pair<unsigned long const ,CCampusMember *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *><std::pair<unsigned long const ,CCampusMember *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *><std::pair<unsigned long const ,CCampus *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *><std::pair<unsigned long const ,CCampus *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *><std::pair<unsigned long const ,CCampus *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKK@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *><std::pair<unsigned long const ,unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKK@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKK@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *><std::pair<unsigned long const ,unsigned long> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKK@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *><std::pair<unsigned long const ,unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node><std::pair<unsigned long const ,CCampusMember *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node><std::pair<unsigned long const ,CCampusMember *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCCampusMember@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node><std::pair<unsigned long const ,CCampusMember *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L256315
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L256315:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node><std::pair<unsigned long const ,CCampus *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node><std::pair<unsigned long const ,CCampus *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCCampus@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node><std::pair<unsigned long const ,CCampus *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L256327
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L256327:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKK@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node><std::pair<unsigned long const ,unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKK@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKK@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node><std::pair<unsigned long const ,unsigned long> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKK@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node><std::pair<unsigned long const ,unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L256339
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L256339:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<unsigned long *,unsigned long *>
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<unsigned long *,unsigned long *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAK@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@KV?$allocator@K@std@@@0@AAPAK@Z ; std::_Ptr_cat<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAK@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@KV?$allocator@K@std@@@0@AAPAK@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAK@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@KV?$allocator@K@std@@@0@AAPAK@Z PROC NEAR ; std::_Ptr_cat<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAK@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@KV?$allocator@K@std@@@0@AAPAK@Z ENDP ; std::_Ptr_cat<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAKIK@std@@YAXPAKIABK@Z		; std::fill_n<unsigned long *,unsigned int,unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAKIK@std@@YAXPAKIABK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAKIK@std@@YAXPAKIABK@Z PROC NEAR		; std::fill_n<unsigned long *,unsigned int,unsigned long>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L254464
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L254462:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L254462
  0001b	5e		 pop	 esi
$L254464:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAKIK@std@@YAXPAKIABK@Z ENDP			; std::fill_n<unsigned long *,unsigned int,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned long,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<unsigned long,unsigned long>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@KK@std@@YAPAKPAK00AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 91   : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 92   : 			++_Myptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 93   : 			return (*this);
; 94   : 			}

  00005	c3		 ret	 0
??Econst_iterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??$_Construct@KK@std@@YAXPAKABK@Z		; std::_Construct<unsigned long,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Construct@KK@std@@YAXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@KK@std@@YAXPAKABK@Z PROC NEAR		; std::_Construct<unsigned long,unsigned long>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L256377
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L256377:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@KK@std@@YAXPAKABK@Z ENDP			; std::_Construct<unsigned long,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy@K@std@@YAXPAK@Z			; std::_Destroy<unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@K@std@@YAXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@K@std@@YAXPAK@Z PROC NEAR			; std::_Destroy<unsigned long>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@K@std@@YAXPAK@Z ENDP			; std::_Destroy<unsigned long>
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L256391:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L256391
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 371  : 	{	// return pointer category from pointer to unsigned long arguments

  00000	51		 push	 ecx

; 372  : 	_Scalar_ptr_iterator_tag _Cat;
; 373  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 374  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	?IsDelete@CObj@@QAEHXZ				; CObj::IsDelete
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\obj.h
;	COMDAT ?IsDelete@CObj@@QAEHXZ
_TEXT	SEGMENT
?IsDelete@CObj@@QAEHXZ PROC NEAR			; CObj::IsDelete, COMDAT
; _this$ = ecx

; 180  : 	BOOL			IsDelete()	{ return (m_dwFlags & OBJ_FLAG_DELETE);  }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 e0 01	 and	 eax, 1
  00006	c3		 ret	 0
?IsDelete@CObj@@QAEHXZ ENDP				; CObj::IsDelete
_TEXT	ENDS
PUBLIC	?IsValidObj@@YAHPAVCObj@@@Z			; IsValidObj
; Function compile flags: /Ogty
;	COMDAT ?IsValidObj@@YAHPAVCObj@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?IsValidObj@@YAHPAVCObj@@@Z PROC NEAR			; IsValidObj, COMDAT

; 327  : 	return pObj && ( pObj->IsDelete() == FALSE ); 

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pObj$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 0c		 je	 SHORT $L256408
  00008	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  0000c	75 06		 jne	 SHORT $L256408
  0000e	b8 01 00 00 00	 mov	 eax, 1

; 328  : }

  00013	c3		 ret	 0
$L256408:

; 327  : 	return pObj && ( pObj->IsDelete() == FALSE ); 

  00014	33 c0		 xor	 eax, eax

; 328  : }

  00016	c3		 ret	 0
?IsValidObj@@YAHPAVCObj@@@Z ENDP			; IsValidObj
_TEXT	ENDS
PUBLIC	?IsStoring@CAr@@QBEHXZ				; CAr::IsStoring
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ?IsStoring@CAr@@QBEHXZ
_TEXT	SEGMENT
?IsStoring@CAr@@QBEHXZ PROC NEAR			; CAr::IsStoring, COMDAT
; _this$ = ecx

; 96   : 	{ return (m_nMode & CAr::load) == 0; }

  00000	33 c0		 xor	 eax, eax
  00002	8a 01		 mov	 al, BYTE PTR [ecx]
  00004	f7 d0		 not	 eax
  00006	83 e0 01	 and	 eax, 1
  00009	c3		 ret	 0
?IsStoring@CAr@@QBEHXZ ENDP				; CAr::IsStoring
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@J@Z				; CAr::operator<<
EXTRN	?CheckBuf@CAr@@QAEXI@Z:NEAR			; CAr::CheckBuf
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??6CAr@@QAEAAV0@J@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 113  : 	{ CheckBuf( sizeof(LONG) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 114  : 		*(UNALIGNED LONG*)m_lpBufCur = l; m_lpBufCur += sizeof(LONG); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _l$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@J@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@K@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??6CAr@@QAEAAV0@K@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 116  : 	{ CheckBuf( sizeof(DWORD) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 117  : 		*(UNALIGNED DWORD*)m_lpBufCur = dw; m_lpBufCur += sizeof(DWORD); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _dw$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@K@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAK@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??5CAr@@QAEAAV0@AAK@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 146  : 	{	CAR_SAFE_READ( DWORD, dw );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L205468
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _dw$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L205468:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _dw$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAK@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAJ@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??5CAr@@QAEAAV0@AAJ@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 152  : 	{	CAR_SAFE_READ( LONG, l );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L205498
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _l$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L205498:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _l$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAJ@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L256434
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L256434:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC NEAR			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L256451
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L256451:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC NEAR	; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L256470
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L256471
$L256470:
  00011	8b d0		 mov	 edx, eax
$L256471:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L222788
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L256478
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L256478:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L222788
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L222788:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC NEAR		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC NEAR		; std::_Allocate<unsigned long>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 468  : 		return (const_iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 469  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 478  : 		return (const_iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 479  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampusMember@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampusMember@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampusMember@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampus@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampus@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCCampus@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L251754
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L251753:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L251755

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L251756
$L251755:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L251756:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L251753
  00029	5b		 pop	 ebx
$L251754:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L251760

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L251760:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L251761

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L251761:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L251763

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L251763:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L251768

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L251768:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L251769

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L251769:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L251771

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L251771:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L251871
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L251870:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L251872

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L251873
$L251872:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L251873:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L251870
  00029	5b		 pop	 ebx
$L251871:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L251877

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L251877:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L251878

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L251878:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L251880

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L251880:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L251885

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L251885:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L251886

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L251886:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L251888

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L251888:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L251988
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L251987:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L251989

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L251990
$L251989:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L251990:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L251987
  00029	5b		 pop	 ebx
$L251988:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L251994

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L251994:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L251995

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L251995:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L251997

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L251997:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L252002

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L252002:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L252003

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L252003:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L252005

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L252005:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L252050

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L257328

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L257316
  0001d	8d 49 00	 npad	 3
$L257315:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L257315
$L257316:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L257328:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L252054
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L252053:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L252054

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L252053
$L252054:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L252050:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L252324

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L257381

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L257369
  0001d	8d 49 00	 npad	 3
$L257368:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L257368
$L257369:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L257381:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L252328
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L252327:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L252328

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L252327
$L252328:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L252324:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L252344

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L257434

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L257422
  0001d	8d 49 00	 npad	 3
$L257421:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L257421
$L257422:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L257434:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L252348
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L252347:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L252348

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L252347
$L252348:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L252344:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@KV?$allocator@K@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L252442
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L252441:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L252443

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L252444
$L252443:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L252444:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L252441
  00029	5b		 pop	 ebx
$L252442:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L252490
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L252489:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L252491

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L252492
$L252491:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L252492:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L252489
  00029	5b		 pop	 ebx
$L252490:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L257566
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L257566:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L257592
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L257592:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L257618
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L257618:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z	; std::copy_backward<unsigned long *,unsigned long *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z PROC NEAR	; std::copy_backward<unsigned long *,unsigned long *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z ENDP		; std::copy_backward<unsigned long *,unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L257642
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L257640:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L257640
  0001b	5e		 pop	 esi
$L257642:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@KIK@std@@YAXPAKIABKAAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<unsigned long,unsigned int,unsigned long>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z PROC NEAR ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAKPAKV?$allocator@K@std@@@std@@YAPAKPAK00AAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_copy<unsigned long *,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@K@std@@QAEXPAKABK@Z	; std::allocator<unsigned long>::construct
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@K@std@@QAEXPAKABK@Z PROC NEAR	; std::allocator<unsigned long>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L257672
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L257672:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@K@std@@QAEXPAKABK@Z ENDP		; std::allocator<unsigned long>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@K@std@@QAEXPAK@Z		; std::allocator<unsigned long>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@K@std@@QAEXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@K@std@@QAEXPAK@Z PROC NEAR		; std::allocator<unsigned long>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@K@std@@QAEXPAK@Z ENDP		; std::allocator<unsigned long>::destroy
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@H@Z				; CAr::operator<<
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??6CAr@@QAEAAV0@H@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 99   : 	{ return CAr::operator<<((LONG)i); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _i$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@H@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@I@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??6CAr@@QAEAAV0@I@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 101  : 	{ return CAr::operator<<((LONG)u); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _u$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@I@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAH@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??5CAr@@QAEAAV0@AAH@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 126  : 	{ return CAr::operator>>((LONG&)i); }

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L257707
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _i$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L257707:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _i$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAH@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAI@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??5CAr@@QAEAAV0@AAI@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 128  : 	{ return CAr::operator>>((LONG&)u); }

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L257715
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _u$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L257715:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _u$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAI@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z PROC NEAR ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L257738
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L257738:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC NEAR	; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?Serialize@CCampusMember@@QAEXAAVCAr@@@Z	; CCampusMember::Serialize
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ?Serialize@CCampusMember@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
?Serialize@CCampusMember@@QAEXAAVCAr@@@Z PROC NEAR	; CCampusMember::Serialize, COMDAT
; _this$ = ecx

; 29   : {

  00000	56		 push	 esi

; 30   : 	if( ar.IsStoring() )

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _ar$[esp]
  00005	33 c0		 xor	 eax, eax
  00007	8a 06		 mov	 al, BYTE PTR [esi]
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	f7 d0		 not	 eax
  0000e	a8 01		 test	 al, 1
  00010	74 35		 je	 SHORT $L249013
  00012	53		 push	 ebx

; 31   : 		ar << m_idPlayer << m_nMemberLv;

  00013	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00015	6a 04		 push	 4
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0001e	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00021	89 19		 mov	 DWORD PTR [ecx], ebx
  00023	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00027	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0002a	6a 04		 push	 4
  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00033	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00036	89 3a		 mov	 DWORD PTR [edx], edi
  00038	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003b	5b		 pop	 ebx
  0003c	83 c0 04	 add	 eax, 4
  0003f	5f		 pop	 edi

; 32   : 	else
; 33   : 		ar >> m_idPlayer >> m_nMemberLv;

  00040	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00043	5e		 pop	 esi

; 34   : }

  00044	c2 04 00	 ret	 4
$L249013:

; 32   : 	else
; 33   : 		ar >> m_idPlayer >> m_nMemberLv;

  00047	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004a	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0004d	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00050	3b ca		 cmp	 ecx, edx
  00052	77 0c		 ja	 SHORT $L257803
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	89 17		 mov	 DWORD PTR [edi], edx
  00058	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005b	83 c0 04	 add	 eax, 4
  0005e	eb 09		 jmp	 SHORT $L257820
$L257803:
  00060	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00066	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
$L257820:
  00069	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0006c	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  0006f	3b ca		 cmp	 ecx, edx
  00071	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00074	77 13		 ja	 SHORT $L257815
  00076	8b 10		 mov	 edx, DWORD PTR [eax]
  00078	89 57 04	 mov	 DWORD PTR [edi+4], edx
  0007b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0007e	83 c0 04	 add	 eax, 4
  00081	5f		 pop	 edi
  00082	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00085	5e		 pop	 esi

; 34   : }

  00086	c2 04 00	 ret	 4

; 32   : 	else
; 33   : 		ar >> m_idPlayer >> m_nMemberLv;

$L257815:
  00089	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00090	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00093	5f		 pop	 edi
  00094	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00097	5e		 pop	 esi

; 34   : }

  00098	c2 04 00	 ret	 4
?Serialize@CCampusMember@@QAEXAAVCAr@@@Z ENDP		; CCampusMember::Serialize
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampusMember@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampusMember@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampusMember@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampusMember@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampus@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampus@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampus@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBKPAVCCampus@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L258046
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L258014:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L258016
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L258017
$L258016:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L258017:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L258014
  00029	5b		 pop	 ebx
$L258046:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L251043
$L251041:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L251041
$L251043:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L258136
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L258123:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L258125
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L258126
$L258125:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L258126:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L258123
  00029	5b		 pop	 ebx
$L258136:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L251141
$L251139:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L251139
$L251141:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L258226
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L258194:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L258196
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L258197
$L258196:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L258197:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L258194
  00029	5b		 pop	 ebx
$L258226:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L251239
$L251237:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L251237
$L251239:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L258343
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L258330:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L258332
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L258333
$L258332:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L258333:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L258330
  00029	5b		 pop	 ebx
$L258343:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
EXTRN	__CxxThrowException@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L258349
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L258349:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L258449
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L258436:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L258438
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L258439
$L258438:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L258439:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L258436
  00029	5b		 pop	 ebx
$L258449:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L258455
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L258455:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L258485
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L258485:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L258547
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L258547:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L258574
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258574:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L258601
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258601:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L258686
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L258686:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L258713
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258713:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L258740
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258740:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L258825
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L258825:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L258852
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258852:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L258879
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L258879:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L258949
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L258947:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L258947
  0001b	5e		 pop	 esi
$L258949:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAKIKV?$allocator@K@std@@@std@@YAXPAKIABKAAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_fill_n<unsigned long *,unsigned int,unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 78   : 	_FwdIt _Next = _Dest;
; 79   : 
; 80   : 	_TRY_BEGIN
; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	3b ca		 cmp	 ecx, edx
  0000a	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  0000e	74 14		 je	 SHORT $L254457
  00010	56		 push	 esi
$L258981:

; 82   : 		_Al.construct(_Dest, *_First);

  00011	85 c0		 test	 eax, eax
  00013	74 04		 je	 SHORT $L254456
  00015	8b 31		 mov	 esi, DWORD PTR [ecx]
  00017	89 30		 mov	 DWORD PTR [eax], esi
$L254456:
  00019	83 c1 04	 add	 ecx, 4
  0001c	83 c0 04	 add	 eax, 4
  0001f	3b ca		 cmp	 ecx, edx
  00021	75 ee		 jne	 SHORT $L258981
  00023	5e		 pop	 esi
$L254457:

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)
; 85   : 		_Al.destroy(_Next);
; 86   : 	_RERAISE;
; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  00024	c3		 ret	 0
??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L259031

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L259031

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L259028
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L259028:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L259031:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L259059

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L259059:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L221371

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L221371:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L221372

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L221372:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L259105

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L259071
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L259072
$L259071:
  00036	8b d3		 mov	 edx, ebx
$L259072:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L259077
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L259078
$L259077:
  00041	8b cb		 mov	 ecx, ebx
$L259078:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L259100

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L259100:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L259105:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T259310 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T259312 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L259112
$T259313 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L259110
$T259311 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T259312
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T259313
$T259304 DD	019930520H
	DD	04H
	DD	FLAT:$T259310
	DD	02H
	DD	FLAT:$T259311
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L222778

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L222780
$L222778:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L222780
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L222780

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L222780:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L222782
$L259110:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L259305
  00092	c3		 ret	 0
$L259305:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L222782:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L259229

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L259225
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L259226
$L259225:
  000ae	83 c6 04	 add	 esi, 4
$L259226:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L259229:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L259266
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L259266:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L259300
  000f2	8b c2		 mov	 eax, edx
$L259300:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L259112:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L259205
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L259205:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L259315:
$L259309:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T259304
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T259359 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L259455
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L259454:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L259456
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L259457
$L259456:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L259457:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L259454
$L259455:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L259358
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L259358
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L259358:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T259359[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T259359[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T259559 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L259655
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L259654:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L259656
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L259657
$L259656:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L259657:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L259654
$L259655:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L259558
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L259558
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L259558:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T259559[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T259559[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T259759 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L259836
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L259835:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L259837
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L259838
$L259837:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L259838:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L259835
$L259836:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L259758
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L259758
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L259758:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T259759[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T259759[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L259975
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L259969:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L259969
  00021	5b		 pop	 ebx
$L259975:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::equal_range
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L260056
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L260055:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L260057
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L260058
$L260057:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L260058:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L260055
$L260056:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L260167
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L260166:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L260168
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L260169
$L260168:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L260169:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L260166
$L260167:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L260286
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L260285:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L260287
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L260288
$L260287:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L260288:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L260285
$L260286:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L260388
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L260387:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L260389
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L260390
$L260389:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L260390:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L260387
$L260388:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@@Z ; std::_Uninitialized_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__Cat$260676 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@@Z PROC NEAR ; std::_Uninitialized_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$260676[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L254112
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L260688:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L260688
  00023	5e		 pop	 esi
$L254112:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L254119
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L260708:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L260708
  00023	5e		 pop	 esi
$L254119:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L260754
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L260754:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L260783
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L260783:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L221380

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L221380:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L221381

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L221381:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L221383
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L221383
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L260789
  00047	8b de		 mov	 ebx, esi
$L260789:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L260843
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L260841
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L260841:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L260843:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L221383:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L260880

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L260878
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L260878:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L260880:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?Clear@CCampus@@QAEXXZ				; CCampus::Clear
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ?Clear@CCampus@@QAEXXZ
_TEXT	SEGMENT
_it$249103 = -4						; size = 4
?Clear@CCampus@@QAEXXZ PROC NEAR			; CCampus::Clear, COMDAT
; _this$ = ecx

; 52   : {

  00000	51		 push	 ecx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 53   : 	for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  00006	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	3b f0		 cmp	 esi, eax
  0000d	89 74 24 0c	 mov	 DWORD PTR _it$249103[esp+16], esi
  00011	74 29		 je	 SHORT $L249108
$L260927:

; 54   : 		SAFE_DELETE( it->second );

  00013	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00016	85 c0		 test	 eax, eax
  00018	74 10		 je	 SHORT $L249107
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$L249107:
  0002a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$249103[esp+16]
  0002e	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  00033	8b 74 24 0c	 mov	 esi, DWORD PTR _it$249103[esp+16]
  00037	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  0003a	75 d7		 jne	 SHORT $L260927
$L249108:

; 55   : 
; 56   : 	m_mapCM.clear();

  0003c	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0003f	8b 68 04	 mov	 ebp, DWORD PTR [eax+4]
  00042	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00045	83 c7 08	 add	 edi, 8
  00048	84 c0		 test	 al, al
  0004a	8b f5		 mov	 esi, ebp
  0004c	75 21		 jne	 SHORT $L261105
  0004e	8b ff		 npad	 2
$L261103:
  00050	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00053	51		 push	 ecx
  00054	8b cf		 mov	 ecx, edi
  00056	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase
  0005b	8b 36		 mov	 esi, DWORD PTR [esi]
  0005d	55		 push	 ebp
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00063	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00066	83 c4 04	 add	 esp, 4
  00069	84 c0		 test	 al, al
  0006b	8b ee		 mov	 ebp, esi
  0006d	74 e1		 je	 SHORT $L261103
$L261105:
  0006f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00072	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0007f	89 00		 mov	 DWORD PTR [eax], eax
  00081	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00084	89 7f 08	 mov	 DWORD PTR [edi+8], edi
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5d		 pop	 ebp

; 57   : }

  0008a	59		 pop	 ecx
  0008b	c3		 ret	 0
?Clear@CCampus@@QAEXXZ ENDP				; CCampus::Clear
_TEXT	ENDS
PUBLIC	?GetPupilNum@CCampus@@QAEHXZ			; CCampus::GetPupilNum
; Function compile flags: /Ogty
;	COMDAT ?GetPupilNum@CCampus@@QAEHXZ
_TEXT	SEGMENT
_it$249209 = -4						; size = 4
?GetPupilNum@CCampus@@QAEHXZ PROC NEAR			; CCampus::GetPupilNum, COMDAT
; _this$ = ecx

; 101  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi

; 102  : 	int nPupil = 0;
; 103  : 	for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  00002	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  00005	8b 06		 mov	 eax, DWORD PTR [esi]
  00007	57		 push	 edi
  00008	33 ff		 xor	 edi, edi
  0000a	3b c6		 cmp	 eax, esi
  0000c	89 44 24 08	 mov	 DWORD PTR _it$249209[esp+12], eax
  00010	74 1b		 je	 SHORT $L261226
$L261171:

; 104  : 	{
; 105  : 		if( ( it->second )->GetLevel() == CAMPUS_PUPIL )

  00012	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00015	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00019	75 01		 jne	 SHORT $L249213

; 106  : 			++nPupil;

  0001b	47		 inc	 edi
$L249213:

; 102  : 	int nPupil = 0;
; 103  : 	for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  0001c	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$249209[esp+12]
  00020	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  00025	8b 44 24 08	 mov	 eax, DWORD PTR _it$249209[esp+12]
  00029	3b c6		 cmp	 eax, esi
  0002b	75 e5		 jne	 SHORT $L261171
$L261226:

; 107  : 	}
; 108  : 	return nPupil;

  0002d	8b c7		 mov	 eax, edi
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 109  : }

  00031	59		 pop	 ecx
  00032	c3		 ret	 0
?GetPupilNum@CCampus@@QAEHXZ ENDP			; CCampus::GetPupilNum
_TEXT	ENDS
PUBLIC	?GetMember@CCampus@@QAEPAVCCampusMember@@K@Z	; CCampus::GetMember
; Function compile flags: /Ogty
;	COMDAT ?GetMember@CCampus@@QAEPAVCCampusMember@@K@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_idPlayer$ = 8						; size = 4
?GetMember@CCampus@@QAEPAVCCampusMember@@K@Z PROC NEAR	; CCampus::GetMember, COMDAT
; _this$ = ecx

; 167  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 168  : 	MAP_CM::iterator it = m_mapCM.find( idPlayer );

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _idPlayer$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find

; 169  : 	if( it != m_mapCM.end() )

  00016	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L249271

; 170  : 		return it->second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 173  : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L249271:

; 171  : 	
; 172  : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 173  : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?GetMember@CCampus@@QAEPAVCCampusMember@@K@Z ENDP	; CCampus::GetMember
_TEXT	ENDS
PUBLIC	?GetBuffLevel@CCampus@@QAEHK@Z			; CCampus::GetBuffLevel
EXTRN	?g_UserMng@@3VCUserMng@@A:BYTE			; g_UserMng
EXTRN	?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z:NEAR ; CUserMng::GetUserByPlayerID
; Function compile flags: /Ogty
;	COMDAT ?GetBuffLevel@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_it$249285 = 8						; size = 4
_idPlayer$ = 8						; size = 4
?GetBuffLevel@CCampus@@QAEHK@Z PROC NEAR		; CCampus::GetBuffLevel, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 192  : 	int nLevel = 0;
; 193  : 	if( IsMaster( idPlayer ) )

  00004	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00007	8b 4c 24 0c	 mov	 ecx, DWORD PTR _idPlayer$[esp+4]
  0000b	33 ed		 xor	 ebp, ebp
  0000d	3b c8		 cmp	 ecx, eax
  0000f	75 4d		 jne	 SHORT $L249284

; 194  : 	{
; 195  : 		for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  00011	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00014	56		 push	 esi
  00015	8b 30		 mov	 esi, DWORD PTR [eax]
  00017	3b f0		 cmp	 esi, eax
  00019	89 74 24 10	 mov	 DWORD PTR _it$249285[esp+8], esi
  0001d	74 37		 je	 SHORT $L261435
  0001f	90		 npad	 1
$L261322:

; 196  : 		{
; 197  : 			CUser* pPupil = g_UserMng.GetUserByPlayerID( ( it->second )->GetPlayerId() );

  00020	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	50		 push	 eax
  00026	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  0002b	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID

; 198  : 			if( IsValidObj( pPupil ) && ( it->second )->GetLevel() == CAMPUS_PUPIL )

  00030	85 c0		 test	 eax, eax
  00032	74 10		 je	 SHORT $L249289
  00034	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  00038	75 0a		 jne	 SHORT $L249289
  0003a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003d	83 79 04 02	 cmp	 DWORD PTR [ecx+4], 2
  00041	75 01		 jne	 SHORT $L249289

; 199  : 				++nLevel;

  00043	45		 inc	 ebp
$L249289:

; 194  : 	{
; 195  : 		for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  00044	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$249285[esp+8]
  00048	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  0004d	8b 74 24 10	 mov	 esi, DWORD PTR _it$249285[esp+8]
  00051	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  00054	75 ca		 jne	 SHORT $L261322
$L261435:
  00056	5e		 pop	 esi
  00057	5f		 pop	 edi

; 207  : 	}
; 208  : 	return nLevel;

  00058	8b c5		 mov	 eax, ebp
  0005a	5d		 pop	 ebp

; 209  : }

  0005b	c2 04 00	 ret	 4
$L249284:

; 200  : 		}
; 201  : 	}
; 202  : 	else
; 203  : 	{
; 204  : 		CUser* pMaster = g_UserMng.GetUserByPlayerID( GetMaster() );

  0005e	50		 push	 eax
  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_UserMng@@3VCUserMng@@A
  00064	e8 00 00 00 00	 call	 ?GetUserByPlayerID@CUserMng@@QAEPAVCUser@@K@Z ; CUserMng::GetUserByPlayerID

; 205  : 		if( IsValidObj( pMaster ) )

  00069	85 c0		 test	 eax, eax
  0006b	74 10		 je	 SHORT $L261437
  0006d	f6 40 04 01	 test	 BYTE PTR [eax+4], 1
  00071	75 0a		 jne	 SHORT $L261437
  00073	5f		 pop	 edi

; 206  : 			++nLevel;

  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	5d		 pop	 ebp

; 209  : }

  0007a	c2 04 00	 ret	 4
$L261437:
  0007d	5f		 pop	 edi

; 207  : 	}
; 208  : 	return nLevel;

  0007e	8b c5		 mov	 eax, ebp
  00080	5d		 pop	 ebp

; 209  : }

  00081	c2 04 00	 ret	 4
?GetBuffLevel@CCampus@@QAEHK@Z ENDP			; CCampus::GetBuffLevel
_TEXT	ENDS
PUBLIC	?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z	; CCampusMng::GetCampus
; Function compile flags: /Ogty
;	COMDAT ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_idCampus$ = 8						; size = 4
?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z PROC NEAR	; CCampusMng::GetCampus, COMDAT
; _this$ = ecx

; 295  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 296  : 	MAP_CAMPUS::iterator it	= m_mapCampus.find( idCampus );

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _idCampus$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find

; 297  : 	if( it != m_mapCampus.end() )

  00016	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L249524

; 298  : 		return it->second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 301  : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L249524:

; 299  : 	
; 300  : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 301  : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ENDP		; CCampusMng::GetCampus
_TEXT	ENDS
PUBLIC	?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z	; CCampusMng::GetCampusIdByPlayerId
; Function compile flags: /Ogty
;	COMDAT ?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_idPlayer$ = 8						; size = 4
?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z PROC NEAR	; CCampusMng::GetCampusIdByPlayerId, COMDAT
; _this$ = ecx

; 310  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 311  : 	MAP_PID2CID::iterator it	= m_mapPid2Cid.find( idPlayer );

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _idPlayer$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::find

; 312  : 	if( it != m_mapPid2Cid.end() )

  00016	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L249562

; 313  : 		return it->second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 316  : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L249562:

; 314  : 	
; 315  : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 316  : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z ENDP		; CCampusMng::GetCampusIdByPlayerId
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKK@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@@?$vector@KV?$allocator@K@std@@@std@@IAEPAKVconst_iterator@01@0PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@@?$vector@KV?$allocator@K@std@@@std@@IAEPAKVconst_iterator@01@0PAK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$261916 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@@?$vector@KV?$allocator@K@std@@@std@@IAEPAKVconst_iterator@01@0PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$261916[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@@?$vector@KV?$allocator@K@std@@@std@@IAEPAKVconst_iterator@01@0PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T261960 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T261960[esp], eax
  0000f	74 21		 je	 SHORT $L261948
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L261953:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T261960[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T261960[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L261953
  00031	5e		 pop	 esi
$L261948:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T262002 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T262002[esp], eax
  0000f	74 21		 je	 SHORT $L261990
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L261995:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T262002[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T262002[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L261995
  00031	5e		 pop	 esi
$L261990:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L262065
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L262065:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L262098
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L262098:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L262105
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L262105:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L220001

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L220001:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L220003

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L220003:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L220004

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L220004:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L262243
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L262243:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L262244
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L262302:
  0006b	76 6d		 jbe	 SHORT $L262301

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L262266
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L262267

; 599  : 		else if (_Grow(_Num))

$L262244:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L262302
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L262236
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L262236:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L262266:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L262267:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L262273
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L262274
$L262273:
  000b7	8b f8		 mov	 edi, eax
$L262274:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L262296
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L262296:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L262301:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L262323
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L262324
$L262323:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L262324:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L221367
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L262327
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L262328
$L262327:
  00029	8b c8		 mov	 ecx, eax
$L262328:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L221367

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L262340
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L262340:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L221367:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L262439
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L262439:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L262440
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L262520:
  00077	76 68		 jbe	 SHORT $L262517

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L262492
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L262493

; 611  : 
; 612  : 		if (_Grow(_Num))

$L262440:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L262520
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L262483
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L262483:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L262492:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L262493:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L262515
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L262515:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L262517:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?GetMemberLv@CCampus@@QAEHK@Z			; CCampus::GetMemberLv
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ?GetMemberLv@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_it$262595 = -4						; size = 4
$T262597 = 8						; size = 4
_idPlayer$ = 8						; size = 4
?GetMemberLv@CCampus@@QAEHK@Z PROC NEAR			; CCampus::GetMemberLv, COMDAT
; _this$ = ecx

; 120  : {

  00000	51		 push	 ecx

; 121  : 	CCampusMember* pMember = GetMember( idPlayer );

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _idPlayer$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T262597[esp+4]
  0000c	51		 push	 ecx
  0000d	8d 54 24 08	 lea	 edx, DWORD PTR _it$262595[esp+12]
  00011	52		 push	 edx
  00012	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00015	89 44 24 14	 mov	 DWORD PTR $T262597[esp+12], eax
  00019	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
  0001e	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00021	8b 44 24 04	 mov	 eax, DWORD PTR _it$262595[esp+8]
  00025	3b c1		 cmp	 eax, ecx
  00027	5e		 pop	 esi
  00028	74 0e		 je	 SHORT $L249235
  0002a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 122  : 	if( pMember )

  0002d	85 c0		 test	 eax, eax
  0002f	74 07		 je	 SHORT $L249235

; 123  : 		return pMember->GetLevel();

  00031	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 126  : }

  00034	59		 pop	 ecx
  00035	c2 04 00	 ret	 4
$L249235:

; 124  : 	
; 125  : 	return 0;

  00038	33 c0		 xor	 eax, eax

; 126  : }

  0003a	59		 pop	 ecx
  0003b	c2 04 00	 ret	 4
?GetMemberLv@CCampus@@QAEHK@Z ENDP			; CCampus::GetMemberLv
_TEXT	ENDS
PUBLIC	?IsMember@CCampus@@QAEHK@Z			; CCampus::IsMember
; Function compile flags: /Ogty
;	COMDAT ?IsMember@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_it$262656 = -4						; size = 4
$T262678 = 8						; size = 4
_idPlayer$ = 8						; size = 4
?IsMember@CCampus@@QAEHK@Z PROC NEAR			; CCampus::IsMember, COMDAT
; _this$ = ecx

; 129  : {

  00000	51		 push	 ecx

; 130  : 	CCampusMember* pCM = GetMember( idPlayer );

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _idPlayer$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T262678[esp+4]
  0000c	51		 push	 ecx
  0000d	8d 54 24 08	 lea	 edx, DWORD PTR _it$262656[esp+12]
  00011	52		 push	 edx
  00012	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00015	89 44 24 14	 mov	 DWORD PTR $T262678[esp+12], eax
  00019	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
  0001e	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00021	8b 44 24 04	 mov	 eax, DWORD PTR _it$262656[esp+8]
  00025	3b c1		 cmp	 eax, ecx
  00027	5e		 pop	 esi
  00028	74 10		 je	 SHORT $L249241

; 131  : 	if( pCM )

  0002a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0002d	85 c9		 test	 ecx, ecx
  0002f	74 09		 je	 SHORT $L249241

; 132  : 		return TRUE;

  00031	b8 01 00 00 00	 mov	 eax, 1

; 135  : }

  00036	59		 pop	 ecx
  00037	c2 04 00	 ret	 4
$L249241:

; 133  : 	
; 134  : 	return FALSE;

  0003a	33 c0		 xor	 eax, eax

; 135  : }

  0003c	59		 pop	 ecx
  0003d	c2 04 00	 ret	 4
?IsMember@CCampus@@QAEHK@Z ENDP				; CCampus::IsMember
_TEXT	ENDS
PUBLIC	?IsChangeBuffLevel@CCampus@@QAEHK@Z		; CCampus::IsChangeBuffLevel
; Function compile flags: /Ogty
;	COMDAT ?IsChangeBuffLevel@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?IsChangeBuffLevel@CCampus@@QAEHK@Z PROC NEAR		; CCampus::IsChangeBuffLevel, COMDAT
; _this$ = ecx

; 178  : 	if( IsMaster( idPlayer ) )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _idPlayer$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0000a	75 19		 jne	 SHORT $L249278

; 179  : 	{
; 180  : 		int nLevel = GetBuffLevel( idPlayer );

  0000c	50		 push	 eax
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ?GetBuffLevel@CCampus@@QAEHK@Z ; CCampus::GetBuffLevel

; 181  : 		if( m_nPreBuffLevel != nLevel )

  00014	39 46 14	 cmp	 DWORD PTR [esi+20], eax
  00017	74 0c		 je	 SHORT $L249278

; 182  : 		{
; 183  : 			m_nPreBuffLevel = nLevel;

  00019	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 184  : 			return TRUE;

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi

; 188  : }

  00022	c2 04 00	 ret	 4
$L249278:

; 185  : 		}
; 186  : 	}
; 187  : 	return FALSE;

  00025	33 c0		 xor	 eax, eax
  00027	5e		 pop	 esi

; 188  : }

  00028	c2 04 00	 ret	 4
?IsChangeBuffLevel@CCampus@@QAEHK@Z ENDP		; CCampus::IsChangeBuffLevel
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L262758:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L262758
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?IsPupil@CCampus@@QAEHK@Z			; CCampus::IsPupil
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ?IsPupil@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_it$262846 = -4						; size = 4
$T262836 = 8						; size = 4
_idPlayer$ = 8						; size = 4
?IsPupil@CCampus@@QAEHK@Z PROC NEAR			; CCampus::IsPupil, COMDAT
; _this$ = ecx

; 82   : {

  00000	51		 push	 ecx

; 83   : 	if( GetMemberLv( idPlayer ) == CAMPUS_PUPIL )

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _idPlayer$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T262836[esp+4]
  0000c	51		 push	 ecx
  0000d	8d 54 24 08	 lea	 edx, DWORD PTR _it$262846[esp+12]
  00011	52		 push	 edx
  00012	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00015	89 44 24 14	 mov	 DWORD PTR $T262836[esp+12], eax
  00019	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
  0001e	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00021	8b 44 24 04	 mov	 eax, DWORD PTR _it$262846[esp+8]
  00025	3b c1		 cmp	 eax, ecx
  00027	5e		 pop	 esi
  00028	74 16		 je	 SHORT $L249189
  0002a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0002d	85 c0		 test	 eax, eax
  0002f	74 0f		 je	 SHORT $L249189
  00031	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  00035	75 09		 jne	 SHORT $L249189

; 84   : 		return TRUE;

  00037	b8 01 00 00 00	 mov	 eax, 1

; 87   : }

  0003c	59		 pop	 ecx
  0003d	c2 04 00	 ret	 4
$L249189:

; 85   : 
; 86   : 	return FALSE;

  00040	33 c0		 xor	 eax, eax

; 87   : }

  00042	59		 pop	 ecx
  00043	c2 04 00	 ret	 4
?IsPupil@CCampus@@QAEHK@Z ENDP				; CCampus::IsPupil
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T262974 DD	0ffffffffH
	DD	FLAT:$L262874
$T262972 DD	019930520H
	DD	01H
	DD	FLAT:$T262974
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L262874:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T262972
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L262984
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L262984:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L263073
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L263073:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L263098
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L263098:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L263198
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L263198:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L263280:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L263280
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T263401 DD	0ffffffffH
	DD	FLAT:$L263286
$T263398 DD	019930520H
	DD	01H
	DD	FLAT:$T263401
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T263285 = -80						; size = 28
$T263284 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T263285[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T263285[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T263285[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T263285[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T263285[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T263284[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T263284[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T263284[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L263402:
$L263400:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L263286:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T263285[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T263398
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
;	COMDAT xdata$x
xdata$x	SEGMENT
$T263508 DD	0ffffffffH
	DD	FLAT:$L263408
$T263506 DD	019930520H
	DD	01H
	DD	FLAT:$T263508
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L263408:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T263506
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T263890 DD	0ffffffffH
	DD	FLAT:$L263520
$T263885 DD	019930520H
	DD	01H
	DD	FLAT:$T263890
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT
$T263519 = -80						; size = 28
$T263518 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L251047

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T263519[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T263519[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T263519[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T263519[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T263519[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T263518[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T263518[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T263518[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L263891:
$L251047:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampusMember@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L251052

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L251057
$L251052:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L251054

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L251057

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L251057
$L251054:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L251057

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251057:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L251061
  000e5	55		 push	 ebp
$L251060:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L251062

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L251063
$L263889:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L251068
$L251063:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L251065

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate
$L251065:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L251068
$L251062:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L263889

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L251069

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate
$L251069:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate
$L251068:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L251060
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L251061:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L263888:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L263520:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T263519[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T263885
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T264269 DD	0ffffffffH
	DD	FLAT:$L263899
$T264264 DD	019930520H
	DD	01H
	DD	FLAT:$T264269
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT
$T263898 = -80						; size = 28
$T263897 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L251145

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T263898[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T263898[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T263898[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T263898[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T263898[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T263897[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T263897[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T263897[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L264270:
$L251145:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCCampus@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L251150

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L251155
$L251150:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L251152

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L251155

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L251155
$L251152:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L251155

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251155:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L251159
  000e5	55		 push	 ebp
$L251158:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L251160

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L251161
$L264268:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L251166
$L251161:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L251163

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate
$L251163:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L251166
$L251160:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L264268

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L251167

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate
$L251167:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate
$L251166:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L251158
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L251159:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L264267:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L263899:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T263898[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264264
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T264648 DD	0ffffffffH
	DD	FLAT:$L264278
$T264643 DD	019930520H
	DD	01H
	DD	FLAT:$T264648
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT
$T264277 = -80						; size = 28
$T264276 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L251243

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T264277[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T264277[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T264277[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T264277[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T264277[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T264276[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T264276[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T264276[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L264649:
$L251243:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKK@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L251248

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L251253
$L251248:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L251250

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L251253

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L251253
$L251250:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L251253

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251253:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L251257
  000e5	55		 push	 ebp
$L251256:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L251258

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L251259
$L264647:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L251264
$L251259:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L251261

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
$L251261:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L251264
$L251258:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L264647

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L251265

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
$L251265:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
$L251264:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L251256
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L251257:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L264646:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264278:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T264277[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264643
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Insert
PUBLIC	?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z
_TEXT	SEGMENT
__Newvec$251603 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L264666
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L264667
$L264666:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L264667:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L251623

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L264689
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L264690
$L264689:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L264690:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L251599

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L264820:
$L251599:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L264696
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L264697
$L264696:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L264697:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L251601

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L264655
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L264656
$L264655:
  0007f	03 c1		 add	 eax, ecx
$L264656:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L264719
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L264720
$L264719:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L264720:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L251602

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L264726
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L264727
$L264726:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L264727:
  000a7	03 c7		 add	 eax, edi
$L251602:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$251603[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L264808
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L264809
$L264808:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L264809:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L264811

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L264811:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$251603[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L251601:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L251614
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAKIABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAKK@std@@YAXPAK0ABK@Z ; std::fill<unsigned long *,unsigned long>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L251614:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Ucopy<unsigned long *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAKPAK@std@@YAPAKPAK00@Z ; std::copy_backward<unsigned long *,unsigned long *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAKK@std@@YAXPAK0ABK@Z ; std::fill<unsigned long *,unsigned long>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L251623:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L264819:
?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
_TEXT	ENDS
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T265316 DD	0ffffffffH
	DD	FLAT:$L264830
$T265308 DD	019930520H
	DD	01H
	DD	FLAT:$T265316
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T264825 = -80						; size = 28
$T264824 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L251695

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T264825[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T264825[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T264825[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T264825[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T264825[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T264824[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T264824[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T264824[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L265317:
$L251695:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L251703

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L265311
$L251703:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L251705

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L265311
$L251705:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L251707
$L265311:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L251708

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251708:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L251709

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L251712
$L251709:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L251711

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L251712
$L251711:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L251712:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L251713

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L264826
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L264827
$L264826:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L264827:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L251713:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L265144

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L264828
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L265144
$L264828:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L265144
$L251707:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L251716

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L251717
$L251716:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L251718

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251718:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L251717:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L251719

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L251722
$L251719:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L251721

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L251722
$L251721:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251722:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L265144:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L251723

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L251726
  0018e	8b ff		 npad	 2
$L251724:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L251726

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L251727

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L251728

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251728:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L265314

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L251731
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L265315
$L251731:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L251733

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251733:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L251726
$L251727:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L251735

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L251735:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L265314

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L251738
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L251738
$L265315:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L265314:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L251724

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L251726
$L251738:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L251740

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L251740:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Rrotate
$L251726:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L251723:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L251741

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L251741:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L265313:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L264830:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T264825[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T265308
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T265819 DD	0ffffffffH
	DD	FLAT:$L265333
$T265811 DD	019930520H
	DD	01H
	DD	FLAT:$T265819
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T265328 = -80						; size = 28
$T265327 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L251812

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T265328[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T265328[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T265328[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T265328[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T265328[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T265327[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T265327[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T265327[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L265820:
$L251812:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L251820

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L265814
$L251820:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L251822

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L265814
$L251822:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L251824
$L265814:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L251825

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251825:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L251826

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L251829
$L251826:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L251828

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L251829
$L251828:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L251829:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L251830

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L265329
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L265330
$L265329:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L265330:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L251830:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L265648

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L265331
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L265648
$L265331:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L265648
$L251824:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L251833

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L251834
$L251833:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L251835

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251835:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L251834:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L251836

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L251839
$L251836:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L251838

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L251839
$L251838:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251839:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L265648:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L251840

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L251843
  0018e	8b ff		 npad	 2
$L251841:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L251843

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L251844

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L251845

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251845:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L265817

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L251848
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L265818
$L251848:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L251850

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251850:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L251843
$L251844:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L251852

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L251852:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L265817

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L251855
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L251855
$L265818:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L265817:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L251841

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L251843
$L251855:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L251857

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L251857:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Rrotate
$L251843:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L251840:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L251858

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L251858:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L265816:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L265333:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T265328[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T265811
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T266318 DD	0ffffffffH
	DD	FLAT:$L265832
$T266310 DD	019930520H
	DD	01H
	DD	FLAT:$T266318
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T265827 = -80						; size = 28
$T265826 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L251929

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T265827[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T265827[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T265827[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T265827[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T265827[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T265826[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T265826[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T265826[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L266319:
$L251929:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L251937

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L266313
$L251937:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L251939

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L266313
$L251939:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L251941
$L266313:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L251942

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251942:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L251943

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L251946
$L251943:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L251945

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L251946
$L251945:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L251946:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L251947

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L265828
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L265829
$L265828:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L265829:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L251947:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L266146

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L265830
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L266146
$L265830:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L266146
$L251941:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L251950

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L251951
$L251950:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L251952

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L251952:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L251951:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L251953

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L251956
$L251953:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L251955

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L251956
$L251955:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L251956:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L266146:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L251957

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L251960
  0018e	8b ff		 npad	 2
$L251958:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L251960

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L251961

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L251962

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251962:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L266316

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L251965
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L266317
$L251965:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L251967

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L251967:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L251960
$L251961:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L251969

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L251969:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L266316

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L251972
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L251972
$L266317:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L266316:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L251958

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L251960
$L251972:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L251974

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L251974:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
$L251960:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L251957:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L251975

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L251975:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L266315:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L265832:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T265827[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T266310
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
PUBLIC	?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L220539

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L220539:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L220541

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L266350:
$L220541:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L266349:
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
xdata$x	SEGMENT
$T266473 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T266475 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L266358
$T266474 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T266475
$T266469 DD	019930520H
	DD	02H
	DD	FLAT:$T266473
	DD	01H
	DD	FLAT:$T266474
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$266463 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 329  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	53		 push	 ebx

; 330  : 		if (_Buy(_Right.size()))

  0001c	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  0001f	56		 push	 esi
  00020	8b f1		 mov	 esi, ecx
  00022	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00025	33 d2		 xor	 edx, edx
  00027	3b ca		 cmp	 ecx, edx
  00029	57		 push	 edi
  0002a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002d	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00030	75 04		 jne	 SHORT $L266377
  00032	33 c0		 xor	 eax, eax
  00034	eb 08		 jmp	 SHORT $L266378
$L266377:
  00036	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00039	2b c1		 sub	 eax, ecx
  0003b	c1 f8 02	 sar	 eax, 2
$L266378:
  0003e	3b c2		 cmp	 eax, edx
  00040	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00043	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00046	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00049	74 46		 je	 SHORT $L249583
  0004b	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00050	76 07		 jbe	 SHORT $L266419
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L266476:
$L266419:
  00059	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00060	57		 push	 edi
  00061	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 331  : 			_TRY_BEGIN
; 332  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

  00066	8b 55 08	 mov	 edx, DWORD PTR __Cat$266463[ebp]
  00069	52		 push	 edx
  0006a	03 f8		 add	 edi, eax
  0006c	56		 push	 esi
  0006d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00070	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00073	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00076	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00079	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  0007c	50		 push	 eax
  0007d	51		 push	 ecx
  0007e	53		 push	 ebx
  0007f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00086	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@KV?$allocator@K@std@@@std@@PAKV?$allocator@K@3@@std@@YAPAKVconst_iterator@?$vector@KV?$allocator@K@std@@@0@0PAKAAV?$allocator@K@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator,unsigned long *,std::allocator<unsigned long> >
  0008b	83 c4 18	 add	 esp, 24			; 00000018H
  0008e	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L249583:

; 336  : 			_CATCH_END
; 337  : 		}

  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00094	5f		 pop	 edi
  00095	8b c6		 mov	 eax, esi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
$L266358:

; 333  : 			_CATCH_ALL
; 334  : 			_Tidy();

  000a6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy

; 335  : 			_RERAISE;

  000ae	6a 00		 push	 0
  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 __CxxThrowException@8
$L266477:
$L266472:
  000b7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T266469
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T266490 = 12						; size = 4
$T266488 = 12						; size = 4
__Where$249809 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L249799
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L249798:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L266482
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L266483
$L266482:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L266483:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L249798
$L249799:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$249809[esp+12], edx
  00045	74 33		 je	 SHORT $L266582

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T266488[esp+12]
  00050	75 1f		 jne	 SHORT $L249814
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L249814:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$249809[esp+12]
$L266582:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L249819

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T266490[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L249819:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T266627 = 12						; size = 4
$T266625 = 12						; size = 4
__Where$249911 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L249901
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L249900:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L266619
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L266620
$L266619:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L266620:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L249900
$L249901:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$249911[esp+12], edx
  00045	74 33		 je	 SHORT $L266718

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T266625[esp+12]
  00050	75 1f		 jne	 SHORT $L249916
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L249916:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$249911[esp+12]
$L266718:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L249921

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T266627[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L249921:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T266764 = 12						; size = 4
$T266762 = 12						; size = 4
__Where$250011 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L250001
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L250000:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L266756
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L266757
$L266756:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L266757:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L250000
$L250001:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$250011[esp+12], edx
  00045	74 33		 je	 SHORT $L266856

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T266762[esp+12]
  00050	75 1f		 jne	 SHORT $L250016
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L250016:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$250011[esp+12]
$L266856:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L250021

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T266764[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L250021:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::insert
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L266955
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L266894
$L266955:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L266895
$L266894:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L266895:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@V312@ABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T266962 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L267294
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L267294

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L267294:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L251025
$L251024:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L267264
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L267296
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L267264
  0006e	8b ff		 npad	 2
$L267278:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L267278
  0007b	eb 1d		 jmp	 SHORT $L267264
$L267296:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L267267
$L267266:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L267267
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L267266
$L267267:
  00098	8b f0		 mov	 esi, eax
$L267264:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T266962[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L251024
$L251025:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T267305 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T267305[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T267371 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L267703
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L267703

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L267703:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L251123
$L251122:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L267695
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L267705
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L267695
  0006e	8b ff		 npad	 2
$L267683:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L267683
  0007b	eb 1d		 jmp	 SHORT $L267695
$L267705:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L267698
$L267697:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L267698
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L267697
$L267698:
  00098	8b f0		 mov	 esi, eax
$L267695:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T267371[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L251122
$L251123:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T267714 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T267714[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T267780 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L268112
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L268112

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L268112:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L251221
$L251220:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L268083
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L268114
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L268083
  0006e	8b ff		 npad	 2
$L268097:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L268097
  0007b	eb 1d		 jmp	 SHORT $L268083
$L268114:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L268086
$L268085:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L268086
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L268085
$L268086:
  00098	8b f0		 mov	 esi, eax
$L268083:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T267780[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L251220
$L251221:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T268123 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T268123[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?Serialize@CCampus@@QAEXAAVCAr@@@Z		; CCampus::Serialize
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ?Serialize@CCampus@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT
tv332 = -20						; size = 4
$T268269 = -20						; size = 4
$T268265 = -20						; size = 4
_it$249142 = -20					; size = 4
$T268251 = -16						; size = 8
$T268253 = -8						; size = 8
_ar$ = 8						; size = 4
?Serialize@CCampus@@QAEXAAVCAr@@@Z PROC NEAR		; CCampus::Serialize, COMDAT
; _this$ = ecx

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 61   : 	if( ar.IsStoring() )

  0000b	8b 75 08	 mov	 esi, DWORD PTR _ar$[ebp]
  0000e	33 c0		 xor	 eax, eax
  00010	8a 06		 mov	 al, BYTE PTR [esi]
  00012	57		 push	 edi
  00013	8b f9		 mov	 edi, ecx
  00015	f7 d0		 not	 eax
  00017	a8 01		 test	 al, 1
  00019	0f 84 85 00 00
	00		 je	 $L249141

; 62   : 	{
; 63   : 		ar << m_idCampus << m_idMaster << m_mapCM.size();

  0001f	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00021	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00024	89 4c 24 0c	 mov	 DWORD PTR $T268265[esp+32], ecx
  00028	6a 04		 push	 4
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00031	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00034	8b 44 24 0c	 mov	 eax, DWORD PTR $T268265[esp+32]
  00038	89 02		 mov	 DWORD PTR [edx], eax
  0003a	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  0003e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00041	89 4c 24 0c	 mov	 DWORD PTR $T268269[esp+32], ecx
  00045	6a 04		 push	 4
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0004e	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00051	8b 44 24 0c	 mov	 eax, DWORD PTR $T268269[esp+32]
  00055	89 02		 mov	 DWORD PTR [edx], eax
  00057	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00064	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00067	89 19		 mov	 DWORD PTR [ecx], ebx
  00069	83 46 08 04	 add	 DWORD PTR [esi+8], 4

; 64   : 		for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  0006d	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00070	8b 01		 mov	 eax, DWORD PTR [ecx]
  00072	3b c1		 cmp	 eax, ecx
  00074	89 44 24 0c	 mov	 DWORD PTR _it$249142[esp+32], eax
  00078	0f 84 e1 00 00
	00		 je	 $L249154
  0007e	8b ff		 npad	 2
$L268314:

; 65   : 			( it->second )->Serialize( ar );

  00080	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 ?Serialize@CCampusMember@@QAEXAAVCAr@@@Z ; CCampusMember::Serialize
  00089	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$249142[esp+32]
  0008d	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  00092	8b 44 24 0c	 mov	 eax, DWORD PTR _it$249142[esp+32]
  00096	3b 47 0c	 cmp	 eax, DWORD PTR [edi+12]
  00099	75 e5		 jne	 SHORT $L268314

; 77   : 		}
; 78   : 	}
; 79   : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
$L249141:

; 66   : 	}
; 67   : 	else
; 68   : 	{
; 69   : 		Clear();

  000a4	8b cf		 mov	 ecx, edi
  000a6	e8 00 00 00 00	 call	 ?Clear@CCampus@@QAEXXZ	; CCampus::Clear

; 70   : 		size_t nSize;
; 71   : 		ar >> m_idCampus >> m_idMaster >> nSize;

  000ab	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ae	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000b1	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  000b4	3b d1		 cmp	 edx, ecx
  000b6	77 0a		 ja	 SHORT $L268366
  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
  000ba	89 07		 mov	 DWORD PTR [edi], eax
  000bc	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  000c0	eb 0c		 jmp	 SHORT $L268367
$L268366:
  000c2	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000c8	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000cb	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
$L268367:
  000ce	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d1	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000d4	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  000d7	3b d1		 cmp	 edx, ecx
  000d9	77 0b		 ja	 SHORT $L268371
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000e0	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  000e4	eb 0d		 jmp	 SHORT $L268372
$L268371:
  000e6	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  000ed	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000f0	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
$L268372:
  000f3	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000f6	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  000f9	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  000fc	3b ca		 cmp	 ecx, edx
  000fe	77 07		 ja	 SHORT $L268383
  00100	8b 00		 mov	 eax, DWORD PTR [eax]
  00102	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00105	eb 05		 jmp	 SHORT $L268384
$L268383:
  00107	33 c0		 xor	 eax, eax
  00109	89 56 08	 mov	 DWORD PTR [esi+8], edx
$L268384:

; 72   : 		for( int i = 0; i < (int)( nSize ); ++i )

  0010c	85 c0		 test	 eax, eax
  0010e	7e 4f		 jle	 SHORT $L249154
  00110	83 c7 08	 add	 edi, 8

; 73   : 		{
; 74   : 			CCampusMember* pMember = new CCampusMember;
; 75   : 			pMember->Serialize( ar );

  00113	89 7c 24 0c	 mov	 DWORD PTR tv332[esp+32], edi
  00117	8b d8		 mov	 ebx, eax
  00119	8d a4 24 00 00
	00 00		 npad	 7
$L249152:
  00120	6a 08		 push	 8
  00122	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00127	33 ff		 xor	 edi, edi
  00129	83 c4 04	 add	 esp, 4
  0012c	3b c7		 cmp	 eax, edi
  0012e	74 07		 je	 SHORT $L268250
  00130	89 38		 mov	 DWORD PTR [eax], edi
  00132	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00135	8b f8		 mov	 edi, eax
$L268250:
  00137	56		 push	 esi
  00138	8b cf		 mov	 ecx, edi
  0013a	e8 00 00 00 00	 call	 ?Serialize@CCampusMember@@QAEXAAVCAr@@@Z ; CCampusMember::Serialize

; 76   : 			m_mapCM.insert( MAP_CM::value_type( pMember->GetPlayerId(), pMember ) );

  0013f	8b 17		 mov	 edx, DWORD PTR [edi]
  00141	8d 44 24 10	 lea	 eax, DWORD PTR $T268251[esp+32]
  00145	50		 push	 eax
  00146	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T268253[esp+36]
  0014a	51		 push	 ecx
  0014b	8b 4c 24 14	 mov	 ecx, DWORD PTR tv332[esp+40]
  0014f	89 54 24 18	 mov	 DWORD PTR $T268251[esp+40], edx
  00153	89 7c 24 1c	 mov	 DWORD PTR $T268251[esp+44], edi
  00157	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::insert
  0015c	4b		 dec	 ebx
  0015d	75 c1		 jne	 SHORT $L249152
$L249154:

; 77   : 		}
; 78   : 	}
; 79   : }

  0015f	5f		 pop	 edi
  00160	5e		 pop	 esi
  00161	5b		 pop	 ebx
  00162	8b e5		 mov	 esp, ebp
  00164	5d		 pop	 ebp
  00165	c2 04 00	 ret	 4
?Serialize@CCampus@@QAEXAAVCAr@@@Z ENDP			; CCampus::Serialize
_TEXT	ENDS
PUBLIC	?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z	; CCampus::AddMember
PUBLIC	??_C@_0DO@DGDKGKMG@Pupil?5is?5already?5campus?5member?5?9@ ; `string'
PUBLIC	??_C@_0BO@JNKIGAEJ@Pupil?5is?5full?5?9?5idCampus?5?3?5?$CFd?$AA@ ; `string'
EXTRN	?Error@@YAPBDPBDZZ:NEAR				; Error
;	COMDAT ??_C@_0DO@DGDKGKMG@Pupil?5is?5already?5campus?5member?5?9@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
CONST	SEGMENT
??_C@_0DO@DGDKGKMG@Pupil?5is?5already?5campus?5member?5?9@ DB 'Pupil is a'
	DB	'lready campus member - idCampus : %d, idPlayer : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JNKIGAEJ@Pupil?5is?5full?5?9?5idCampus?5?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BO@JNKIGAEJ@Pupil?5is?5full?5?9?5idCampus?5?3?5?$CFd?$AA@ DB 'Pupi'
	DB	'l is full - idCampus : %d', 00H		; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
CONST	ENDS
;	COMDAT ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z
_TEXT	SEGMENT
_it$268479 = -16					; size = 4
$T268401 = -16						; size = 8
$T268403 = -8						; size = 8
$T268481 = 8						; size = 4
_pMember$ = 8						; size = 4
?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z PROC NEAR	; CCampus::AddMember, COMDAT
; _this$ = ecx

; 138  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp

; 139  : 	if( GetMember( pMember->GetPlayerId() ) )

  00005	8b 6c 24 1c	 mov	 ebp, DWORD PTR _pMember$[esp+20]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 00	 mov	 edi, DWORD PTR [ebp]
  0000e	8b f1		 mov	 esi, ecx
  00010	8d 44 24 24	 lea	 eax, DWORD PTR $T268481[esp+28]
  00014	50		 push	 eax
  00015	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$268479[esp+36]
  00019	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  0001c	51		 push	 ecx
  0001d	8b cb		 mov	 ecx, ebx
  0001f	89 7c 24 2c	 mov	 DWORD PTR $T268481[esp+36], edi
  00023	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
  00028	8b 44 24 10	 mov	 eax, DWORD PTR _it$268479[esp+32]
  0002c	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  0002f	74 24		 je	 SHORT $L249246
  00031	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00034	85 c9		 test	 ecx, ecx
  00036	74 1d		 je	 SHORT $L249246

; 140  : 	{
; 141  : 		Error( "Pupil is already campus member - idCampus : %d, idPlayer : %d", GetCampusId(), pMember->GetPlayerId() );

  00038	8b 16		 mov	 edx, DWORD PTR [esi]
  0003a	57		 push	 edi
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DO@DGDKGKMG@Pupil?5is?5already?5campus?5member?5?9@
  00041	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5d		 pop	 ebp

; 142  : 		return FALSE;

  0004c	33 c0		 xor	 eax, eax
  0004e	5b		 pop	 ebx

; 151  : }

  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	c2 04 00	 ret	 4
$L249246:

; 143  : 	}
; 144  : 	if( GetPupilNum() >= MAX_PUPIL_NUM )

  00055	8b ce		 mov	 ecx, esi
  00057	e8 00 00 00 00	 call	 ?GetPupilNum@CCampus@@QAEHXZ ; CCampus::GetPupilNum
  0005c	83 f8 03	 cmp	 eax, 3
  0005f	7c 1c		 jl	 SHORT $L249248

; 145  : 	{
; 146  : 		Error( "Pupil is full - idCampus : %d", GetCampusId() );

  00061	8b 06		 mov	 eax, DWORD PTR [esi]
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@JNKIGAEJ@Pupil?5is?5full?5?9?5idCampus?5?3?5?$CFd?$AA@
  00069	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0006e	83 c4 08	 add	 esp, 8
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5d		 pop	 ebp

; 147  : 		return FALSE;

  00074	33 c0		 xor	 eax, eax
  00076	5b		 pop	 ebx

; 151  : }

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	c2 04 00	 ret	 4
$L249248:

; 148  : 	}
; 149  : 	m_mapCM.insert( MAP_CM::value_type( pMember->GetPlayerId(), pMember ) );

  0007d	8d 4c 24 10	 lea	 ecx, DWORD PTR $T268401[esp+32]
  00081	51		 push	 ecx
  00082	8d 54 24 1c	 lea	 edx, DWORD PTR $T268403[esp+36]
  00086	52		 push	 edx
  00087	8b cb		 mov	 ecx, ebx
  00089	89 7c 24 18	 mov	 DWORD PTR $T268401[esp+40], edi
  0008d	89 6c 24 1c	 mov	 DWORD PTR $T268401[esp+44], ebp
  00091	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampusMember@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::insert
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5d		 pop	 ebp

; 150  : 	return TRUE;

  00099	b8 01 00 00 00	 mov	 eax, 1
  0009e	5b		 pop	 ebx

; 151  : }

  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	c2 04 00	 ret	 4
?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z ENDP	; CCampus::AddMember
_TEXT	ENDS
PUBLIC	?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z	; CCampusMng::AddCampus
; Function compile flags: /Ogty
;	COMDAT ?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z
_TEXT	SEGMENT
_it$268588 = -16					; size = 4
$T268507 = -16						; size = 8
$T268508 = -8						; size = 8
$T268590 = 8						; size = 4
_pCampus$ = 8						; size = 4
?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z PROC NEAR	; CCampusMng::AddCampus, COMDAT
; _this$ = ecx

; 273  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp

; 274  : 	m_idCampus	= ( pCampus->GetCampusId() != 0? pCampus->GetCampusId(): m_idCampus + 1 );

  00005	8b 6c 24 1c	 mov	 ebp, DWORD PTR _pCampus$[esp+20]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 00	 mov	 edi, DWORD PTR [ebp]
  0000e	85 ff		 test	 edi, edi
  00010	8b f1		 mov	 esi, ecx
  00012	75 03		 jne	 SHORT $L268506
  00014	8b 3e		 mov	 edi, DWORD PTR [esi]
  00016	47		 inc	 edi
$L268506:

; 275  : 	if( GetCampus( m_idCampus ) )

  00017	8d 44 24 24	 lea	 eax, DWORD PTR $T268590[esp+28]
  0001b	50		 push	 eax
  0001c	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$268588[esp+36]
  00020	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00023	51		 push	 ecx
  00024	8b cb		 mov	 ecx, ebx
  00026	89 3e		 mov	 DWORD PTR [esi], edi
  00028	89 7c 24 2c	 mov	 DWORD PTR $T268590[esp+36], edi
  0002c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find
  00031	8b 44 24 10	 mov	 eax, DWORD PTR _it$268588[esp+32]
  00035	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00038	74 13		 je	 SHORT $L249504
  0003a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 0c		 je	 SHORT $L249504
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 276  : 		return 0;

  00044	33 c0		 xor	 eax, eax
  00046	5b		 pop	 ebx

; 280  : }

  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	c2 04 00	 ret	 4
$L249504:

; 277  : 	pCampus->SetCampusId( m_idCampus );
; 278  : 	m_mapCampus.insert( MAP_CAMPUS::value_type( m_idCampus, pCampus ) );

  0004d	8d 44 24 10	 lea	 eax, DWORD PTR $T268507[esp+32]
  00051	50		 push	 eax
  00052	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T268508[esp+36]
  00056	89 7d 00	 mov	 DWORD PTR [ebp], edi
  00059	8b 16		 mov	 edx, DWORD PTR [esi]
  0005b	51		 push	 ecx
  0005c	8b cb		 mov	 ecx, ebx
  0005e	89 54 24 18	 mov	 DWORD PTR $T268507[esp+40], edx
  00062	89 6c 24 1c	 mov	 DWORD PTR $T268507[esp+44], ebp
  00066	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::insert

; 279  : 	return m_idCampus;

  0006b	8b 06		 mov	 eax, DWORD PTR [esi]
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5d		 pop	 ebp
  00070	5b		 pop	 ebx

; 280  : }

  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	c2 04 00	 ret	 4
?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z ENDP		; CCampusMng::AddCampus
_TEXT	ENDS
PUBLIC	?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z	; CCampusMng::AddPlayerId2CampusId
; Function compile flags: /Ogty
;	COMDAT ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z
_TEXT	SEGMENT
$T268603 = -16						; size = 8
$T268604 = -8						; size = 8
_idPlayer$ = 8						; size = 4
_idCampus$ = 12						; size = 4
?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z PROC NEAR	; CCampusMng::AddPlayerId2CampusId, COMDAT
; _this$ = ecx

; 304  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H

; 305  : 	bool bResult = m_mapPid2Cid.insert( MAP_PID2CID::value_type( idPlayer, idCampus ) ).second;

  00003	8b 44 24 14	 mov	 eax, DWORD PTR _idPlayer$[esp+12]
  00007	8b 54 24 18	 mov	 edx, DWORD PTR _idCampus$[esp+12]
  0000b	89 04 24	 mov	 DWORD PTR $T268603[esp+16], eax
  0000e	8d 04 24	 lea	 eax, DWORD PTR $T268603[esp+16]
  00011	89 54 24 04	 mov	 DWORD PTR $T268603[esp+20], edx
  00015	50		 push	 eax
  00016	8d 54 24 0c	 lea	 edx, DWORD PTR $T268604[esp+20]
  0001a	52		 push	 edx
  0001b	83 c1 10	 add	 ecx, 16			; 00000010H
  0001e	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::insert

; 306  : 	return bResult;

  00023	8a 40 04	 mov	 al, BYTE PTR [eax+4]

; 307  : }

  00026	83 c4 10	 add	 esp, 16			; 00000010H
  00029	c2 08 00	 ret	 8
?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ENDP	; CCampusMng::AddPlayerId2CampusId
_TEXT	ENDS
PUBLIC	?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L268618
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L268619
$L268618:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L268619:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L249672
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L249672

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L249672:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::push_back
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T268864 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T268864[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T268892 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T268892[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T268963 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T268963[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T268991 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T268991[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T269062 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T269062[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::~map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T269189 = -4						; size = 4
??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::~map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T269189[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::~map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >
_TEXT	ENDS
PUBLIC	??1CCampus@@QAE@XZ				; CCampus::~CCampus
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T269382 DD	0ffffffffH
	DD	FLAT:$L269218
$T269380 DD	019930520H
	DD	01H
	DD	FLAT:$T269382
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ??1CCampus@@QAE@XZ
_TEXT	SEGMENT
$T269353 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCampus@@QAE@XZ PROC NEAR				; CCampus::~CCampus, COMDAT
; _this$ = ecx

; 47   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CCampus@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0

; 48   : 	Clear();

  00025	e8 00 00 00 00	 call	 ?Clear@CCampus@@QAEXXZ	; CCampus::Clear

; 49   : }

  0002a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	83 c6 08	 add	 esi, 8
  00032	50		 push	 eax
  00033	51		 push	 ecx
  00034	8d 44 24 0c	 lea	 eax, DWORD PTR $T269353[esp+28]
  00038	50		 push	 eax
  00039	8b ce		 mov	 ecx, esi
  0003b	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
  00048	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00051	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00055	83 c4 04	 add	 esp, 4
  00058	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0005f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00066	5e		 pop	 esi
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269218:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1CCampus@@QAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269380
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CCampus@@QAE@XZ ENDP					; CCampus::~CCampus
PUBLIC	?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ ; CCampus::GetPupilPlayerId
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T269873 DD	0ffffffffH
	DD	FLAT:$L269390
$T269866 DD	019930520H
	DD	01H
	DD	FLAT:$T269873
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
_TEXT	SEGMENT
_it$249197 = -36					; size = 4
$T269392 = -32						; size = 4
$T269389 = -32						; size = 4
_vecPupil$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ PROC NEAR ; CCampus::GetPupilPlayerId, COMDAT
; _this$ = ecx

; 90   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 18	 sub	 esp, 24			; 00000018H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR $T269392[esp+48], 0

; 91   : 	vector<u_long> vecPupil;

  00023	33 ff		 xor	 edi, edi
  00025	33 f6		 xor	 esi, esi
  00027	8b d9		 mov	 ebx, ecx
  00029	89 74 24 18	 mov	 DWORD PTR _vecPupil$[esp+52], esi
  0002d	89 7c 24 1c	 mov	 DWORD PTR _vecPupil$[esp+56], edi
  00031	89 7c 24 20	 mov	 DWORD PTR _vecPupil$[esp+60], edi

; 92   : 	for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++it )

  00035	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00038	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003a	3b c1		 cmp	 eax, ecx
  0003c	89 7c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], edi
  00040	89 44 24 0c	 mov	 DWORD PTR _it$249197[esp+48], eax
  00044	74 5d		 je	 SHORT $L249202
$L269515:

; 93   : 	{
; 94   : 		if( (it->second)->GetLevel() == CAMPUS_PUPIL )

  00046	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00049	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  0004d	75 42		 jne	 SHORT $L249201

; 95   : 			vecPupil.push_back( (it->second)->GetPlayerId() );

  0004f	85 f6		 test	 esi, esi
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	89 54 24 10	 mov	 DWORD PTR $T269389[esp+48], edx
  00057	74 1f		 je	 SHORT $L269844
  00059	8b 4c 24 20	 mov	 ecx, DWORD PTR _vecPupil$[esp+60]
  0005d	8b c7		 mov	 eax, edi
  0005f	2b c6		 sub	 eax, esi
  00061	2b ce		 sub	 ecx, esi
  00063	c1 f8 02	 sar	 eax, 2
  00066	c1 f9 02	 sar	 ecx, 2
  00069	3b c1		 cmp	 eax, ecx
  0006b	73 0b		 jae	 SHORT $L269844
  0006d	89 17		 mov	 DWORD PTR [edi], edx
  0006f	83 c7 04	 add	 edi, 4
  00072	89 7c 24 1c	 mov	 DWORD PTR _vecPupil$[esp+56], edi
  00076	eb 19		 jmp	 SHORT $L249201
$L269844:
  00078	8d 44 24 10	 lea	 eax, DWORD PTR $T269389[esp+48]
  0007c	50		 push	 eax
  0007d	6a 01		 push	 1
  0007f	57		 push	 edi
  00080	8d 4c 24 20	 lea	 ecx, DWORD PTR _vecPupil$[esp+60]
  00084	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
  00089	8b 7c 24 1c	 mov	 edi, DWORD PTR _vecPupil$[esp+56]
  0008d	8b 74 24 18	 mov	 esi, DWORD PTR _vecPupil$[esp+52]
$L249201:
  00091	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$249197[esp+48]
  00095	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  0009a	8b 44 24 0c	 mov	 eax, DWORD PTR _it$249197[esp+48]
  0009e	3b 43 0c	 cmp	 eax, DWORD PTR [ebx+12]
  000a1	75 a3		 jne	 SHORT $L269515
$L249202:

; 96   : 	}
; 97   : 	return vecPupil;

  000a3	8b 7c 24 34	 mov	 edi, DWORD PTR ___$ReturnUdt$[esp+44]
  000a7	8d 4c 24 14	 lea	 ecx, DWORD PTR _vecPupil$[esp+48]
  000ab	51		 push	 ecx
  000ac	8b cf		 mov	 ecx, edi
  000ae	e8 00 00 00 00	 call	 ??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
  000b3	85 f6		 test	 esi, esi
  000b5	74 09		 je	 SHORT $L269871
  000b7	56		 push	 esi
  000b8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000bd	83 c4 04	 add	 esp, 4
$L269871:

; 98   : }

  000c0	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  000c4	8b c7		 mov	 eax, edi
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d0	83 c4 24	 add	 esp, 36			; 00000024H
  000d3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269390:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _vecPupil$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T269866
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetPupilPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ ENDP ; CCampus::GetPupilPlayerId
PUBLIC	?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ ; CCampus::GetAllMemberPlayerId
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T270336 DD	0ffffffffH
	DD	FLAT:$L269881
$T270329 DD	019930520H
	DD	01H
	DD	FLAT:$T270336
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
_TEXT	SEGMENT
_it$249223 = -36					; size = 4
$T269883 = -32						; size = 4
$T269880 = -32						; size = 4
_vecMember$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ PROC NEAR ; CCampus::GetAllMemberPlayerId, COMDAT
; _this$ = ecx

; 112  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 18	 sub	 esp, 24			; 00000018H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR $T269883[esp+48], 0

; 113  : 	vector<u_long> vecMember;

  00023	33 ff		 xor	 edi, edi
  00025	33 f6		 xor	 esi, esi
  00027	8b d9		 mov	 ebx, ecx
  00029	89 74 24 18	 mov	 DWORD PTR _vecMember$[esp+52], esi
  0002d	89 7c 24 1c	 mov	 DWORD PTR _vecMember$[esp+56], edi
  00031	89 7c 24 20	 mov	 DWORD PTR _vecMember$[esp+60], edi

; 114  : 	for( MAP_CM::iterator it = m_mapCM.begin(); it != m_mapCM.end(); ++ it )

  00035	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00038	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003a	3b c1		 cmp	 eax, ecx
  0003c	89 7c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], edi
  00040	89 44 24 0c	 mov	 DWORD PTR _it$249223[esp+48], eax
  00044	74 57		 je	 SHORT $L249228
$L270006:

; 115  : 		vecMember.push_back( (it->second)->GetPlayerId() );

  00046	85 f6		 test	 esi, esi
  00048	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	89 54 24 10	 mov	 DWORD PTR $T269880[esp+48], edx
  00051	74 1f		 je	 SHORT $L270274
  00053	8b 4c 24 20	 mov	 ecx, DWORD PTR _vecMember$[esp+60]
  00057	8b c7		 mov	 eax, edi
  00059	2b c6		 sub	 eax, esi
  0005b	2b ce		 sub	 ecx, esi
  0005d	c1 f8 02	 sar	 eax, 2
  00060	c1 f9 02	 sar	 ecx, 2
  00063	3b c1		 cmp	 eax, ecx
  00065	73 0b		 jae	 SHORT $L270274
  00067	89 17		 mov	 DWORD PTR [edi], edx
  00069	83 c7 04	 add	 edi, 4
  0006c	89 7c 24 1c	 mov	 DWORD PTR _vecMember$[esp+56], edi
  00070	eb 19		 jmp	 SHORT $L249227
$L270274:
  00072	8d 4c 24 10	 lea	 ecx, DWORD PTR $T269880[esp+48]
  00076	51		 push	 ecx
  00077	6a 01		 push	 1
  00079	57		 push	 edi
  0007a	8d 4c 24 20	 lea	 ecx, DWORD PTR _vecMember$[esp+60]
  0007e	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@KV?$allocator@K@std@@@std@@IAEXViterator@12@IABK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Insert_n
  00083	8b 7c 24 1c	 mov	 edi, DWORD PTR _vecMember$[esp+56]
  00087	8b 74 24 18	 mov	 esi, DWORD PTR _vecMember$[esp+52]
$L249227:
  0008b	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$249223[esp+48]
  0008f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::const_iterator::_Inc
  00094	8b 44 24 0c	 mov	 eax, DWORD PTR _it$249223[esp+48]
  00098	3b 43 0c	 cmp	 eax, DWORD PTR [ebx+12]
  0009b	75 a9		 jne	 SHORT $L270006
$L249228:

; 116  : 	return vecMember;

  0009d	8b 7c 24 34	 mov	 edi, DWORD PTR ___$ReturnUdt$[esp+44]
  000a1	8d 54 24 14	 lea	 edx, DWORD PTR _vecMember$[esp+48]
  000a5	52		 push	 edx
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
  000ad	85 f6		 test	 esi, esi
  000af	74 09		 je	 SHORT $L270334
  000b1	56		 push	 esi
  000b2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b7	83 c4 04	 add	 esp, 4
$L270334:

; 117  : }

  000ba	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  000be	8b c7		 mov	 eax, edi
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ca	83 c4 24	 add	 esp, 36			; 00000024H
  000cd	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L269881:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _vecMember$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T270329
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ ENDP ; CCampus::GetAllMemberPlayerId
PUBLIC	?RemoveMember@CCampus@@QAEHK@Z			; CCampus::RemoveMember
PUBLIC	??_C@_0DA@BJIJDFJ@Member?5not?5found?5?9?5idCampus?5?3?5?$CFd@ ; `string'
;	COMDAT ??_C@_0DA@BJIJDFJ@Member?5not?5found?5?9?5idCampus?5?3?5?$CFd@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
CONST	SEGMENT
??_C@_0DA@BJIJDFJ@Member?5not?5found?5?9?5idCampus?5?3?5?$CFd@ DB 'Member'
	DB	' not found - idCampus : %d, idPlayer : %d', 00H ; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
CONST	ENDS
;	COMDAT ?RemoveMember@CCampus@@QAEHK@Z
_TEXT	SEGMENT
$T270419 = -8						; size = 4
_it$270417 = -4						; size = 4
_idPlayer$ = 8						; size = 4
?RemoveMember@CCampus@@QAEHK@Z PROC NEAR		; CCampus::RemoveMember, COMDAT
; _this$ = ecx

; 154  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx

; 155  : 	CCampusMember* pMember	= GetMember( idPlayer );

  00004	8b 5c 24 10	 mov	 ebx, DWORD PTR _idPlayer$[esp+8]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	8d 44 24 0c	 lea	 eax, DWORD PTR $T270419[esp+20]
  00010	50		 push	 eax
  00011	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$270417[esp+24]
  00015	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00018	51		 push	 ecx
  00019	8b cf		 mov	 ecx, edi
  0001b	89 5c 24 14	 mov	 DWORD PTR $T270419[esp+28], ebx
  0001f	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::find
  00024	8b 44 24 10	 mov	 eax, DWORD PTR _it$270417[esp+20]
  00028	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  0002b	74 2a		 je	 SHORT $L249258
  0002d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 156  : 	if( pMember )

  00030	85 c0		 test	 eax, eax
  00032	74 23		 je	 SHORT $L249258

; 157  : 	{
; 158  : 		SAFE_DELETE( pMember );

  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003a	83 c4 04	 add	 esp, 4

; 159  : 		m_mapCM.erase( idPlayer );

  0003d	8d 54 24 18	 lea	 edx, DWORD PTR _idPlayer$[esp+16]
  00041	52		 push	 edx
  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::erase
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi

; 160  : 		return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	5b		 pop	 ebx

; 164  : }

  00051	83 c4 08	 add	 esp, 8
  00054	c2 04 00	 ret	 4
$L249258:

; 161  : 	}
; 162  : 	Error( "Member not found - idCampus : %d, idPlayer : %d", GetCampusId(), idPlayer );

  00057	8b 06		 mov	 eax, DWORD PTR [esi]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DA@BJIJDFJ@Member?5not?5found?5?9?5idCampus?5?3?5?$CFd@
  00060	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi

; 163  : 	return FALSE;

  0006a	33 c0		 xor	 eax, eax
  0006c	5b		 pop	 ebx

; 164  : }

  0006d	83 c4 08	 add	 esp, 8
  00070	c2 04 00	 ret	 4
?RemoveMember@CCampus@@QAEHK@Z ENDP			; CCampus::RemoveMember
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::~map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T270536 = -4						; size = 4
??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::~map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T270536[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::~map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T270664 = -4						; size = 4
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T270664[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
_TEXT	ENDS
PUBLIC	??_GCCampus@@QAEPAXI@Z				; CCampus::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GCCampus@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampus@@QAEPAXI@Z PROC NEAR			; CCampus::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CCampus@@QAE@XZ	; CCampus::~CCampus
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L270693
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L270693:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCCampus@@QAEPAXI@Z ENDP				; CCampus::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?RemoveCampus@CCampusMng@@QAEHK@Z		; CCampusMng::RemoveCampus
; Function compile flags: /Ogty
;	COMDAT ?RemoveCampus@CCampusMng@@QAEHK@Z
_TEXT	SEGMENT
$T270774 = -8						; size = 4
_it$270772 = -4						; size = 4
_idCampus$ = 8						; size = 4
?RemoveCampus@CCampusMng@@QAEHK@Z PROC NEAR		; CCampusMng::RemoveCampus, COMDAT
; _this$ = ecx

; 283  : {

  00000	83 ec 08	 sub	 esp, 8

; 284  : 	CCampus* pCampus = GetCampus( idCampus );

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR _idCampus$[esp+4]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	8d 4c 24 08	 lea	 ecx, DWORD PTR $T270774[esp+16]
  0000f	51		 push	 ecx
  00010	8d 54 24 10	 lea	 edx, DWORD PTR _it$270772[esp+20]
  00014	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00017	52		 push	 edx
  00018	8b cf		 mov	 ecx, edi
  0001a	89 44 24 10	 mov	 DWORD PTR $T270774[esp+24], eax
  0001e	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::find
  00023	8b 44 24 0c	 mov	 eax, DWORD PTR _it$270772[esp+16]
  00027	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0002a	74 30		 je	 SHORT $L249512
  0002c	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 285  : 	if( pCampus )

  0002f	85 f6		 test	 esi, esi
  00031	74 29		 je	 SHORT $L249512

; 286  : 	{
; 287  : 		SAFE_DELETE( pCampus );

  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ??1CCampus@@QAE@XZ	; CCampus::~CCampus
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	83 c4 04	 add	 esp, 4

; 288  : 		m_mapCampus.erase( idCampus );

  00043	8d 44 24 14	 lea	 eax, DWORD PTR _idCampus$[esp+12]
  00047	50		 push	 eax
  00048	8b cf		 mov	 ecx, edi
  0004a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
  0004f	5f		 pop	 edi

; 289  : 		return TRUE;

  00050	b8 01 00 00 00	 mov	 eax, 1
  00055	5e		 pop	 esi

; 292  : }

  00056	83 c4 08	 add	 esp, 8
  00059	c2 04 00	 ret	 4
$L249512:
  0005c	5f		 pop	 edi

; 290  : 	}
; 291  : 	return FALSE;

  0005d	33 c0		 xor	 eax, eax
  0005f	5e		 pop	 esi

; 292  : }

  00060	83 c4 08	 add	 esp, 8
  00063	c2 04 00	 ret	 4
?RemoveCampus@CCampusMng@@QAEHK@Z ENDP			; CCampusMng::RemoveCampus
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >::map<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >::map<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
_TEXT	ENDS
PUBLIC	??0CCampus@@QAE@XZ				; CCampus::CCampus
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
;	COMDAT ??0CCampus@@QAE@XZ
_TEXT	SEGMENT
??0CCampus@@QAE@XZ PROC NEAR				; CCampus::CCampus, COMDAT
; _this$ = ecx

; 42   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00007	8b ce		 mov	 ecx, esi
  00009	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0000f	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00016	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
  0001b	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0001e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00022	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00025	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00028	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002b	89 00		 mov	 DWORD PTR [eax], eax
  0002d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00030	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 43   : 
; 44   : }

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi
  00036	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
??0CCampus@@QAE@XZ ENDP					; CCampus::CCampus
_TEXT	ENDS
PUBLIC	??0CCampusMng@@QAE@XZ				; CCampusMng::CCampusMng
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T271938 DD	0ffffffffH
	DD	FLAT:$L271505
$T271936 DD	019930520H
	DD	01H
	DD	FLAT:$T271938
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ??0CCampusMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CCampusMng@@QAE@XZ PROC NEAR				; CCampusMng::CCampusMng, COMDAT
; _this$ = ecx

; 218  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CCampusMng@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx
  0001a	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0001d	8b ce		 mov	 ecx, esi
  0001f	89 7c 24 08	 mov	 DWORD PTR _this$[esp+24], edi
  00023	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00029	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Buynode
  0002e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00031	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	89 00		 mov	 DWORD PTR [eax], eax
  00040	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00043	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00046	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0004d	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  00050	8b ce		 mov	 ecx, esi
  00052	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0005a	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Buynode

; 219  : 
; 220  : }

  0005f	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00063	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00066	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0006a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00070	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00073	89 00		 mov	 DWORD PTR [eax], eax
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0007b	8b c7		 mov	 eax, edi
  0007d	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008d	83 c4 10	 add	 esp, 16			; 00000010H
  00090	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L271505:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0CCampusMng@@QAE@XZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T271936
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CCampusMng@@QAE@XZ ENDP				; CCampusMng::CCampusMng
PUBLIC	?Clear@CCampusMng@@QAEXXZ			; CCampusMng::Clear
; Function compile flags: /Ogty
;	COMDAT ?Clear@CCampusMng@@QAEXXZ
_TEXT	SEGMENT
_it$249386 = -4						; size = 4
?Clear@CCampusMng@@QAEXXZ PROC NEAR			; CCampusMng::Clear, COMDAT
; _this$ = ecx

; 228  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp
  00003	8b d9		 mov	 ebx, ecx

; 229  : 	for( MAP_CAMPUS::iterator it = m_mapCampus.begin(); it != m_mapCampus.end(); ++it )

  00005	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00008	56		 push	 esi
  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	3b f0		 cmp	 esi, eax
  0000d	57		 push	 edi
  0000e	89 74 24 10	 mov	 DWORD PTR _it$249386[esp+20], esi
  00012	74 30		 je	 SHORT $L249391
$L271985:

; 230  : 		SAFE_DELETE( it->second );

  00014	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00017	85 ff		 test	 edi, edi
  00019	74 17		 je	 SHORT $L249390
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ??1CCampus@@QAE@XZ	; CCampus::~CCampus
  00022	57		 push	 edi
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	83 c4 04	 add	 esp, 4
  0002b	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$L249390:
  00032	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$249386[esp+20]
  00036	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
  0003b	8b 74 24 10	 mov	 esi, DWORD PTR _it$249386[esp+20]
  0003f	3b 73 08	 cmp	 esi, DWORD PTR [ebx+8]
  00042	75 d0		 jne	 SHORT $L271985
$L249391:

; 231  : 	
; 232  : 	m_mapCampus.clear();

  00044	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00047	8b 68 04	 mov	 ebp, DWORD PTR [eax+4]
  0004a	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  0004d	84 c0		 test	 al, al
  0004f	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  00052	8b fd		 mov	 edi, ebp
  00054	75 1f		 jne	 SHORT $L272158
$L272156:
  00056	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00059	51		 push	 ecx
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::_Erase
  00061	8b 3f		 mov	 edi, DWORD PTR [edi]
  00063	55		 push	 ebp
  00064	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00069	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0006c	83 c4 04	 add	 esp, 4
  0006f	84 c0		 test	 al, al
  00071	8b ef		 mov	 ebp, edi
  00073	74 e1		 je	 SHORT $L272156
$L272158:
  00075	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00078	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0007b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0007e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00085	89 00		 mov	 DWORD PTR [eax], eax
  00087	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0008a	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 233  : 	m_mapPid2Cid.clear();

  0008d	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00090	8b 6a 04	 mov	 ebp, DWORD PTR [edx+4]
  00093	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00096	84 c0		 test	 al, al
  00098	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
  0009b	8b f5		 mov	 esi, ebp
  0009d	75 20		 jne	 SHORT $L272253
  0009f	90		 npad	 1
$L272251:
  000a0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a3	50		 push	 eax
  000a4	8b cf		 mov	 ecx, edi
  000a6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
  000ab	8b 36		 mov	 esi, DWORD PTR [esi]
  000ad	55		 push	 ebp
  000ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b3	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000b6	83 c4 04	 add	 esp, 4
  000b9	84 c0		 test	 al, al
  000bb	8b ee		 mov	 ebp, esi
  000bd	74 e1		 je	 SHORT $L272251
$L272253:
  000bf	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c2	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c5	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c8	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  000cf	89 00		 mov	 DWORD PTR [eax], eax
  000d1	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  000d4	89 7f 08	 mov	 DWORD PTR [edi+8], edi
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5d		 pop	 ebp
  000da	5b		 pop	 ebx

; 234  : }

  000db	59		 pop	 ecx
  000dc	c3		 ret	 0
?Clear@CCampusMng@@QAEXXZ ENDP				; CCampusMng::Clear
_TEXT	ENDS
PUBLIC	?Serialize@CCampusMng@@QAEXAAVCAr@@@Z		; CCampusMng::Serialize
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T273012 DD	0ffffffffH
	DD	FLAT:$L272293
$T272998 DD	019930520H
	DD	01H
	DD	FLAT:$T273012
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ?Serialize@CCampusMng@@QAEXAAVCAr@@@Z
_TEXT	SEGMENT
$T272990 = -44						; size = 8
_this$ = -44						; size = 4
tv616 = -36						; size = 4
tv194 = -36						; size = 4
$T272304 = -36						; size = 4
_it$249426 = -36					; size = 4
$T272292 = -32						; size = 8
$T272287 = -32						; size = 4
$T272989 = -24						; size = 8
$T272290 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_ar$ = 8						; size = 4
?Serialize@CCampusMng@@QAEXAAVCAr@@@Z PROC NEAR		; CCampusMng::Serialize, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?Serialize@CCampusMng@@QAEXAAVCAr@@@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	83 ec 20	 sub	 esp, 32			; 00000020H
  0001e	53		 push	 ebx
  0001f	56		 push	 esi

; 238  : 	int	i = 0;
; 239  : 	
; 240  : 	if( ar.IsStoring() )

  00020	8b 75 08	 mov	 esi, DWORD PTR _ar$[ebp]
  00023	33 c0		 xor	 eax, eax
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	57		 push	 edi
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7c 24 0c	 mov	 DWORD PTR _this$[esp+56], edi
  0002e	f7 d0		 not	 eax
  00030	a8 01		 test	 al, 1
  00032	0f 84 0f 01 00
	00		 je	 $L249425

; 241  : 	{
; 242  : 		ar << m_idCampus << m_mapCampus.size();

  00038	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0003a	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  0003d	89 4c 24 14	 mov	 DWORD PTR $T272304[esp+56], ecx
  00041	6a 04		 push	 4
  00043	8b ce		 mov	 ecx, esi
  00045	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0004a	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0004d	8b 44 24 14	 mov	 eax, DWORD PTR $T272304[esp+56]
  00051	89 02		 mov	 DWORD PTR [edx], eax
  00053	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00057	6a 04		 push	 4
  00059	8b ce		 mov	 ecx, esi
  0005b	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00060	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00063	89 19		 mov	 DWORD PTR [ecx], ebx
  00065	83 46 08 04	 add	 DWORD PTR [esi+8], 4

; 243  : 		for( MAP_CAMPUS::iterator it = m_mapCampus.begin(); it != m_mapCampus.end(); ++it )

  00069	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0006c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006e	3b c1		 cmp	 eax, ecx
  00070	89 44 24 14	 mov	 DWORD PTR _it$249426[esp+56], eax
  00074	74 1b		 je	 SHORT $L249431
$L272346:

; 244  : 			( it->second )->Serialize( ar );

  00076	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 ?Serialize@CCampus@@QAEXAAVCAr@@@Z ; CCampus::Serialize
  0007f	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$249426[esp+56]
  00083	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::const_iterator::_Inc
  00088	8b 44 24 14	 mov	 eax, DWORD PTR _it$249426[esp+56]
  0008c	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0008f	75 e5		 jne	 SHORT $L272346
$L249431:

; 245  : 
; 246  : 		ar << m_mapPid2Cid.size();

  00091	8b 5f 18	 mov	 ebx, DWORD PTR [edi+24]
  00094	6a 04		 push	 4
  00096	8b ce		 mov	 ecx, esi
  00098	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0009d	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000a0	89 1a		 mov	 DWORD PTR [edx], ebx
  000a2	83 46 08 04	 add	 DWORD PTR [esi+8], 4

; 247  : 		for( MAP_PID2CID::iterator it2 = m_mapPid2Cid.begin(); it2 != m_mapPid2Cid.end(); ++it2 )

  000a6	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  000a9	8b 38		 mov	 edi, DWORD PTR [eax]
  000ab	3b f8		 cmp	 edi, eax
  000ad	0f 84 df 01 00
	00		 je	 $L249497
$L272588:

; 248  : 			ar << it2->first << it2->second;

  000b3	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  000b6	6a 04		 push	 4
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000bf	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000c2	89 18		 mov	 DWORD PTR [eax], ebx
  000c4	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  000c8	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  000cb	6a 04		 push	 4
  000cd	8b ce		 mov	 ecx, esi
  000cf	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000d4	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000d7	89 19		 mov	 DWORD PTR [ecx], ebx
  000d9	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  000dd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000e0	84 c0		 test	 al, al
  000e2	75 46		 jne	 SHORT $L272583
  000e4	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000e7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000ea	84 c9		 test	 cl, cl
  000ec	75 1f		 jne	 SHORT $L273002
  000ee	8b f8		 mov	 edi, eax
  000f0	8b 07		 mov	 eax, DWORD PTR [edi]
  000f2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000f5	84 c9		 test	 cl, cl
  000f7	75 31		 jne	 SHORT $L272583
  000f9	8d a4 24 00 00
	00 00		 npad	 7

; 247  : 		for( MAP_PID2CID::iterator it2 = m_mapPid2Cid.begin(); it2 != m_mapPid2Cid.end(); ++it2 )

$L272571:
  00100	8b f8		 mov	 edi, eax
  00102	8b 07		 mov	 eax, DWORD PTR [edi]
  00104	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00107	84 c9		 test	 cl, cl
  00109	74 f5		 je	 SHORT $L272571
  0010b	eb 1d		 jmp	 SHORT $L272583
$L273002:
  0010d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00110	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00113	84 c9		 test	 cl, cl
  00115	75 11		 jne	 SHORT $L272586
$L272585:
  00117	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0011a	75 0c		 jne	 SHORT $L272586
  0011c	8b f8		 mov	 edi, eax
  0011e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00121	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00124	84 c9		 test	 cl, cl
  00126	74 ef		 je	 SHORT $L272585
$L272586:
  00128	8b f8		 mov	 edi, eax
$L272583:
  0012a	8b 54 24 0c	 mov	 edx, DWORD PTR _this$[esp+56]
  0012e	3b 7a 14	 cmp	 edi, DWORD PTR [edx+20]
  00131	75 80		 jne	 SHORT $L272588

; 268  : 		}
; 269  : 	}
; 270  : }

  00133	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$EHRec$[esp+56]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 04 00	 ret	 4
$L249425:

; 249  : 
; 250  : 	}
; 251  : 	else
; 252  : 	{
; 253  : 		Clear();

  00147	8b cf		 mov	 ecx, edi
  00149	e8 00 00 00 00	 call	 ?Clear@CCampusMng@@QAEXXZ ; CCampusMng::Clear

; 254  : 		size_t nSize;
; 255  : 		ar >> m_idCampus >> nSize;

  0014e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00151	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00154	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00157	3b ca		 cmp	 ecx, edx
  00159	77 0c		 ja	 SHORT $L272674
  0015b	8b 10		 mov	 edx, DWORD PTR [eax]
  0015d	89 17		 mov	 DWORD PTR [edi], edx
  0015f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00162	83 c0 04	 add	 eax, 4
  00165	eb 09		 jmp	 SHORT $L273011
$L272674:
  00167	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0016d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
$L273011:
  00170	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00173	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00176	3b ca		 cmp	 ecx, edx
  00178	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0017b	77 07		 ja	 SHORT $L272685
  0017d	8b 00		 mov	 eax, DWORD PTR [eax]
  0017f	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00182	eb 05		 jmp	 SHORT $L272686
$L272685:
  00184	33 c0		 xor	 eax, eax
  00186	89 56 08	 mov	 DWORD PTR [esi+8], edx
$L272686:

; 256  : 		for( i = 0; i < (int)( nSize ); ++i )

  00189	85 c0		 test	 eax, eax
  0018b	0f 8e 8e 00 00
	00		 jle	 $L249463
  00191	89 44 24 14	 mov	 DWORD PTR tv194[esp+56], eax
$L249461:

; 257  : 		{
; 258  : 			CCampus* pCampus = new CCampus;

  00195	6a 18		 push	 24			; 00000018H
  00197	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0019c	8b d8		 mov	 ebx, eax
  0019e	83 c4 04	 add	 esp, 4
  001a1	89 5c 24 18	 mov	 DWORD PTR $T272287[esp+56], ebx
  001a5	33 c0		 xor	 eax, eax
  001a7	3b d8		 cmp	 ebx, eax
  001a9	89 44 24 34	 mov	 DWORD PTR __$EHRec$[esp+64], eax
  001ad	74 30		 je	 SHORT $L272288
  001af	8d 7b 08	 lea	 edi, DWORD PTR [ebx+8]
  001b2	8b cf		 mov	 ecx, edi
  001b4	89 03		 mov	 DWORD PTR [ebx], eax
  001b6	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  001b9	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::_Buynode
  001be	89 47 04	 mov	 DWORD PTR [edi+4], eax
  001c1	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  001c5	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001c8	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001cb	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001ce	89 00		 mov	 DWORD PTR [eax], eax
  001d0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001d3	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001d6	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  001dd	eb 02		 jmp	 SHORT $L272289
$L272288:
  001df	33 db		 xor	 ebx, ebx
$L272289:

; 259  : 			pCampus->Serialize( ar );

  001e1	56		 push	 esi
  001e2	8b cb		 mov	 ecx, ebx
  001e4	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  001ec	e8 00 00 00 00	 call	 ?Serialize@CCampus@@QAEXAAVCAr@@@Z ; CCampus::Serialize

; 260  : 			m_mapCampus.insert( MAP_CAMPUS::value_type( pCampus->GetCampusId(), pCampus ) );

  001f1	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  001f3	89 4c 24 20	 mov	 DWORD PTR $T272290[esp+56], ecx
  001f7	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+56]
  001fb	8d 54 24 20	 lea	 edx, DWORD PTR $T272290[esp+56]
  001ff	52		 push	 edx
  00200	8d 44 24 1c	 lea	 eax, DWORD PTR $T272292[esp+60]
  00204	50		 push	 eax
  00205	83 c1 04	 add	 ecx, 4
  00208	89 5c 24 2c	 mov	 DWORD PTR $T272290[esp+68], ebx
  0020c	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCCampus@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::insert
  00211	ff 4c 24 14	 dec	 DWORD PTR tv194[esp+56]
  00215	0f 85 7a ff ff
	ff		 jne	 $L249461

; 256  : 		for( i = 0; i < (int)( nSize ); ++i )

  0021b	8b 7c 24 0c	 mov	 edi, DWORD PTR _this$[esp+56]
$L249463:

; 261  : 		}
; 262  : 		ar >> nSize;

  0021f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00222	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00225	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00228	3b ca		 cmp	 ecx, edx
  0022a	77 07		 ja	 SHORT $L272969
  0022c	8b 00		 mov	 eax, DWORD PTR [eax]
  0022e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00231	eb 05		 jmp	 SHORT $L272970
$L272969:
  00233	33 c0		 xor	 eax, eax
  00235	89 56 08	 mov	 DWORD PTR [esi+8], edx
$L272970:

; 263  : 		for( i = 0; i < (int)( nSize ); ++i )

  00238	85 c0		 test	 eax, eax
  0023a	7e 56		 jle	 SHORT $L249497
  0023c	83 c7 10	 add	 edi, 16			; 00000010H

; 267  : 			AddPlayerId2CampusId( idPlayer, idCampus );

  0023f	89 7c 24 14	 mov	 DWORD PTR tv616[esp+56], edi
  00243	8b f8		 mov	 edi, eax
$L249495:
  00245	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00248	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0024b	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0024e	3b d0		 cmp	 edx, eax
  00250	77 07		 ja	 SHORT $L272975
  00252	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00254	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00257	eb 05		 jmp	 SHORT $L272976

; 264  : 		{
; 265  : 			u_long idPlayer, idCampus;
; 266  : 			ar >> idPlayer >> idCampus;

$L272975:
  00259	33 db		 xor	 ebx, ebx
  0025b	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L272976:
  0025e	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00261	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  00264	3b d0		 cmp	 edx, eax
  00266	77 07		 ja	 SHORT $L272980
  00268	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0026a	89 56 08	 mov	 DWORD PTR [esi+8], edx
  0026d	eb 05		 jmp	 SHORT $L272981
$L272980:
  0026f	33 c9		 xor	 ecx, ecx
  00271	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L272981:

; 267  : 			AddPlayerId2CampusId( idPlayer, idCampus );

  00274	89 4c 24 24	 mov	 DWORD PTR $T272989[esp+60], ecx
  00278	8d 4c 24 20	 lea	 ecx, DWORD PTR $T272989[esp+56]
  0027c	51		 push	 ecx
  0027d	8b 4c 24 18	 mov	 ecx, DWORD PTR tv616[esp+60]
  00281	8d 54 24 10	 lea	 edx, DWORD PTR $T272990[esp+60]
  00285	52		 push	 edx
  00286	89 5c 24 28	 mov	 DWORD PTR $T272989[esp+64], ebx
  0028a	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKK@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::insert
  0028f	4f		 dec	 edi
  00290	75 b3		 jne	 SHORT $L249495
$L249497:

; 268  : 		}
; 269  : 	}
; 270  : }

  00292	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$EHRec$[esp+56]
  00296	5f		 pop	 edi
  00297	5e		 pop	 esi
  00298	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0029f	5b		 pop	 ebx
  002a0	8b e5		 mov	 esp, ebp
  002a2	5d		 pop	 ebp
  002a3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L272293:
  00000	8b 45 e0	 mov	 eax, DWORD PTR $T272287[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?Serialize@CCampusMng@@QAEXAAVCAr@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T272998
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Serialize@CCampusMng@@QAEXAAVCAr@@@Z ENDP		; CCampusMng::Serialize
PUBLIC	??1CCampusMng@@QAE@XZ				; CCampusMng::~CCampusMng
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T273342 DD	0ffffffffH
	DD	FLAT:$L273017
	DD	00H
	DD	FLAT:$L273018
$T273340 DD	019930520H
	DD	02H
	DD	FLAT:$T273342
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.cpp
xdata$x	ENDS
;	COMDAT ??1CCampusMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T273313 = -16						; size = 4
$T273153 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCampusMng@@QAE@XZ PROC NEAR				; CCampusMng::~CCampusMng, COMDAT
; _this$ = ecx

; 223  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CCampusMng@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b f9		 mov	 edi, ecx
  0001d	89 7c 24 0c	 mov	 DWORD PTR _this$[esp+32], edi
  00021	c7 44 24 1c 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 1

; 224  : 	Clear();

  00029	e8 00 00 00 00	 call	 ?Clear@CCampusMng@@QAEXXZ ; CCampusMng::Clear

; 225  : }

  0002e	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  00036	50		 push	 eax
  00037	51		 push	 ecx
  00038	8d 44 24 18	 lea	 eax, DWORD PTR $T273153[esp+40]
  0003c	33 db		 xor	 ebx, ebx
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	88 5c 24 28	 mov	 BYTE PTR __$EHRec$[esp+52], bl
  00045	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  0004a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00053	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00056	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00059	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	83 c4 04	 add	 esp, 4
  00061	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00064	50		 push	 eax
  00065	51		 push	 ecx
  00066	8d 4c 24 18	 lea	 ecx, DWORD PTR $T273313[esp+40]
  0006a	51		 push	 ecx
  0006b	8b ce		 mov	 ecx, esi
  0006d	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00075	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::erase
  0007a	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00083	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00087	83 c4 04	 add	 esp, 4
  0008a	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0008d	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009a	83 c4 14	 add	 esp, 20			; 00000014H
  0009d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L273017:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@@std@@QAE@XZ
$L273018:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
__ehhandler$??1CCampusMng@@QAE@XZ:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T273340
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CCampusMng@@QAE@XZ ENDP				; CCampusMng::~CCampusMng
END
