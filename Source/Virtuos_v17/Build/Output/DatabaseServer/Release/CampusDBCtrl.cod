; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	.\CampusDBCtrl.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BC@MOGJFHKK@tr1?3?3bad_weak_ptr?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@IOHNFIBA@SetLOD?5?3?5lv?$DN?$CFd?0?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02PCIJFNDE@?$AN?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01DNKMNLPK@?$HM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DB@BEDINLHB@RANKING?4RANKING_DBF?4dbo?4RANKING_@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CN@HNMEKJGP@CDbManager?3?3UpdateGuildRanking?$LP?$KB@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LJMBJH@m_dwLogo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09NKFNPOPN@m_szGuild?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08HDDJDJAG@m_szName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06LJIKPPDH@m_nWin?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07IGCLHJHO@m_nLose?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BBOGLCAO@m_nSurrender?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EKKIFFNL@m_AvgLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@EMHJODPK@m_nWinPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@CJGBCKAI@MAKE_RANKING_STR?5?8?$CFd?8?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@IPKIBOKB@CDbManager?3?3RankingDBUpdate?5?$CI?$CFs?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CP@EFPIHLLF@Can?8t?5connect?5db?3?5CCampusDBCtrl?4@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@EPNBNDFJ@usp_Campus_Load?5?$EAserverindex?5?$DN?5?8@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08FHGJFCBK@idCampus?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@CLANIGHK@usp_CampusMember_Load?5?$EAserverind@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@FONFFEJF@m_idPlayer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09FLNBFAEP@nMemberLv?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@GGIDIIN@LoadAllCampus?$CI?$CJ?3?5Player?8s?5campus@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@IEAKIJNC@AddPlayerId2CampusId?$CI?$CJ?5fail?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@EFJAFBJB@AddMember?5failed?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@DNIPPDFD@new?5campus?5failed?$CB?5campus?5exist?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@BMKKJLKC@RemoveCampusMember?5fail?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DI@HDOGOKEB@usp_Campus_Insert?5?$EAidCampus?5?$DN?5?$CFd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DI@GMELEMJP@usp_Campus_Delete?5?$EAidCampus?5?$DN?5?$CFd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0GF@JMBGFEDG@usp_CampusMember_Insert?5?$EAidCampu@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@OBOHOBGA@usp_CampusMember_Delete?5?5?$EAserver@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02MIPIAIAA@U5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@HAGDFNOH@m_nCampusPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02ODNFFLMD@U6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0HI@KDLLPGLE@usp_CampusLog_Insert?5?5?$EAm_idMaste@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0HN@EDLOELGN@usp_CampusPointLog_Insert?5?5?$EAm_id@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DB@KNEAGAGD@CCampusHelper?5?9?5m_CampusDBCtrl?4C@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetQueryObject@CDbController@@QAEPAVCQuery@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTimer@CDbController@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPlayerId@CCampusMember@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPlayerId@CCampusMember@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLevel@CCampusMember@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLevel@CCampusMember@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampusId@CCampus@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCampusId@CCampus@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMaster@CCampus@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMaster@CCampus@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsMaster@CCampus@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMemberSize@CCampus@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CCampusMng@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCampus@CCampusHelper@@QAEKPAVCCampus@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveCampus@CCampusHelper@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CCampusHelper@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampus@CCampusHelper@@QAEPAVCCampus@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CCampusHelper@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddPlayerId2CampusId@CCampusHelper@@QAE_NKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemovePlayerId2CampusId@CCampusHelper@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCampusIdByPlayerId@CCampusHelper@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@bad_weak_ptr@boost@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sp_counted_base@detail@boost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@sp_counted_base@detail@boost@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?add_ref_lock@sp_counted_base@detail@boost@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?release@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?weak_add_ref@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?weak_release@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_count@sp_counted_base@detail@boost@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gsp_counted_base@detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_count@shared_count@detail@boost@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0bad_weak_ptr@boost@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_weak_ptr@boost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_weak_ptr@boost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCooltime@CLordSkillComponent@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTick@CLordSkillComponent@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CLordSkillComponentExecutable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Use@CLordSkillComponentExecutable@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Execute@CLordSkillComponentExecutable@@UAEXKKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCLordSkillComponentExecutable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDeposit@CCandidate@@QBE_JXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetVote@CCandidate@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCreate@CCandidate@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_GUILDQUEST@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CCampusDBCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampusDBCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCampusDBCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCQuery@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateLogQuery@CCampusDBCtrl@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadAllCampus@CCampusDBCtrl@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampusMember@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampus@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendAllCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CCampusHelper@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCampusHelper@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCampusMng@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInstance@CCampusHelper@@SAPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?GetMaxPupilNum@CCampusHelper@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Replace@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@PAVsp_counted_base@detail@boost@@@std@@QBE_NABQAVsp_counted_base@detail@boost@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCLordSkillComponentExecutable@@V?$allocator@PAVCLordSkillComponentExecutable@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$shared_ptr@VCCandidate@@@boost@@V?$allocator@V?$shared_ptr@VCCandidate@@@boost@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$shared_ptr@VCCandidate@@@boost@@QBEPAVCCandidate@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCLEComponent@@V?$allocator@PAVCLEComponent@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@U?$pair@M_J@std@@V?$allocator@U?$pair@M_J@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAU_PlayerData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAU_PlayerData@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCGuildMember@@@@QAEPAVCGuildMember@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCGuildMember@@@@QAEHPAVCGuildMember@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCGuild@@@@QAEPAVCGuild@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCGuild@@@@QAEHPAVCGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuild@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuild@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@D@ATL@@SAPADPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SafeStringLen@?$ChTraitsCRT@D@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@MV?$allocator@M@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@MV?$allocator@M@std@@@std@@IAE@V?$allocator@M@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@M@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCGuildMember@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCGuild@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@M@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@M@std@@QAEXPAMI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@M@std@@QAEPAMI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@M@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPTrans@@AEXAAVCAr@@KKKPAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPTrans@@AEXAAVCAr@@KKKPAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$throw_exception@Vbad_weak_ptr@boost@@@boost@@YAXABVbad_weak_ptr@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@MV?$allocator@M@std@@@std@@YAXPAM0AAV?$allocator@M@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@M@std@@YAPAMIPAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@HV?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0bad_weak_ptr@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@MV?$allocator@M@std@@@std@@YAXPAM0AAV?$allocator@M@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@HV?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAM0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA2?AVbad_weak_ptr@boost@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_weak_ptr@boost@@@8??0bad_weak_ptr@boost@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_weak_ptr@boost@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_weak_ptr@boost@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXViterator@12@ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAXV?$allocator@PAX@std@@@std@@IAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@QAE@PAU012@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09PKKCPLIP@bad?5alloc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@D@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CCampusDBCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Leave@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Enter@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMclCritSec@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMclCritSec@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCMclCritSec@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMclCritSec@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5@YAAAVCAr@@AAV0@AAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?time_null@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6@YAAAVCAr@@AAV0@UD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsStoring@CAr@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTime@CTime@ATL@@QBE_JXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@ATL@@QAE@JHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTickCount@CTime@ATL@@SG?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemProp@CProject@@QAEPAUItemProp@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@?$CFixedArray@UItemProp@@@@QAEPAUItemProp@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CLordSkillComponentExecutable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_weak_ptr@boost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7sp_counted_base@detail@boost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetQueryObject@CDbController@@QAEPAVCQuery@@XZ	; CDbController::GetQueryObject
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
;	COMDAT ?GetQueryObject@CDbController@@QAEPAVCQuery@@XZ
_TEXT	SEGMENT
?GetQueryObject@CDbController@@QAEPAVCQuery@@XZ PROC NEAR ; CDbController::GetQueryObject, COMDAT
; _this$ = ecx

; 20   : 	CQuery*	GetQueryObject( void )	{	return m_pQuery;	}

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetQueryObject@CDbController@@QAEPAVCQuery@@XZ ENDP	; CDbController::GetQueryObject
_TEXT	ENDS
PUBLIC	?GetPlayerId@CCampusMember@@QAEKXZ		; CCampusMember::GetPlayerId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
;	COMDAT ?GetPlayerId@CCampusMember@@QAEKXZ
_TEXT	SEGMENT
?GetPlayerId@CCampusMember@@QAEKXZ PROC NEAR		; CCampusMember::GetPlayerId, COMDAT
; _this$ = ecx

; 29   : 	u_long	GetPlayerId()	{	return m_idPlayer;	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetPlayerId@CCampusMember@@QAEKXZ ENDP			; CCampusMember::GetPlayerId
_TEXT	ENDS
PUBLIC	?SetPlayerId@CCampusMember@@QAEXK@Z		; CCampusMember::SetPlayerId
; Function compile flags: /Ogty
;	COMDAT ?SetPlayerId@CCampusMember@@QAEXK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?SetPlayerId@CCampusMember@@QAEXK@Z PROC NEAR		; CCampusMember::SetPlayerId, COMDAT
; _this$ = ecx

; 30   : 	void	SetPlayerId( u_long idPlayer )	{	m_idPlayer = idPlayer;	}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _idPlayer$[esp-4]
  00004	89 01		 mov	 DWORD PTR [ecx], eax
  00006	c2 04 00	 ret	 4
?SetPlayerId@CCampusMember@@QAEXK@Z ENDP		; CCampusMember::SetPlayerId
_TEXT	ENDS
PUBLIC	?GetLevel@CCampusMember@@QAEHXZ			; CCampusMember::GetLevel
; Function compile flags: /Ogty
;	COMDAT ?GetLevel@CCampusMember@@QAEHXZ
_TEXT	SEGMENT
?GetLevel@CCampusMember@@QAEHXZ PROC NEAR		; CCampusMember::GetLevel, COMDAT
; _this$ = ecx

; 32   : 	int		GetLevel()	{	return m_nMemberLv;	}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetLevel@CCampusMember@@QAEHXZ ENDP			; CCampusMember::GetLevel
_TEXT	ENDS
PUBLIC	?SetLevel@CCampusMember@@QAEXH@Z		; CCampusMember::SetLevel
; Function compile flags: /Ogty
;	COMDAT ?SetLevel@CCampusMember@@QAEXH@Z
_TEXT	SEGMENT
_nLevel$ = 8						; size = 4
?SetLevel@CCampusMember@@QAEXH@Z PROC NEAR		; CCampusMember::SetLevel, COMDAT
; _this$ = ecx

; 33   : 	void	SetLevel( int nLevel )	{	m_nMemberLv = nLevel;	}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nLevel$[esp-4]
  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00007	c2 04 00	 ret	 4
?SetLevel@CCampusMember@@QAEXH@Z ENDP			; CCampusMember::SetLevel
_TEXT	ENDS
PUBLIC	?GetCampusId@CCampus@@QAEKXZ			; CCampus::GetCampusId
; Function compile flags: /Ogty
;	COMDAT ?GetCampusId@CCampus@@QAEKXZ
_TEXT	SEGMENT
?GetCampusId@CCampus@@QAEKXZ PROC NEAR			; CCampus::GetCampusId, COMDAT
; _this$ = ecx

; 50   : 	u_long	GetCampusId()	{	return m_idCampus;	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetCampusId@CCampus@@QAEKXZ ENDP			; CCampus::GetCampusId
_TEXT	ENDS
PUBLIC	?SetCampusId@CCampus@@QAEXK@Z			; CCampus::SetCampusId
; Function compile flags: /Ogty
;	COMDAT ?SetCampusId@CCampus@@QAEXK@Z
_TEXT	SEGMENT
_idCampus$ = 8						; size = 4
?SetCampusId@CCampus@@QAEXK@Z PROC NEAR			; CCampus::SetCampusId, COMDAT
; _this$ = ecx

; 51   : 	void	SetCampusId( u_long idCampus )	{	m_idCampus = idCampus;	}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _idCampus$[esp-4]
  00004	89 01		 mov	 DWORD PTR [ecx], eax
  00006	c2 04 00	 ret	 4
?SetCampusId@CCampus@@QAEXK@Z ENDP			; CCampus::SetCampusId
_TEXT	ENDS
PUBLIC	?GetMaster@CCampus@@QAEKXZ			; CCampus::GetMaster
; Function compile flags: /Ogty
;	COMDAT ?GetMaster@CCampus@@QAEKXZ
_TEXT	SEGMENT
?GetMaster@CCampus@@QAEKXZ PROC NEAR			; CCampus::GetMaster, COMDAT
; _this$ = ecx

; 52   : 	u_long	GetMaster()		{	return m_idMaster;	}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetMaster@CCampus@@QAEKXZ ENDP				; CCampus::GetMaster
_TEXT	ENDS
PUBLIC	?SetMaster@CCampus@@QAEXK@Z			; CCampus::SetMaster
; Function compile flags: /Ogty
;	COMDAT ?SetMaster@CCampus@@QAEXK@Z
_TEXT	SEGMENT
_idMaster$ = 8						; size = 4
?SetMaster@CCampus@@QAEXK@Z PROC NEAR			; CCampus::SetMaster, COMDAT
; _this$ = ecx

; 53   : 	void	SetMaster( u_long idMaster )	{	m_idMaster = idMaster;	}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _idMaster$[esp-4]
  00004	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00007	c2 04 00	 ret	 4
?SetMaster@CCampus@@QAEXK@Z ENDP			; CCampus::SetMaster
_TEXT	ENDS
PUBLIC	?IsMaster@CCampus@@QAEHK@Z			; CCampus::IsMaster
; Function compile flags: /Ogty
;	COMDAT ?IsMaster@CCampus@@QAEHK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?IsMaster@CCampus@@QAEHK@Z PROC NEAR			; CCampus::IsMaster, COMDAT
; _this$ = ecx

; 54   : 	BOOL	IsMaster( u_long idPlayer )		{	return ( idPlayer == m_idMaster );	}

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _idPlayer$[esp-4]
  00004	56		 push	 esi
  00005	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00008	33 c0		 xor	 eax, eax
  0000a	3b d6		 cmp	 edx, esi
  0000c	0f 94 c0	 sete	 al
  0000f	5e		 pop	 esi
  00010	c2 04 00	 ret	 4
?IsMaster@CCampus@@QAEHK@Z ENDP				; CCampus::IsMaster
_TEXT	ENDS
PUBLIC	?AddCampus@CCampusHelper@@QAEKPAVCCampus@@@Z	; CCampusHelper::AddCampus
EXTRN	?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z:NEAR	; CCampusMng::AddCampus
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.h
;	COMDAT ?AddCampus@CCampusHelper@@QAEKPAVCCampus@@@Z
_TEXT	SEGMENT
_pCampus$ = 8						; size = 4
?AddCampus@CCampusHelper@@QAEKPAVCCampus@@@Z PROC NEAR	; CCampusHelper::AddCampus, COMDAT
; _this$ = ecx

; 75   : 	u_long	AddCampus( CCampus* pCampus )	{	return m_pCampusMng->AddCampus( pCampus );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z ; CCampusMng::AddCampus
?AddCampus@CCampusHelper@@QAEKPAVCCampus@@@Z ENDP	; CCampusHelper::AddCampus
_TEXT	ENDS
PUBLIC	?RemoveCampus@CCampusHelper@@QAEHK@Z		; CCampusHelper::RemoveCampus
EXTRN	?RemoveCampus@CCampusMng@@QAEHK@Z:NEAR		; CCampusMng::RemoveCampus
; Function compile flags: /Ogty
;	COMDAT ?RemoveCampus@CCampusHelper@@QAEHK@Z
_TEXT	SEGMENT
_idCampus$ = 8						; size = 4
?RemoveCampus@CCampusHelper@@QAEHK@Z PROC NEAR		; CCampusHelper::RemoveCampus, COMDAT
; _this$ = ecx

; 76   : 	BOOL	RemoveCampus( u_long idCampus )	{	return m_pCampusMng->RemoveCampus( idCampus );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?RemoveCampus@CCampusMng@@QAEHK@Z ; CCampusMng::RemoveCampus
?RemoveCampus@CCampusHelper@@QAEHK@Z ENDP		; CCampusHelper::RemoveCampus
_TEXT	ENDS
PUBLIC	?GetCampus@CCampusHelper@@QAEPAVCCampus@@K@Z	; CCampusHelper::GetCampus
EXTRN	?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z:NEAR	; CCampusMng::GetCampus
; Function compile flags: /Ogty
;	COMDAT ?GetCampus@CCampusHelper@@QAEPAVCCampus@@K@Z
_TEXT	SEGMENT
_idCampus$ = 8						; size = 4
?GetCampus@CCampusHelper@@QAEPAVCCampus@@K@Z PROC NEAR	; CCampusHelper::GetCampus, COMDAT
; _this$ = ecx

; 79   : 	CCampus*	GetCampus( u_long idCampus )	{	return m_pCampusMng->GetCampus( idCampus );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ; CCampusMng::GetCampus
?GetCampus@CCampusHelper@@QAEPAVCCampus@@K@Z ENDP	; CCampusHelper::GetCampus
_TEXT	ENDS
PUBLIC	?Clear@CCampusHelper@@QAEXXZ			; CCampusHelper::Clear
EXTRN	?Clear@CCampusMng@@QAEXXZ:NEAR			; CCampusMng::Clear
; Function compile flags: /Ogty
;	COMDAT ?Clear@CCampusHelper@@QAEXXZ
_TEXT	SEGMENT
?Clear@CCampusHelper@@QAEXXZ PROC NEAR			; CCampusHelper::Clear, COMDAT
; _this$ = ecx

; 81   : 	void	Clear()	{	m_pCampusMng->Clear();	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?Clear@CCampusMng@@QAEXXZ ; CCampusMng::Clear
?Clear@CCampusHelper@@QAEXXZ ENDP			; CCampusHelper::Clear
_TEXT	ENDS
PUBLIC	?AddPlayerId2CampusId@CCampusHelper@@QAE_NKK@Z	; CCampusHelper::AddPlayerId2CampusId
EXTRN	?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z:NEAR ; CCampusMng::AddPlayerId2CampusId
; Function compile flags: /Ogty
;	COMDAT ?AddPlayerId2CampusId@CCampusHelper@@QAE_NKK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
_idCampus$ = 12						; size = 4
?AddPlayerId2CampusId@CCampusHelper@@QAE_NKK@Z PROC NEAR ; CCampusHelper::AddPlayerId2CampusId, COMDAT
; _this$ = ecx

; 82   : 	bool	AddPlayerId2CampusId( u_long idPlayer, u_long idCampus )	{	return m_pCampusMng->AddPlayerId2CampusId( idPlayer, idCampus );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ; CCampusMng::AddPlayerId2CampusId
?AddPlayerId2CampusId@CCampusHelper@@QAE_NKK@Z ENDP	; CCampusHelper::AddPlayerId2CampusId
_TEXT	ENDS
PUBLIC	?GetCampusIdByPlayerId@CCampusHelper@@QAEKK@Z	; CCampusHelper::GetCampusIdByPlayerId
EXTRN	?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z:NEAR	; CCampusMng::GetCampusIdByPlayerId
; Function compile flags: /Ogty
;	COMDAT ?GetCampusIdByPlayerId@CCampusHelper@@QAEKK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?GetCampusIdByPlayerId@CCampusHelper@@QAEKK@Z PROC NEAR	; CCampusHelper::GetCampusIdByPlayerId, COMDAT
; _this$ = ecx

; 84   : 	u_long	GetCampusIdByPlayerId( u_long idPlayer )	{	return m_pCampusMng->GetCampusIdByPlayerId( idPlayer );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	e9 00 00 00 00	 jmp	 ?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z ; CCampusMng::GetCampusIdByPlayerId
?GetCampusIdByPlayerId@CCampusHelper@@QAEKK@Z ENDP	; CCampusHelper::GetCampusIdByPlayerId
_TEXT	ENDS
PUBLIC	??0CCampusDBCtrl@@QAE@XZ			; CCampusDBCtrl::CCampusDBCtrl
PUBLIC	?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z ; CCampusDBCtrl::Handler
PUBLIC	?OnTimer@CDbController@@UAEXXZ			; CDbController::OnTimer
PUBLIC	??_7CCampusDBCtrl@@6B@				; CCampusDBCtrl::`vftable'
PUBLIC	??_GCCampusDBCtrl@@UAEPAXI@Z			; CCampusDBCtrl::`scalar deleting destructor'
EXTRN	??0CDbController@@QAE@XZ:NEAR			; CDbController::CDbController
EXTRN	??_ECCampusDBCtrl@@UAEPAXI@Z:NEAR		; CCampusDBCtrl::`vector deleting destructor'
;	COMDAT ??_7CCampusDBCtrl@@6B@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	SEGMENT
??_7CCampusDBCtrl@@6B@ DD FLAT:??_ECCampusDBCtrl@@UAEPAXI@Z ; CCampusDBCtrl::`vftable'
	DD	FLAT:?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z
	DD	FLAT:?OnTimer@CDbController@@UAEXXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CCampusDBCtrl@@QAE@XZ
_TEXT	SEGMENT
??0CCampusDBCtrl@@QAE@XZ PROC NEAR			; CCampusDBCtrl::CCampusDBCtrl, COMDAT
; _this$ = ecx

; 20   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CDbController@@QAE@XZ ; CDbController::CDbController
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CCampusDBCtrl@@6B@
  0000e	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 21   : 
; 22   : }

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0CCampusDBCtrl@@QAE@XZ ENDP				; CCampusDBCtrl::CCampusDBCtrl
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
_TEXT	ENDS
;	COMDAT ?OnTimer@CDbController@@UAEXXZ
_TEXT	SEGMENT
?OnTimer@CDbController@@UAEXXZ PROC NEAR		; CDbController::OnTimer, COMDAT
; _this$ = ecx

; 26   : 	virtual void	OnTimer()	{}

  00000	c3		 ret	 0
?OnTimer@CDbController@@UAEXXZ ENDP			; CDbController::OnTimer
_TEXT	ENDS
PUBLIC	??_GCQuery@@QAEPAXI@Z				; CQuery::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??1CQuery@@QAE@XZ:NEAR				; CQuery::~CQuery
; Function compile flags: /Ogty
;	COMDAT ??_GCQuery@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCQuery@@QAEPAXI@Z PROC NEAR				; CQuery::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CQuery@@QAE@XZ	; CQuery::~CQuery
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L204989
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L204989:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCQuery@@QAEPAXI@Z ENDP				; CQuery::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?CreateLogQuery@CCampusDBCtrl@@AAEXXZ		; CCampusDBCtrl::CreateLogQuery
PUBLIC	??_C@_0CP@EFPIHLLF@Can?8t?5connect?5db?3?5CCampusDBCtrl?4@ ; `string'
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??0CQuery@@QAE@XZ:NEAR				; CQuery::CQuery
EXTRN	?Connect@CQuery@@QAEHHPAD0PBD@Z:NEAR		; CQuery::Connect
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?GetInstance@CDbManager@@SAAAV1@XZ:NEAR		; CDbManager::GetInstance
EXTRN	?DSN_NAME_LOG@@3PADA:BYTE			; DSN_NAME_LOG
EXTRN	?DB_ADMIN_ID_LOG@@3PADA:BYTE			; DB_ADMIN_ID_LOG
EXTRN	?AfxMessageBox@@YGHPBDII@Z:NEAR			; AfxMessageBox
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
xdata$x	SEGMENT
$T205012 DD	0ffffffffH
	DD	FLAT:$L205000
$T205008 DD	019930520H
	DD	01H
	DD	FLAT:$T205012
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CP@EFPIHLLF@Can?8t?5connect?5db?3?5CCampusDBCtrl?4@
CONST	SEGMENT
??_C@_0CP@EFPIHLLF@Can?8t?5connect?5db?3?5CCampusDBCtrl?4@ DB 'Can''t con'
	DB	'nect db: CCampusDBCtrl.CreateLogQuery', 00H	; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?CreateLogQuery@CCampusDBCtrl@@AAEXXZ
_TEXT	SEGMENT
$T204993 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateLogQuery@CCampusDBCtrl@@AAEXXZ PROC NEAR		; CCampusDBCtrl::CreateLogQuery, COMDAT
; _this$ = ecx

; 59   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?CreateLogQuery@CCampusDBCtrl@@AAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi

; 60   : 	m_pLogQuery = new CQuery;

  00017	68 10 3d 00 00	 push	 15632			; 00003d10H
  0001c	8b f1		 mov	 esi, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 04	 mov	 DWORD PTR $T204993[esp+20], eax
  0002a	85 c0		 test	 eax, eax
  0002c	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0
  00034	74 09		 je	 SHORT $L204994
  00036	8b c8		 mov	 ecx, eax
  00038	e8 00 00 00 00	 call	 ??0CQuery@@QAE@XZ	; CQuery::CQuery
  0003d	eb 02		 jmp	 SHORT $L204995
$L204994:
  0003f	33 c0		 xor	 eax, eax
$L204995:
  00041	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00049	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 61   : 
; 62   : 	const char* pass	= CDbManager::GetInstance().DB_ADMIN_PASS_LOG;

  0004c	e8 00 00 00 00	 call	 ?GetInstance@CDbManager@@SAAAV1@XZ ; CDbManager::GetInstance

; 63   : 	if( FALSE == m_pLogQuery->Connect( 3, DSN_NAME_LOG, DB_ADMIN_ID_LOG, pass ) )

  00051	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00054	05 c0 03 00 00	 add	 eax, 960		; 000003c0H
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:?DB_ADMIN_ID_LOG@@3PADA ; DB_ADMIN_ID_LOG
  0005f	68 00 00 00 00	 push	 OFFSET FLAT:?DSN_NAME_LOG@@3PADA ; DSN_NAME_LOG
  00064	6a 03		 push	 3
  00066	e8 00 00 00 00	 call	 ?Connect@CQuery@@QAEHHPAD0PBD@Z ; CQuery::Connect
  0006b	85 c0		 test	 eax, eax
  0006d	75 2c		 jne	 SHORT $L203172
  0006f	57		 push	 edi

; 64   : 	{
; 65   : 		::AfxMessageBox( "Can't connect db: CCampusDBCtrl.CreateLogQuery" );

  00070	50		 push	 eax
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CP@EFPIHLLF@Can?8t?5connect?5db?3?5CCampusDBCtrl?4@
  00077	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 66   : 		SAFE_DELETE( m_pLogQuery );

  0007c	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  0007f	85 ff		 test	 edi, edi
  00081	74 17		 je	 SHORT $L205011
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ??1CQuery@@QAE@XZ	; CQuery::~CQuery
  0008a	57		 push	 edi
  0008b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00090	83 c4 04	 add	 esp, 4
  00093	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$L205011:
  0009a	5f		 pop	 edi
$L203172:

; 67   : 		ASSERT( 0 );
; 68   : 	}
; 69   : }

  0009b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205000:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T204993[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?CreateLogQuery@CCampusDBCtrl@@AAEXXZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T205008
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateLogQuery@CCampusDBCtrl@@AAEXXZ ENDP		; CCampusDBCtrl::CreateLogQuery
PUBLIC	??_GCCampusMember@@QAEPAXI@Z			; CCampusMember::`scalar deleting destructor'
EXTRN	??1CCampusMember@@QAE@XZ:NEAR			; CCampusMember::~CCampusMember
; Function compile flags: /Ogty
;	COMDAT ??_GCCampusMember@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampusMember@@QAEPAXI@Z PROC NEAR			; CCampusMember::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CCampusMember@@QAE@XZ ; CCampusMember::~CCampusMember
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L205018
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L205018:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCCampusMember@@QAEPAXI@Z ENDP			; CCampusMember::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCCampus@@QAEPAXI@Z				; CCampus::`scalar deleting destructor'
EXTRN	??1CCampus@@QAE@XZ:NEAR				; CCampus::~CCampus
; Function compile flags: /Ogty
;	COMDAT ??_GCCampus@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampus@@QAEPAXI@Z PROC NEAR			; CCampus::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CCampus@@QAE@XZ	; CCampus::~CCampus
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L205021
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L205021:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCCampus@@QAEPAXI@Z ENDP				; CCampus::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?InsertCampus@CCampusDBCtrl@@AAEXK@Z		; CCampusDBCtrl::InsertCampus
PUBLIC	??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@	; `string'
PUBLIC	??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@	; `string'
PUBLIC	??_C@_0DI@HDOGOKEB@usp_Campus_Insert?5?$EAidCampus?5?$DN?5?$CFd@ ; `string'
EXTRN	?Exec@CQuery@@QAEHPBD@Z:NEAR			; CQuery::Exec
EXTRN	?WriteLog@@YAXPBDZZ:NEAR			; WriteLog
EXTRN	__chkstk:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	_sprintf:NEAR
EXTRN	?g_appInfo@@3UAppInfo@@A:QWORD			; g_appInfo
;	COMDAT ??_C@_0DI@HDOGOKEB@usp_Campus_Insert?5?$EAidCampus?5?$DN?5?$CFd@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_0DI@HDOGOKEB@usp_Campus_Insert?5?$EAidCampus?5?$DN?5?$CFd@ DB 'usp_'
	DB	'Campus_Insert @idCampus = %d, @serverindex = ''%02d''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
CONST	SEGMENT
??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@ DB '.\CampusDBCtrl.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
CONST	SEGMENT
??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@ DB '%s, %d', 09H, '%s', 00H ; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?InsertCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idCampus$ = 8						; size = 4
?InsertCampus@CCampusDBCtrl@@AAEXK@Z PROC NEAR		; CCampusDBCtrl::InsertCampus, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c5		 xor	 eax, ebp
  00017	56		 push	 esi

; 280  : 	CQuery* pQuery = GetQueryObject();

  00018	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  0001b	57		 push	 edi
  0001c	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax

; 281  : 	char szQuery[QUERY_SIZE] = {0, };

  00023	33 c0		 xor	 eax, eax
  00025	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  0002a	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  0002f	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00033	f3 ab		 rep stosd

; 282  : 	
; 283  : 	sprintf( szQuery, "usp_Campus_Insert @idCampus = %d, @serverindex = '%02d'", idCampus, g_appInfo.dwSys );

  00035	8b 4d 08	 mov	 ecx, DWORD PTR _idCampus$[ebp]
  00038	66 ab		 stosw
  0003a	aa		 stosb
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00040	50		 push	 eax
  00041	51		 push	 ecx
  00042	8d 54 24 10	 lea	 edx, DWORD PTR _szQuery$[esp+40984]
  00046	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@HDOGOKEB@usp_Campus_Insert?5?$EAidCampus?5?$DN?5?$CFd@
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 _sprintf
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 284  : 	if( pQuery->Exec( szQuery ) == FALSE )

  00054	8d 44 24 08	 lea	 eax, DWORD PTR _szQuery$[esp+40976]
  00058	50		 push	 eax
  00059	8b ce		 mov	 ecx, esi
  0005b	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00060	85 c0		 test	 eax, eax
  00062	75 1c		 jne	 SHORT $L203453

; 285  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00064	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00068	51		 push	 ecx
  00069	68 1d 01 00 00	 push	 285			; 0000011dH
  0006e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  00073	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00078	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  0007d	83 c4 10	 add	 esp, 16			; 00000010H
$L203453:

; 286  : }

  00080	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  00087	5f		 pop	 edi
  00088	33 cd		 xor	 ecx, ebp
  0008a	5e		 pop	 esi
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?InsertCampus@CCampusDBCtrl@@AAEXK@Z ENDP		; CCampusDBCtrl::InsertCampus
_TEXT	ENDS
PUBLIC	?DeleteCampus@CCampusDBCtrl@@AAEXK@Z		; CCampusDBCtrl::DeleteCampus
PUBLIC	??_C@_0DI@GMELEMJP@usp_Campus_Delete?5?$EAidCampus?5?$DN?5?$CFd@ ; `string'
;	COMDAT ??_C@_0DI@GMELEMJP@usp_Campus_Delete?5?$EAidCampus?5?$DN?5?$CFd@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_0DI@GMELEMJP@usp_Campus_Delete?5?$EAidCampus?5?$DN?5?$CFd@ DB 'usp_'
	DB	'Campus_Delete @idCampus = %d, @serverindex = ''%02d''', 00H ; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?DeleteCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idCampus$ = 8						; size = 4
?DeleteCampus@CCampusDBCtrl@@AAEXK@Z PROC NEAR		; CCampusDBCtrl::DeleteCampus, COMDAT
; _this$ = ecx

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c5		 xor	 eax, ebp
  00017	56		 push	 esi

; 290  : 	CQuery* pQuery = GetQueryObject();

  00018	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  0001b	57		 push	 edi
  0001c	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax

; 291  : 	char szQuery[QUERY_SIZE] = {0, };

  00023	33 c0		 xor	 eax, eax
  00025	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  0002a	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  0002f	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00033	f3 ab		 rep stosd

; 292  : 	
; 293  : 	sprintf( szQuery, "usp_Campus_Delete @idCampus = %d, @serverindex = '%02d'", idCampus, g_appInfo.dwSys );

  00035	8b 4d 08	 mov	 ecx, DWORD PTR _idCampus$[ebp]
  00038	66 ab		 stosw
  0003a	aa		 stosb
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00040	50		 push	 eax
  00041	51		 push	 ecx
  00042	8d 54 24 10	 lea	 edx, DWORD PTR _szQuery$[esp+40984]
  00046	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@GMELEMJP@usp_Campus_Delete?5?$EAidCampus?5?$DN?5?$CFd@
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 _sprintf
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 294  : 	if( pQuery->Exec( szQuery ) == FALSE )

  00054	8d 44 24 08	 lea	 eax, DWORD PTR _szQuery$[esp+40976]
  00058	50		 push	 eax
  00059	8b ce		 mov	 ecx, esi
  0005b	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00060	85 c0		 test	 eax, eax
  00062	75 1c		 jne	 SHORT $L203461

; 295  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00064	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00068	51		 push	 ecx
  00069	68 27 01 00 00	 push	 295			; 00000127H
  0006e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  00073	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00078	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  0007d	83 c4 10	 add	 esp, 16			; 00000010H
$L203461:

; 296  : }

  00080	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  00087	5f		 pop	 edi
  00088	33 cd		 xor	 ecx, ebp
  0008a	5e		 pop	 esi
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?DeleteCampus@CCampusDBCtrl@@AAEXK@Z ENDP		; CCampusDBCtrl::DeleteCampus
_TEXT	ENDS
PUBLIC	?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z	; CCampusDBCtrl::InsertCampusMember
PUBLIC	??_C@_0GF@JMBGFEDG@usp_CampusMember_Insert?5?$EAidCampu@ ; `string'
;	COMDAT ??_C@_0GF@JMBGFEDG@usp_CampusMember_Insert?5?$EAidCampu@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_0GF@JMBGFEDG@usp_CampusMember_Insert?5?$EAidCampu@ DB 'usp_CampusMe'
	DB	'mber_Insert @idCampus = %d, @serverindex = ''%02d'', @m_idPla'
	DB	'yer = ''%07d'', @nMemberLv = %d', 00H	; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idCampus$ = 8						; size = 4
_idPlayer$ = 12						; size = 4
_nMemberLv$ = 16					; size = 4
?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z PROC NEAR	; CCampusDBCtrl::InsertCampusMember, COMDAT
; _this$ = ecx

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie

; 300  : 	CQuery* pQuery = GetQueryObject();
; 301  : 	char szQuery[QUERY_SIZE] = {0, };
; 302  : 	
; 303  : 	sprintf( szQuery, "usp_CampusMember_Insert @idCampus = %d, @serverindex = '%02d', @m_idPlayer = '%07d', @nMemberLv = %d", 
; 304  : 		idCampus, g_appInfo.dwSys, idPlayer, nMemberLv );

  00015	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  0001b	56		 push	 esi
  0001c	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  0001f	57		 push	 edi
  00020	33 c5		 xor	 eax, ebp
  00022	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax
  00029	33 c0		 xor	 eax, eax
  0002b	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  00030	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  00035	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00039	f3 ab		 rep stosd
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _idPlayer$[ebp]
  0003e	66 ab		 stosw
  00040	aa		 stosb
  00041	8b 45 10	 mov	 eax, DWORD PTR _nMemberLv$[ebp]
  00044	50		 push	 eax
  00045	8b 45 08	 mov	 eax, DWORD PTR _idCampus$[ebp]
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	50		 push	 eax
  0004b	8d 4c 24 18	 lea	 ecx, DWORD PTR _szQuery$[esp+40992]
  0004f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GF@JMBGFEDG@usp_CampusMember_Insert?5?$EAidCampu@
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 _sprintf
  0005a	83 c4 18	 add	 esp, 24			; 00000018H

; 305  : 	if( pQuery->Exec( szQuery ) == FALSE )

  0005d	8d 54 24 08	 lea	 edx, DWORD PTR _szQuery$[esp+40976]
  00061	52		 push	 edx
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00069	85 c0		 test	 eax, eax
  0006b	75 1c		 jne	 SHORT $L203471

; 306  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  0006d	8d 44 24 08	 lea	 eax, DWORD PTR _szQuery$[esp+40976]
  00071	50		 push	 eax
  00072	68 32 01 00 00	 push	 306			; 00000132H
  00077	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  0007c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00081	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00086	83 c4 10	 add	 esp, 16			; 00000010H
$L203471:

; 307  : }

  00089	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  00090	5f		 pop	 edi
  00091	33 cd		 xor	 ecx, ebp
  00093	5e		 pop	 esi
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 0c 00	 ret	 12			; 0000000cH
?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z ENDP	; CCampusDBCtrl::InsertCampusMember
_TEXT	ENDS
PUBLIC	?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z	; CCampusDBCtrl::DeleteCampusMember
PUBLIC	??_C@_0FG@OBOHOBGA@usp_CampusMember_Delete?5?5?$EAserver@ ; `string'
;	COMDAT ??_C@_0FG@OBOHOBGA@usp_CampusMember_Delete?5?5?$EAserver@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_0FG@OBOHOBGA@usp_CampusMember_Delete?5?5?$EAserver@ DB 'usp_CampusM'
	DB	'ember_Delete  @serverindex = ''%02d'', @m_idPlayer = ''%07d'''
	DB	', @nMemberLv = %d', 00H			; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_nMemberLv$ = 12					; size = 4
?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z PROC NEAR	; CCampusDBCtrl::DeleteCampusMember, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie

; 311  : 	CQuery* pQuery = GetQueryObject();
; 312  : 	char szQuery[QUERY_SIZE] = {0, };
; 313  : 	
; 314  : 	sprintf( szQuery, "usp_CampusMember_Delete  @serverindex = '%02d', @m_idPlayer = '%07d', @nMemberLv = %d", 
; 315  : 		g_appInfo.dwSys, idPlayer, nMemberLv );

  00015	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  0001b	33 c5		 xor	 eax, ebp
  0001d	56		 push	 esi
  0001e	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  00021	57		 push	 edi
  00022	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax
  00029	33 c0		 xor	 eax, eax
  0002b	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  00030	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  00035	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00039	f3 ab		 rep stosd
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _idPlayer$[ebp]
  0003e	66 ab		 stosw
  00040	aa		 stosb
  00041	8b 45 0c	 mov	 eax, DWORD PTR _nMemberLv$[ebp]
  00044	50		 push	 eax
  00045	51		 push	 ecx
  00046	52		 push	 edx
  00047	8d 44 24 14	 lea	 eax, DWORD PTR _szQuery$[esp+40988]
  0004b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@OBOHOBGA@usp_CampusMember_Delete?5?5?$EAserver@
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 _sprintf
  00056	83 c4 14	 add	 esp, 20			; 00000014H

; 316  : 	if( pQuery->Exec( szQuery ) == FALSE )

  00059	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  0005d	51		 push	 ecx
  0005e	8b ce		 mov	 ecx, esi
  00060	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00065	85 c0		 test	 eax, eax
  00067	75 1c		 jne	 SHORT $L203480

; 317  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00069	8d 54 24 08	 lea	 edx, DWORD PTR _szQuery$[esp+40976]
  0006d	52		 push	 edx
  0006e	68 3d 01 00 00	 push	 317			; 0000013dH
  00073	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  00078	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  0007d	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00082	83 c4 10	 add	 esp, 16			; 00000010H
$L203480:

; 318  : }

  00085	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  0008c	5f		 pop	 edi
  0008d	33 cd		 xor	 ecx, ebp
  0008f	5e		 pop	 esi
  00090	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 08 00	 ret	 8
?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z ENDP	; CCampusDBCtrl::DeleteCampusMember
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z	; CCampusDBCtrl::UpdateCampusPoint
PUBLIC	??_C@_02MIPIAIAA@U5?$AA@			; `string'
PUBLIC	??_C@_0P@HAGDFNOH@m_nCampusPoint?$AA@		; `string'
EXTRN	?DBQryCharacter@CDbManager@@QAEXPAD0KH00HKKMMM0KKKKKMKMHHHKKH0HHHHH_J1000KHMMMHHHHH0DKHHH1HKKH0000000000000H000KHH00K00000KMMMHKK1J00KHHHHHHK0@Z:NEAR ; CDbManager::DBQryCharacter
EXTRN	?Fetch@CQuery@@QAEHXZ:NEAR			; CQuery::Fetch
EXTRN	?GetInt@CQuery@@QAEHPAD@Z:NEAR			; CQuery::GetInt
EXTRN	__fltused:NEAR
EXTRN	?g_DbManager@@3AAVCDbManager@@A:DWORD		; g_DbManager
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02MIPIAIAA@U5?$AA@
CONST	SEGMENT
??_C@_02MIPIAIAA@U5?$AA@ DB 'U5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HAGDFNOH@m_nCampusPoint?$AA@
CONST	SEGMENT
??_C@_0P@HAGDFNOH@m_nCampusPoint?$AA@ DB 'm_nCampusPoint', 00H ; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_nCampusPoint$ = 12					; size = 4
?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z PROC NEAR	; CCampusDBCtrl::UpdateCampusPoint, COMDAT
; _this$ = ecx

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	56		 push	 esi
  00011	57		 push	 edi

; 322  : 	CQuery* pQuery = GetQueryObject();
; 323  : 	char szQuery[QUERY_SIZE] = {0, };
; 324  : 	
; 325  : 	g_DbManager.DBQryCharacter( szQuery, "U5", idPlayer, g_appInfo.dwSys, '\0', "", nCampusPoint );

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	6a ff		 push	 -1
  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	6a 00		 push	 0
  0002a	6a 00		 push	 0
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	6a 00		 push	 0
  0003a	6a 00		 push	 0
  0003c	6a 00		 push	 0
  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	6a 00		 push	 0
  00044	6a 00		 push	 0
  00046	6a 00		 push	 0
  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	6a 00		 push	 0
  00054	6a 00		 push	 0
  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	6a 00		 push	 0
  0005e	6a 00		 push	 0
  00060	6a 00		 push	 0
  00062	6a 00		 push	 0
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00077	6a 00		 push	 0
  00079	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  0007c	6a 00		 push	 0
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	6a 00		 push	 0
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	6a 00		 push	 0
  0008e	6a 00		 push	 0
  00090	33 c5		 xor	 eax, ebp
  00092	6a 46		 push	 70			; 00000046H
  00094	89 84 24 fc a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+41216], eax
  0009b	c6 84 24 f8 00
	00 00 00	 mov	 BYTE PTR _szQuery$[esp+41216], 0
  000a3	33 c0		 xor	 eax, eax
  000a5	6a 00		 push	 0
  000a7	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  000ac	8d bc 24 fd 00
	00 00		 lea	 edi, DWORD PTR _szQuery$[esp+41221]
  000b3	f3 ab		 rep stosd
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	66 ab		 stosw
  000bd	6a 00		 push	 0
  000bf	aa		 stosb
  000c0	6a 00		 push	 0
  000c2	6a 00		 push	 0
  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	6a 00		 push	 0
  000ce	6a 00		 push	 0
  000d0	6a 00		 push	 0
  000d2	6a 00		 push	 0
  000d4	6a 00		 push	 0
  000d6	6a 00		 push	 0
  000d8	6a 00		 push	 0
  000da	6a 00		 push	 0
  000dc	6a 00		 push	 0
  000de	6a 00		 push	 0
  000e0	6a 00		 push	 0
  000e2	6a 00		 push	 0
  000e4	6a 00		 push	 0
  000e6	6a 00		 push	 0
  000e8	6a 00		 push	 0
  000ea	6a 00		 push	 0
  000ec	6a 00		 push	 0
  000ee	6a 00		 push	 0
  000f0	6a 00		 push	 0
  000f2	6a 00		 push	 0
  000f4	6a 00		 push	 0
  000f6	6a 00		 push	 0
  000f8	6a 00		 push	 0
  000fa	6a 00		 push	 0
  000fc	8b 45 0c	 mov	 eax, DWORD PTR _nCampusPoint$[ebp]
  000ff	6a 00		 push	 0
  00101	6a 00		 push	 0
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00109	6a 00		 push	 0
  0010b	8b 55 08	 mov	 edx, DWORD PTR _idPlayer$[ebp]
  0010e	6a 00		 push	 0
  00110	6a 00		 push	 0
  00112	6a 00		 push	 0
  00114	6a 00		 push	 0
  00116	6a 00		 push	 0
  00118	6a 00		 push	 0
  0011a	50		 push	 eax
  0011b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00120	6a 00		 push	 0
  00122	51		 push	 ecx
  00123	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00129	52		 push	 edx
  0012a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02MIPIAIAA@U5?$AA@
  0012f	8d 84 24 c0 01
	00 00		 lea	 eax, DWORD PTR _szQuery$[esp+41416]
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?DBQryCharacter@CDbManager@@QAEXPAD0KH00HKKMMM0KKKKKMKMHHHKKH0HHHHH_J1000KHMMMHHHHH0DKHHH1HKKH0000000000000H000KHH00K00000KMMMHKK1J00KHHHHHHK0@Z ; CDbManager::DBQryCharacter

; 326  : 	if( pQuery->Exec( szQuery ) == FALSE )

  0013c	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00140	51		 push	 ecx
  00141	8b ce		 mov	 ecx, esi
  00143	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00148	85 c0		 test	 eax, eax
  0014a	75 37		 jne	 SHORT $L203489

; 327  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return INT_MAX; }

  0014c	8d 54 24 08	 lea	 edx, DWORD PTR _szQuery$[esp+40976]
  00150	52		 push	 edx
  00151	68 47 01 00 00	 push	 327			; 00000147H
  00156	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  0015b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00160	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00165	83 c4 10	 add	 esp, 16			; 00000010H
  00168	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 332  : 	
; 333  : 	return nTotalPoint;
; 334  : }

  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	8b 8c 24 04 a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40968]
  00176	33 cd		 xor	 ecx, ebp
  00178	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 08 00	 ret	 8
$L203489:

; 328  : 
; 329  : 	int nTotalPoint = INT_MAX;
; 330  : 	if( pQuery->Fetch() )

  00183	8b ce		 mov	 ecx, esi
  00185	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
  0018a	e8 00 00 00 00	 call	 ?Fetch@CQuery@@QAEHXZ	; CQuery::Fetch
  0018f	85 c0		 test	 eax, eax
  00191	74 0e		 je	 SHORT $L203491

; 331  : 		nTotalPoint = pQuery->GetInt( "m_nCampusPoint" );

  00193	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HAGDFNOH@m_nCampusPoint?$AA@
  00198	8b ce		 mov	 ecx, esi
  0019a	e8 00 00 00 00	 call	 ?GetInt@CQuery@@QAEHPAD@Z ; CQuery::GetInt
  0019f	8b f8		 mov	 edi, eax
$L203491:

; 332  : 	
; 333  : 	return nTotalPoint;
; 334  : }

  001a1	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  001a8	8b c7		 mov	 eax, edi
  001aa	5f		 pop	 edi
  001ab	33 cd		 xor	 ecx, ebp
  001ad	5e		 pop	 esi
  001ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b3	8b e5		 mov	 esp, ebp
  001b5	5d		 pop	 ebp
  001b6	c2 08 00	 ret	 8
?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z ENDP		; CCampusDBCtrl::UpdateCampusPoint
_TEXT	ENDS
PUBLIC	?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z		; CCampusDBCtrl::UpdateCampusId
PUBLIC	??_C@_02ODNFFLMD@U6?$AA@			; `string'
;	COMDAT ??_C@_02ODNFFLMD@U6?$AA@
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dbcontroller.h
CONST	SEGMENT
??_C@_02ODNFFLMD@U6?$AA@ DB 'U6', 00H			; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_idCampus$ = 12						; size = 4
?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z PROC NEAR	; CCampusDBCtrl::UpdateCampusId, COMDAT
; _this$ = ecx

; 337  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	56		 push	 esi
  00011	57		 push	 edi

; 338  : 	CQuery* pQuery = GetQueryObject();
; 339  : 	char szQuery[QUERY_SIZE] = {0, };
; 340  : 	
; 341  : 	g_DbManager.DBQryCharacter( szQuery, "U6", idPlayer, g_appInfo.dwSys, '\0', "", idCampus );

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	6a ff		 push	 -1
  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	6a 00		 push	 0
  0002a	6a 00		 push	 0
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	6a 00		 push	 0
  0003a	6a 00		 push	 0
  0003c	6a 00		 push	 0
  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	6a 00		 push	 0
  00044	6a 00		 push	 0
  00046	6a 00		 push	 0
  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	6a 00		 push	 0
  00054	6a 00		 push	 0
  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	6a 00		 push	 0
  0005e	6a 00		 push	 0
  00060	6a 00		 push	 0
  00062	6a 00		 push	 0
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00077	6a 00		 push	 0
  00079	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  0007c	6a 00		 push	 0
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	6a 00		 push	 0
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	6a 00		 push	 0
  0008e	6a 00		 push	 0
  00090	33 c5		 xor	 eax, ebp
  00092	6a 46		 push	 70			; 00000046H
  00094	89 84 24 fc a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+41216], eax
  0009b	c6 84 24 f8 00
	00 00 00	 mov	 BYTE PTR _szQuery$[esp+41216], 0
  000a3	33 c0		 xor	 eax, eax
  000a5	6a 00		 push	 0
  000a7	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  000ac	8d bc 24 fd 00
	00 00		 lea	 edi, DWORD PTR _szQuery$[esp+41221]
  000b3	f3 ab		 rep stosd
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	66 ab		 stosw
  000bd	6a 00		 push	 0
  000bf	aa		 stosb
  000c0	6a 00		 push	 0
  000c2	6a 00		 push	 0
  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	6a 00		 push	 0
  000ce	6a 00		 push	 0
  000d0	6a 00		 push	 0
  000d2	6a 00		 push	 0
  000d4	6a 00		 push	 0
  000d6	6a 00		 push	 0
  000d8	6a 00		 push	 0
  000da	6a 00		 push	 0
  000dc	6a 00		 push	 0
  000de	6a 00		 push	 0
  000e0	6a 00		 push	 0
  000e2	6a 00		 push	 0
  000e4	6a 00		 push	 0
  000e6	6a 00		 push	 0
  000e8	6a 00		 push	 0
  000ea	6a 00		 push	 0
  000ec	6a 00		 push	 0
  000ee	6a 00		 push	 0
  000f0	6a 00		 push	 0
  000f2	6a 00		 push	 0
  000f4	6a 00		 push	 0
  000f6	6a 00		 push	 0
  000f8	6a 00		 push	 0
  000fa	6a 00		 push	 0
  000fc	8b 45 0c	 mov	 eax, DWORD PTR _idCampus$[ebp]
  000ff	6a 00		 push	 0
  00101	6a 00		 push	 0
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00109	6a 00		 push	 0
  0010b	8b 55 08	 mov	 edx, DWORD PTR _idPlayer$[ebp]
  0010e	6a 00		 push	 0
  00110	6a 00		 push	 0
  00112	6a 00		 push	 0
  00114	6a 00		 push	 0
  00116	6a 00		 push	 0
  00118	6a 00		 push	 0
  0011a	50		 push	 eax
  0011b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00120	6a 00		 push	 0
  00122	51		 push	 ecx
  00123	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00129	52		 push	 edx
  0012a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02ODNFFLMD@U6?$AA@
  0012f	8d 84 24 c0 01
	00 00		 lea	 eax, DWORD PTR _szQuery$[esp+41416]
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?DBQryCharacter@CDbManager@@QAEXPAD0KH00HKKMMM0KKKKKMKMHHHKKH0HHHHH_J1000KHMMMHHHHH0DKHHH1HKKH0000000000000H000KHH00K00000KMMMHKK1J00KHHHHHHK0@Z ; CDbManager::DBQryCharacter

; 342  : 	if( pQuery->Exec( szQuery ) == FALSE )

  0013c	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00140	51		 push	 ecx
  00141	8b ce		 mov	 ecx, esi
  00143	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00148	85 c0		 test	 eax, eax
  0014a	75 1c		 jne	 SHORT $L203501

; 343  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  0014c	8d 54 24 08	 lea	 edx, DWORD PTR _szQuery$[esp+40976]
  00150	52		 push	 edx
  00151	68 57 01 00 00	 push	 343			; 00000157H
  00156	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  0015b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00160	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00165	83 c4 10	 add	 esp, 16			; 00000010H
$L203501:

; 344  : }

  00168	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  0016f	5f		 pop	 edi
  00170	33 cd		 xor	 ecx, ebp
  00172	5e		 pop	 esi
  00173	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 08 00	 ret	 8
?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ENDP		; CCampusDBCtrl::UpdateCampusId
_TEXT	ENDS
PUBLIC	?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z ; CCampusDBCtrl::LogUpdateCampusMember
PUBLIC	??_C@_0HI@KDLLPGLE@usp_CampusLog_Insert?5?5?$EAm_idMaste@ ; `string'
;	COMDAT ??_C@_0HI@KDLLPGLE@usp_CampusLog_Insert?5?5?$EAm_idMaste@
CONST	SEGMENT
??_C@_0HI@KDLLPGLE@usp_CampusLog_Insert?5?5?$EAm_idMaste@ DB 'usp_CampusL'
	DB	'og_Insert  @m_idMaster = ''%07d'', @serverindex = ''%02d'', @'
	DB	'idCampus = %d, @m_idPupil = ''%07d'', @chState = ''%c''', 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idCampus$ = 8						; size = 4
_idMaster$ = 12						; size = 4
_idPupil$ = 16						; size = 4
_chState$ = 20						; size = 1
?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z PROC NEAR ; CCampusDBCtrl::LogUpdateCampusMember, COMDAT
; _this$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie

; 348  : 	char szQuery[QUERY_SIZE] = {0, };
; 349  : 
; 350  : 	sprintf( szQuery, "usp_CampusLog_Insert  @m_idMaster = '%07d', @serverindex = '%02d', @idCampus = %d, @m_idPupil = '%07d', @chState = '%c'", 
; 351  : 		idMaster, g_appInfo.dwSys, idCampus, idPupil, chState );

  00015	8b 55 08	 mov	 edx, DWORD PTR _idCampus$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	33 c5		 xor	 eax, ebp
  0001c	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax
  00023	8b f1		 mov	 esi, ecx
  00025	33 c0		 xor	 eax, eax
  00027	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  0002c	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  00031	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00035	f3 ab		 rep stosd
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _idPupil$[ebp]
  0003a	66 ab		 stosw
  0003c	aa		 stosb
  0003d	0f be 45 14	 movsx	 eax, BYTE PTR _chState$[ebp]
  00041	50		 push	 eax
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00047	51		 push	 ecx
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _idMaster$[ebp]
  0004b	52		 push	 edx
  0004c	50		 push	 eax
  0004d	51		 push	 ecx
  0004e	8d 54 24 1c	 lea	 edx, DWORD PTR _szQuery$[esp+40996]
  00052	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HI@KDLLPGLE@usp_CampusLog_Insert?5?5?$EAm_idMaste@
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 _sprintf

; 352  : 	if( m_pLogQuery->Exec( szQuery ) == FALSE )

  0005d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8d 44 24 08	 lea	 eax, DWORD PTR _szQuery$[esp+40976]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  0006d	85 c0		 test	 eax, eax
  0006f	75 1c		 jne	 SHORT $L203511

; 353  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00071	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00075	51		 push	 ecx
  00076	68 61 01 00 00	 push	 353			; 00000161H
  0007b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  00080	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00085	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
$L203511:

; 354  : }

  0008d	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  00094	5f		 pop	 edi
  00095	33 cd		 xor	 ecx, ebp
  00097	5e		 pop	 esi
  00098	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 10 00	 ret	 16			; 00000010H
?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z ENDP	; CCampusDBCtrl::LogUpdateCampusMember
_TEXT	ENDS
PUBLIC	?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z	; CCampusDBCtrl::LogUpdateCampusPoint
PUBLIC	??_C@_0HN@EDLOELGN@usp_CampusPointLog_Insert?5?5?$EAm_id@ ; `string'
;	COMDAT ??_C@_0HN@EDLOELGN@usp_CampusPointLog_Insert?5?5?$EAm_id@
CONST	SEGMENT
??_C@_0HN@EDLOELGN@usp_CampusPointLog_Insert?5?5?$EAm_id@ DB 'usp_CampusP'
	DB	'ointLog_Insert  @m_idPlayer = ''%07d'', @serverindex = ''%02d'
	DB	''', @chState = ''%c'', @nPrevPoint = %0d, @nCurrPoint = %d', 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z
_TEXT	SEGMENT
_szQuery$ = -40968					; size = 40960
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_nPrevPoint$ = 12					; size = 4
_nCurrPoint$ = 16					; size = 4
_chState$ = 20						; size = 1
?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z PROC NEAR ; CCampusDBCtrl::LogUpdateCampusPoint, COMDAT
; _this$ = ecx

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 08 a0 00 00	 mov	 eax, 40968		; 0000a008H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie

; 358  : 	char szQuery[QUERY_SIZE] = {0, };
; 359  : 
; 360  : 	sprintf( szQuery, "usp_CampusPointLog_Insert  @m_idPlayer = '%07d', @serverindex = '%02d', @chState = '%c', @nPrevPoint = %0d, @nCurrPoint = %d", 
; 361  : 		idPlayer, g_appInfo.dwSys, chState, nPrevPoint, nCurrPoint );

  00015	0f be 55 14	 movsx	 edx, BYTE PTR _chState$[ebp]
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	33 c5		 xor	 eax, ebp
  0001d	89 84 24 0c a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+40976], eax
  00024	8b f1		 mov	 esi, ecx
  00026	33 c0		 xor	 eax, eax
  00028	c6 44 24 08 00	 mov	 BYTE PTR _szQuery$[esp+40976], 0
  0002d	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  00032	8d 7c 24 09	 lea	 edi, DWORD PTR _szQuery$[esp+40977]
  00036	f3 ab		 rep stosd
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _nPrevPoint$[ebp]
  0003b	66 ab		 stosw
  0003d	aa		 stosb
  0003e	8b 45 10	 mov	 eax, DWORD PTR _nCurrPoint$[ebp]
  00041	50		 push	 eax
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00047	51		 push	 ecx
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _idPlayer$[ebp]
  0004b	52		 push	 edx
  0004c	50		 push	 eax
  0004d	51		 push	 ecx
  0004e	8d 54 24 1c	 lea	 edx, DWORD PTR _szQuery$[esp+40996]
  00052	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HN@EDLOELGN@usp_CampusPointLog_Insert?5?5?$EAm_id@
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 _sprintf

; 362  : 	if( m_pLogQuery->Exec( szQuery ) == FALSE )

  0005d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00060	83 c4 1c	 add	 esp, 28			; 0000001cH
  00063	8d 44 24 08	 lea	 eax, DWORD PTR _szQuery$[esp+40976]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  0006d	85 c0		 test	 eax, eax
  0006f	75 1c		 jne	 SHORT $L203521

; 363  : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00071	8d 4c 24 08	 lea	 ecx, DWORD PTR _szQuery$[esp+40976]
  00075	51		 push	 ecx
  00076	68 6b 01 00 00	 push	 363			; 0000016bH
  0007b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  00080	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00085	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
$L203521:

; 364  : }

  0008d	8b 8c 24 0c a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40976]
  00094	5f		 pop	 edi
  00095	33 cd		 xor	 ecx, ebp
  00097	5e		 pop	 esi
  00098	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 10 00	 ret	 16			; 00000010H
?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z ENDP	; CCampusDBCtrl::LogUpdateCampusPoint
_TEXT	ENDS
PUBLIC	??_GCCampusMng@@QAEPAXI@Z			; CCampusMng::`scalar deleting destructor'
EXTRN	??1CCampusMng@@QAE@XZ:NEAR			; CCampusMng::~CCampusMng
; Function compile flags: /Ogty
;	COMDAT ??_GCCampusMng@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampusMng@@QAEPAXI@Z PROC NEAR			; CCampusMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CCampusMng@@QAE@XZ	; CCampusMng::~CCampusMng
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L205078
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L205078:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCCampusMng@@QAEPAXI@Z ENDP				; CCampusMng::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetMaxPupilNum@CCampusHelper@@QAEHH@Z		; CCampusHelper::GetMaxPupilNum
; Function compile flags: /Ogty
;	COMDAT ?GetMaxPupilNum@CCampusHelper@@QAEHH@Z
_TEXT	SEGMENT
_nCampusPoint$ = 8					; size = 4
?GetMaxPupilNum@CCampusHelper@@QAEHH@Z PROC NEAR	; CCampusHelper::GetMaxPupilNum, COMDAT
; _this$ = ecx

; 391  : 	if( nCampusPoint >= 0 && nCampusPoint < MIN_LV2_POINT )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nCampusPoint$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 0d		 jl	 SHORT $L203556
  00008	83 f8 29	 cmp	 eax, 41			; 00000029H
  0000b	7d 0d		 jge	 SHORT $L205082

; 392  : 		return 1;

  0000d	b8 01 00 00 00	 mov	 eax, 1

; 399  : }

  00012	c2 04 00	 ret	 4
$L203556:

; 393  : 	else if( nCampusPoint >= MIN_LV2_POINT && nCampusPoint < MIN_LV3_POINT )

  00015	83 f8 29	 cmp	 eax, 41			; 00000029H
  00018	7c 0d		 jl	 SHORT $L203558
$L205082:
  0001a	83 f8 65	 cmp	 eax, 101		; 00000065H
  0001d	7d 0d		 jge	 SHORT $L205081

; 394  : 		return 2;

  0001f	b8 02 00 00 00	 mov	 eax, 2

; 399  : }

  00024	c2 04 00	 ret	 4
$L203558:

; 395  : 	else if( nCampusPoint >= MIN_LV3_POINT )

  00027	83 f8 65	 cmp	 eax, 101		; 00000065H
  0002a	7c 08		 jl	 SHORT $L203560
$L205081:

; 396  : 		return 3;

  0002c	b8 03 00 00 00	 mov	 eax, 3

; 399  : }

  00031	c2 04 00	 ret	 4
$L203560:

; 397  : 	
; 398  : 	return 0;

  00034	33 c0		 xor	 eax, eax

; 399  : }

  00036	c2 04 00	 ret	 4
?GetMaxPupilNum@CCampusHelper@@QAEHH@Z ENDP		; CCampusHelper::GetMaxPupilNum
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampusMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampusMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampusMember *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampusMember *> >,0> >::size
_TEXT	ENDS
PUBLIC	??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++, COMDAT
; _this$ = ecx

; 229  : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 230  : 			++this->_Myptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 231  : 			return (*this);
; 232  : 			}

  00005	c3		 ret	 0
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::size
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L204186
  0000e	8b ff		 npad	 2
$L204185:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L204185
$L204186:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L204190
  0000d	8d 49 00	 npad	 3
$L204189:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L204189
$L204190:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L204198

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L204198:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L204199

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L204199:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L204201

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L204201:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKK@2@@Z ENDP ; std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L204267

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L205289

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L205270
  0001d	8d 49 00	 npad	 3
$L205269:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L205269
$L205270:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L205289:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L204271
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L204270:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L204271

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L204270
$L204271:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L204267:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L205303:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L205303
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 371  : 	{	// return pointer category from pointer to unsigned long arguments

  00000	51		 push	 ecx

; 372  : 	_Scalar_ptr_iterator_tag _Cat;
; 373  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 374  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAE@Z				; CAr::operator>>
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??5CAr@@QAEAAV0@AAE@Z
_TEXT	SEGMENT
_by$ = 8						; size = 4
??5CAr@@QAEAAV0@AAE@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 142  : 	{	CAR_SAFE_READ( BYTE, by );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0e		 ja	 SHORT $L162848
  00011	8a 09		 mov	 cl, BYTE PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _by$[esp-4]
  00017	88 0a		 mov	 BYTE PTR [edx], cl
  00019	ff 40 08	 inc	 DWORD PTR [eax+8]
  0001c	c2 04 00	 ret	 4
$L162848:
  0001f	8b 4c 24 04	 mov	 ecx, DWORD PTR _by$[esp-4]
  00023	c6 01 00	 mov	 BYTE PTR [ecx], 0
  00026	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00029	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002c	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAE@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAK@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??5CAr@@QAEAAV0@AAK@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 146  : 	{	CAR_SAFE_READ( DWORD, dw );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L162868
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _dw$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L162868:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _dw$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAK@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAJ@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??5CAr@@QAEAAV0@AAJ@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 152  : 	{	CAR_SAFE_READ( LONG, l );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L162898
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _l$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L162898:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _l$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAJ@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L205321
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L205321:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L205331
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L205331:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC NEAR	; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L205343
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L205344
$L205343:
  00011	8b d0		 mov	 edx, eax
$L205344:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L185560
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L205351
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L205351:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L185560
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L185560:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?GetMemberSize@CCampus@@QAEHXZ			; CCampus::GetMemberSize
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
;	COMDAT ?GetMemberSize@CCampus@@QAEHXZ
_TEXT	SEGMENT
?GetMemberSize@CCampus@@QAEHXZ PROC NEAR		; CCampus::GetMemberSize, COMDAT
; _this$ = ecx

; 55   : 	int		GetMemberSize()	{	return m_mapCM.size();	}

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?GetMemberSize@CCampus@@QAEHXZ ENDP			; CCampus::GetMemberSize
_TEXT	ENDS
PUBLIC	??1CCampusDBCtrl@@UAE@XZ			; CCampusDBCtrl::~CCampusDBCtrl
EXTRN	??1CDbController@@UAE@XZ:NEAR			; CDbController::~CDbController
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
xdata$x	SEGMENT
$T205391 DD	0ffffffffH
	DD	FLAT:$L205383
$T205389 DD	019930520H
	DD	01H
	DD	FLAT:$T205391
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??1CCampusDBCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCampusDBCtrl@@UAE@XZ PROC NEAR			; CCampusDBCtrl::~CCampusDBCtrl, COMDAT
; _this$ = ecx

; 25   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CCampusDBCtrl@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	57		 push	 edi
  0001a	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CCampusDBCtrl@@6B@

; 26   : 	SAFE_DELETE( m_pLogQuery );

  00024	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  00027	85 ff		 test	 edi, edi
  00029	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00031	74 17		 je	 SHORT $L203139
  00033	8b cf		 mov	 ecx, edi
  00035	e8 00 00 00 00	 call	 ??1CQuery@@QAE@XZ	; CQuery::~CQuery
  0003a	57		 push	 edi
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	83 c4 04	 add	 esp, 4
  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$L203139:

; 27   : }

  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00054	e8 00 00 00 00	 call	 ??1CDbController@@UAE@XZ ; CDbController::~CDbController
  00059	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205383:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDbController@@UAE@XZ ; CDbController::~CDbController
__ehhandler$??1CCampusDBCtrl@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T205389
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CCampusDBCtrl@@UAE@XZ ENDP				; CCampusDBCtrl::~CCampusDBCtrl
PUBLIC	??0CCampusHelper@@QAE@XZ			; CCampusHelper::CCampusHelper
PUBLIC	??_C@_0DB@KNEAGAGD@CCampusHelper?5?9?5m_CampusDBCtrl?4C@ ; `string'
EXTRN	??0CCampusMng@@QAE@XZ:NEAR			; CCampusMng::CCampusMng
EXTRN	?CreateDbHandler@CDbController@@QAEHK@Z:NEAR	; CDbController::CreateDbHandler
EXTRN	?Error@@YAPBDPBDZZ:NEAR				; Error
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205410 DD	0ffffffffH
	DD	FLAT:$L205400
	DD	00H
	DD	FLAT:$L205401
$T205407 DD	019930520H
	DD	02H
	DD	FLAT:$T205410
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DB@KNEAGAGD@CCampusHelper?5?9?5m_CampusDBCtrl?4C@
CONST	SEGMENT
??_C@_0DB@KNEAGAGD@CCampusHelper?5?9?5m_CampusDBCtrl?4C@ DB 'CCampusHelpe'
	DB	'r - m_CampusDBCtrl.CreateDbHandler()', 00H	; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CCampusHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T205397 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CCampusHelper@@QAE@XZ PROC NEAR			; CCampusHelper::CCampusHelper, COMDAT
; _this$ = ecx

; 371  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CCampusHelper@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	56		 push	 esi
  00019	8b f1		 mov	 esi, ecx
  0001b	89 74 24 04	 mov	 DWORD PTR _this$[esp+24], esi
  0001f	e8 00 00 00 00	 call	 ??0CDbController@@QAE@XZ ; CDbController::CDbController
  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CCampusDBCtrl@@6B@
  0002a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 372  : 	m_pCampusMng = new CCampusMng;

  00031	6a 1c		 push	 28			; 0000001cH
  00033	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 44 24 08	 mov	 DWORD PTR $T205397[esp+24], eax
  00047	85 c0		 test	 eax, eax
  00049	c6 44 24 14 01	 mov	 BYTE PTR __$EHRec$[esp+32], 1
  0004e	74 09		 je	 SHORT $L205398
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ??0CCampusMng@@QAE@XZ	; CCampusMng::CCampusMng
  00057	eb 02		 jmp	 SHORT $L205399
$L205398:
  00059	33 c0		 xor	 eax, eax
$L205399:

; 373  : 	if( !m_CampusDBCtrl.CreateDbHandler() )

  0005b	6a ff		 push	 -1
  0005d	8b ce		 mov	 ecx, esi
  0005f	c6 44 24 18 00	 mov	 BYTE PTR __$EHRec$[esp+36], 0
  00064	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00067	e8 00 00 00 00	 call	 ?CreateDbHandler@CDbController@@QAEHK@Z ; CDbController::CreateDbHandler
  0006c	85 c0		 test	 eax, eax
  0006e	75 0d		 jne	 SHORT $L205408

; 374  : 		Error( "CCampusHelper - m_CampusDBCtrl.CreateDbHandler()" );

  00070	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DB@KNEAGAGD@CCampusHelper?5?9?5m_CampusDBCtrl?4C@
  00075	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0007a	83 c4 04	 add	 esp, 4
$L205408:

; 375  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	8b c6		 mov	 eax, esi
  00083	5e		 pop	 esi
  00084	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008b	83 c4 14	 add	 esp, 20			; 00000014H
  0008e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205400:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CCampusDBCtrl@@UAE@XZ ; CCampusDBCtrl::~CCampusDBCtrl
$L205401:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T205397[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$??0CCampusHelper@@QAE@XZ:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T205407
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CCampusHelper@@QAE@XZ ENDP				; CCampusHelper::CCampusHelper
PUBLIC	??1CCampusHelper@@QAE@XZ			; CCampusHelper::~CCampusHelper
EXTRN	?CloseDbHandler@CDbController@@QAEXXZ:NEAR	; CDbController::CloseDbHandler
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205427 DD	0ffffffffH
	DD	FLAT:$L205419
$T205425 DD	019930520H
	DD	01H
	DD	FLAT:$T205427
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??1CCampusHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCampusHelper@@QAE@XZ PROC NEAR			; CCampusHelper::~CCampusHelper, COMDAT
; _this$ = ecx

; 378  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CCampusHelper@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx
  0001a	89 7c 24 08	 mov	 DWORD PTR _this$[esp+24], edi

; 379  : 	SAFE_DELETE( m_pCampusMng );

  0001e	8b 77 18	 mov	 esi, DWORD PTR [edi+24]
  00021	85 f6		 test	 esi, esi
  00023	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0002b	74 17		 je	 SHORT $L203534
  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ??1CCampusMng@@QAE@XZ	; CCampusMng::~CCampusMng
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003a	83 c4 04	 add	 esp, 4
  0003d	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$L203534:

; 380  : 	m_CampusDBCtrl.CloseDbHandler();

  00044	8b cf		 mov	 ecx, edi
  00046	e8 00 00 00 00	 call	 ?CloseDbHandler@CDbController@@QAEXXZ ; CDbController::CloseDbHandler

; 381  : }

  0004b	8b cf		 mov	 ecx, edi
  0004d	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00055	e8 00 00 00 00	 call	 ??1CCampusDBCtrl@@UAE@XZ ; CCampusDBCtrl::~CCampusDBCtrl
  0005a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205419:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CCampusDBCtrl@@UAE@XZ ; CCampusDBCtrl::~CCampusDBCtrl
__ehhandler$??1CCampusHelper@@QAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T205425
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CCampusHelper@@QAE@XZ ENDP				; CCampusHelper::~CCampusHelper
PUBLIC	?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::empty
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::empty, COMDAT
; _this$ = ecx

; 458  : 		return (size() == 0);

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 94 c0	 sete	 al

; 459  : 		}

  0000a	c3		 ret	 0
?empty@?$_Tree@V?$_Tmap_traits@KPAVCCampus@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCampus@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CCampus *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CCampus *> >,0> >::empty
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L204178

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L204178:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L204179

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L204179:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L204181

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L204181:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAH@Z				; CAr::operator>>
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??5CAr@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??5CAr@@QAEAAV0@AAH@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 126  : 	{ return CAr::operator>>((LONG&)i); }

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L205548
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _i$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L205548:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _i$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAH@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAD@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAD@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 4
??5CAr@@QAEAAV0@AAD@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 132  : 	{ return CAr::operator>>((BYTE&)ch); }

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0e		 ja	 SHORT $L205555
  00011	8a 09		 mov	 cl, BYTE PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _ch$[esp-4]
  00017	88 0a		 mov	 BYTE PTR [edx], cl
  00019	ff 40 08	 inc	 DWORD PTR [eax+8]
  0001c	c2 04 00	 ret	 4
$L205555:
  0001f	8b 4c 24 04	 mov	 ecx, DWORD PTR _ch$[esp-4]
  00023	c6 01 00	 mov	 BYTE PTR [ecx], 0
  00026	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00029	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002c	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAD@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L205571
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L205571:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?IsEmpty@CCampusMng@@QAEHXZ			; CCampusMng::IsEmpty
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
;	COMDAT ?IsEmpty@CCampusMng@@QAEHXZ
_TEXT	SEGMENT
?IsEmpty@CCampusMng@@QAEHXZ PROC NEAR			; CCampusMng::IsEmpty, COMDAT
; _this$ = ecx

; 92   : 	BOOL	IsEmpty()	{	return m_mapCampus.empty();	}

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	85 c0		 test	 eax, eax
  00005	0f 94 c0	 sete	 al
  00008	0f b6 c0	 movzx	 eax, al
  0000b	c3		 ret	 0
?IsEmpty@CCampusMng@@QAEHXZ ENDP			; CCampusMng::IsEmpty
_TEXT	ENDS
PUBLIC	?IsEmpty@CCampusHelper@@QAEHXZ			; CCampusHelper::IsEmpty
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.h
;	COMDAT ?IsEmpty@CCampusHelper@@QAEHXZ
_TEXT	SEGMENT
?IsEmpty@CCampusHelper@@QAEHXZ PROC NEAR		; CCampusHelper::IsEmpty, COMDAT
; _this$ = ecx

; 77   : 	BOOL	IsEmpty()	{	return m_pCampusMng->IsEmpty();	}

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00003	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00006	85 c9		 test	 ecx, ecx
  00008	0f 94 c1	 sete	 cl
  0000b	0f b6 c1	 movzx	 eax, cl
  0000e	c3		 ret	 0
?IsEmpty@CCampusHelper@@QAEHXZ ENDP			; CCampusHelper::IsEmpty
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCCampusDBCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCampusDBCtrl@@UAEPAXI@Z PROC NEAR			; CCampusDBCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CCampusDBCtrl@@UAE@XZ ; CCampusDBCtrl::~CCampusDBCtrl
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L205626
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L205626:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCCampusDBCtrl@@UAEPAXI@Z ENDP			; CCampusDBCtrl::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z ; CCampusDBCtrl::UpdateCampusPoint
EXTRN	?GetInstance@CDPTrans@@SAPAV1@XZ:NEAR		; CDPTrans::GetInstance
EXTRN	?SendUpdateCampusPoint@CDPTrans@@QAEXKH@Z:NEAR	; CDPTrans::SendUpdateCampusPoint
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
;	COMDAT ?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_chState$ = 8						; size = 1
_ar$ = 8						; size = 4
?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z PROC NEAR ; CCampusDBCtrl::UpdateCampusPoint, COMDAT
; _this$ = ecx

; 249  : {

  00000	51		 push	 ecx

; 250  : 	u_long idPlayer;
; 251  : 	int nCampusPoint;
; 252  : 	BOOL bAdd;
; 253  : 	char chState;
; 254  : 	ar >> idPlayer >> nCampusPoint >> bAdd >> chState;

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _ar$[esp]
  00005	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	89 4c 24 08	 mov	 DWORD PTR _this$[esp+12], ecx
  0000e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00011	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00014	3b f1		 cmp	 esi, ecx
  00016	57		 push	 edi
  00017	77 07		 ja	 SHORT $L205631
  00019	8b 2a		 mov	 ebp, DWORD PTR [edx]
  0001b	89 70 08	 mov	 DWORD PTR [eax+8], esi
  0001e	eb 05		 jmp	 SHORT $L205632
$L205631:
  00020	33 ed		 xor	 ebp, ebp
  00022	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L205632:
  00025	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00028	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  0002b	3b f1		 cmp	 esi, ecx
  0002d	77 07		 ja	 SHORT $L205643
  0002f	8b 3a		 mov	 edi, DWORD PTR [edx]
  00031	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00034	eb 05		 jmp	 SHORT $L205644
$L205643:
  00036	33 ff		 xor	 edi, edi
  00038	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L205644:
  0003b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003e	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00041	3b f1		 cmp	 esi, ecx
  00043	77 07		 ja	 SHORT $L205655
  00045	8b 12		 mov	 edx, DWORD PTR [edx]
  00047	89 70 08	 mov	 DWORD PTR [eax+8], esi
  0004a	eb 05		 jmp	 SHORT $L205656
$L205655:
  0004c	33 d2		 xor	 edx, edx
  0004e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L205656:
  00051	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00054	53		 push	 ebx
  00055	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
  00058	3b d9		 cmp	 ebx, ecx
  0005a	77 0b		 ja	 SHORT $L205667
  0005c	8a 0e		 mov	 cl, BYTE PTR [esi]
  0005e	88 4c 24 18	 mov	 BYTE PTR _chState$[esp+16], cl
  00062	89 58 08	 mov	 DWORD PTR [eax+8], ebx
  00065	eb 08		 jmp	 SHORT $L205668
$L205667:
  00067	c6 44 24 18 00	 mov	 BYTE PTR _chState$[esp+16], 0
  0006c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L205668:

; 255  : 	
; 256  : 	int nPrevPoint, nCurrPoint;
; 257  : 	nPrevPoint = nCurrPoint = 0;
; 258  : 	if( bAdd )

  0006f	85 d2		 test	 edx, edx

; 259  : 	{
; 260  : 		nCurrPoint = UpdateCampusPoint( idPlayer, nCampusPoint );

  00071	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  00075	5b		 pop	 ebx
  00076	74 0d		 je	 SHORT $L203439
  00078	57		 push	 edi
  00079	55		 push	 ebp
  0007a	e8 00 00 00 00	 call	 ?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z ; CCampusDBCtrl::UpdateCampusPoint
  0007f	8b f0		 mov	 esi, eax

; 261  : 		nPrevPoint = nCurrPoint - nCampusPoint;

  00081	2b c7		 sub	 eax, edi

; 262  : 	}
; 263  : 	else

  00083	eb 10		 jmp	 SHORT $L203440
$L203439:

; 264  : 	{
; 265  : 		nCurrPoint = UpdateCampusPoint( idPlayer, -(nCampusPoint) );

  00085	8b d7		 mov	 edx, edi
  00087	f7 da		 neg	 edx
  00089	52		 push	 edx
  0008a	55		 push	 ebp
  0008b	e8 00 00 00 00	 call	 ?UpdateCampusPoint@CCampusDBCtrl@@AAEHKH@Z ; CCampusDBCtrl::UpdateCampusPoint
  00090	8b f0		 mov	 esi, eax

; 266  : 		nPrevPoint = nCurrPoint + nCampusPoint;

  00092	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
$L203440:

; 267  : 	}
; 268  : 	LogUpdateCampusPoint( idPlayer, nPrevPoint, nCurrPoint, chState );

  00095	8b 4c 24 14	 mov	 ecx, DWORD PTR _chState$[esp+12]
  00099	51		 push	 ecx
  0009a	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  0009e	56		 push	 esi
  0009f	50		 push	 eax
  000a0	55		 push	 ebp
  000a1	e8 00 00 00 00	 call	 ?LogUpdateCampusPoint@CCampusDBCtrl@@AAEXKHHD@Z ; CCampusDBCtrl::LogUpdateCampusPoint

; 269  : 	CDPTrans::GetInstance()->SendUpdateCampusPoint( idPlayer, nCurrPoint );

  000a6	56		 push	 esi
  000a7	55		 push	 ebp
  000a8	e8 00 00 00 00	 call	 ?GetInstance@CDPTrans@@SAPAV1@XZ ; CDPTrans::GetInstance
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ?SendUpdateCampusPoint@CDPTrans@@QAEXKH@Z ; CDPTrans::SendUpdateCampusPoint
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5d		 pop	 ebp

; 270  : }

  000b7	59		 pop	 ecx
  000b8	c2 04 00	 ret	 4
?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z ENDP	; CCampusDBCtrl::UpdateCampusPoint
_TEXT	ENDS
PUBLIC	?GetInstance@CCampusHelper@@SAPAV1@XZ		; CCampusHelper::GetInstance
EXTRN	_atexit:NEAR
;	COMDAT ?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
_BSS	SEGMENT
?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A DB 01cH DUP (?) ; `CCampusHelper::GetInstance'::`2'::sCH
_BSS	ENDS
;	COMDAT ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
_BSS	SEGMENT
?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA DD 01H DUP (?) ; `CCampusHelper::GetInstance'::`2'::$S1
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205677 DD	0ffffffffH
	DD	FLAT:$L205672
$T205674 DD	019930520H
	DD	01H
	DD	FLAT:$T205677
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?GetInstance@CCampusHelper@@SAPAV1@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?GetInstance@CCampusHelper@@SAPAV1@XZ PROC NEAR		; CCampusHelper::GetInstance, COMDAT

; 384  : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list

; 385  : 	static CCampusHelper sCH;

  00006	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
  0000c	6a ff		 push	 -1
  0000e	68 00 00 00 00	 push	 __ehhandler$?GetInstance@CCampusHelper@@SAPAV1@XZ
  00013	50		 push	 eax
  00014	b8 01 00 00 00	 mov	 eax, 1
  00019	84 c8		 test	 cl, al
  0001b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00022	75 25		 jne	 SHORT $L205675
  00024	09 05 00 00 00
	00		 or	 DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA, eax
  0002a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
  0002f	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+20], 0
  00037	e8 00 00 00 00	 call	 ??0CCampusHelper@@QAE@XZ ; CCampusHelper::CCampusHelper
  0003c	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  00041	e8 00 00 00 00	 call	 _atexit
  00046	83 c4 04	 add	 esp, 4
$L205675:

; 386  : 	return & sCH;
; 387  : }

  00049	8b 0c 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+12]
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205672:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?GetInstance@CCampusHelper@@SAPAV1@XZ:
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T205674
  00013	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetInstance@CCampusHelper@@SAPAV1@XZ ENDP		; CCampusHelper::GetInstance
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L204163
$L204161:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L204161
$L204163:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L204170
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L204169:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L204171

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L204172
$L204171:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L204172:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L204169
  00029	5b		 pop	 ebx
$L204170:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Ubound
; Function compile flags: /Ogty
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L204209
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L204208:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L204210

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L204211
$L204210:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L204211:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L204208
  00029	5b		 pop	 ebx
$L204209:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L204481
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L205837:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L205837
  00023	5e		 pop	 esi
$L204481:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L205854

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L205854

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L205851
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L205851:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L205854:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L205881

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L205881:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L184993

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184993:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L184994

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L184994:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L205925

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L205890
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L205891
$L205890:
  00036	8b d3		 mov	 edx, ebx
$L205891:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L205897
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L205898
$L205897:
  00041	8b cb		 mov	 ecx, ebx
$L205898:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L205920

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L205920:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L205925:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T206129 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T206131 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L205932
$T206132 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L205930
$T206130 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T206131
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T206132
$T206124 DD	019930520H
	DD	04H
	DD	FLAT:$T206129
	DD	02H
	DD	FLAT:$T206130
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L185550

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L185552
$L185550:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L185552
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L185552

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L185552:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L185554
$L205930:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L206125
  00092	c3		 ret	 0
$L206125:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L185554:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L206050

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L206045
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L206046
$L206045:
  000ae	83 c6 04	 add	 esi, 4
$L206046:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L206050:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L206092
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L206092:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L206118
  000f2	8b c2		 mov	 eax, edx
$L206118:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L205932:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L206031
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L206031:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L206128:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T206124
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?LoadAllCampus@CCampusDBCtrl@@AAEXXZ		; CCampusDBCtrl::LoadAllCampus
PUBLIC	??_C@_0CG@EPNBNDFJ@usp_Campus_Load?5?$EAserverindex?5?$DN?5?8@ ; `string'
PUBLIC	??_C@_08FHGJFCBK@idCampus?$AA@			; `string'
PUBLIC	??_C@_0CM@CLANIGHK@usp_CampusMember_Load?5?$EAserverind@ ; `string'
PUBLIC	??_C@_0L@FONFFEJF@m_idPlayer?$AA@		; `string'
PUBLIC	??_C@_09FLNBFAEP@nMemberLv?$AA@			; `string'
PUBLIC	??_C@_0DE@GGIDIIN@LoadAllCampus?$CI?$CJ?3?5Player?8s?5campus@ ; `string'
EXTRN	??0CCampusMember@@QAE@XZ:NEAR			; CCampusMember::CCampusMember
EXTRN	??0CCampus@@QAE@XZ:NEAR				; CCampus::CCampus
EXTRN	?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z:NEAR ; CCampus::AddMember
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
xdata$x	SEGMENT
$T206219 DD	0ffffffffH
	DD	FLAT:$L206149
	DD	0ffffffffH
	DD	FLAT:$L206159
	DD	0ffffffffH
	DD	FLAT:$L206150
$T206211 DD	019930520H
	DD	03H
	DD	FLAT:$T206219
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@EPNBNDFJ@usp_Campus_Load?5?$EAserverindex?5?$DN?5?8@
CONST	SEGMENT
??_C@_0CG@EPNBNDFJ@usp_Campus_Load?5?$EAserverindex?5?$DN?5?8@ DB 'usp_Ca'
	DB	'mpus_Load @serverindex = ''%02d''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FHGJFCBK@idCampus?$AA@
CONST	SEGMENT
??_C@_08FHGJFCBK@idCampus?$AA@ DB 'idCampus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CLANIGHK@usp_CampusMember_Load?5?$EAserverind@
CONST	SEGMENT
??_C@_0CM@CLANIGHK@usp_CampusMember_Load?5?$EAserverind@ DB 'usp_CampusMe'
	DB	'mber_Load @serverindex = ''%02d''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FONFFEJF@m_idPlayer?$AA@
CONST	SEGMENT
??_C@_0L@FONFFEJF@m_idPlayer?$AA@ DB 'm_idPlayer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLNBFAEP@nMemberLv?$AA@
CONST	SEGMENT
??_C@_09FLNBFAEP@nMemberLv?$AA@ DB 'nMemberLv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GGIDIIN@LoadAllCampus?$CI?$CJ?3?5Player?8s?5campus@
CONST	SEGMENT
??_C@_0DE@GGIDIIN@LoadAllCampus?$CI?$CJ?3?5Player?8s?5campus@ DB 'LoadAll'
	DB	'Campus(): Player''s campus not found - %d, %d', 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?LoadAllCampus@CCampusDBCtrl@@AAEXXZ
_TEXT	SEGMENT
_idCampus$ = -40988					; size = 4
$T206142 = -40988					; size = 4
$T206138 = -40988					; size = 4
_szQuery$ = -40984					; size = 40960
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?LoadAllCampus@CCampusDBCtrl@@AAEXXZ PROC NEAR		; CCampusDBCtrl::LoadAllCampus, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?LoadAllCampus@CCampusDBCtrl@@AAEXXZ
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	51		 push	 ecx
  0001c	b8 0c a0 00 00	 mov	 eax, 40972		; 0000a00cH
  00021	e8 00 00 00 00	 call	 __chkstk
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	53		 push	 ebx

; 73   : 	CQuery* pQuery = GetQueryObject();

  0002c	8b 59 0c	 mov	 ebx, DWORD PTR [ecx+12]
  0002f	33 c5		 xor	 eax, ebp
  00031	56		 push	 esi
  00032	57		 push	 edi
  00033	89 84 24 14 a0
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+41000], eax

; 74   : 	char szQuery[QUERY_SIZE] = {0, };

  0003a	33 c0		 xor	 eax, eax
  0003c	c6 44 24 10 00	 mov	 BYTE PTR _szQuery$[esp+41000], 0
  00041	b9 ff 27 00 00	 mov	 ecx, 10239		; 000027ffH
  00046	8d 7c 24 11	 lea	 edi, DWORD PTR _szQuery$[esp+41001]
  0004a	f3 ab		 rep stosd
  0004c	66 ab		 stosw
  0004e	aa		 stosb

; 75   : 	
; 76   : 	sprintf( szQuery, "usp_Campus_Load @serverindex = '%02d'", g_appInfo.dwSys );

  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00054	50		 push	 eax
  00055	8d 4c 24 14	 lea	 ecx, DWORD PTR _szQuery$[esp+41004]
  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@EPNBNDFJ@usp_Campus_Load?5?$EAserverindex?5?$DN?5?8@
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 _sprintf
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 77   : 	if( pQuery->Exec( szQuery ) == FALSE )

  00067	8d 54 24 10	 lea	 edx, DWORD PTR _szQuery$[esp+41000]
  0006b	52		 push	 edx
  0006c	8b cb		 mov	 ecx, ebx
  0006e	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  00073	85 c0		 test	 eax, eax
  00075	75 0c		 jne	 SHORT $L206212

; 78   : 	{ WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery ); return; }

  00077	8d 44 24 10	 lea	 eax, DWORD PTR _szQuery$[esp+41000]
  0007b	50		 push	 eax
  0007c	6a 4e		 push	 78			; 0000004eH
  0007e	e9 e4 00 00 00	 jmp	 $L206218
$L206212:

; 79   : 	
; 80   : 	while( pQuery->Fetch() )

  00083	8b cb		 mov	 ecx, ebx
  00085	e8 00 00 00 00	 call	 ?Fetch@CQuery@@QAEHXZ	; CQuery::Fetch
  0008a	85 c0		 test	 eax, eax
  0008c	0f 84 98 00 00
	00		 je	 $L203187
$L203186:

; 81   : 	{
; 82   : 		CCampus* pCampus = new CCampus;

  00092	6a 14		 push	 20			; 00000014H
  00094	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00099	83 c4 04	 add	 esp, 4
  0009c	89 44 24 0c	 mov	 DWORD PTR $T206138[esp+41000], eax
  000a0	33 f6		 xor	 esi, esi
  000a2	3b c6		 cmp	 eax, esi
  000a4	89 b4 24 24 a0
	00 00		 mov	 DWORD PTR __$EHRec$[esp+41008], esi
  000ab	74 09		 je	 SHORT $L206140
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??0CCampus@@QAE@XZ	; CCampus::CCampus
  000b4	8b f0		 mov	 esi, eax
$L206140:
  000b6	83 cf ff	 or	 edi, -1

; 83   : 		pCampus->SetCampusId( pQuery->GetInt( "idCampus" ) );

  000b9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08FHGJFCBK@idCampus?$AA@
  000be	8b cb		 mov	 ecx, ebx
  000c0	89 bc 24 28 a0
	00 00		 mov	 DWORD PTR __$EHRec$[esp+41012], edi
  000c7	e8 00 00 00 00	 call	 ?GetInt@CQuery@@QAEHPAD@Z ; CQuery::GetInt
  000cc	89 06		 mov	 DWORD PTR [esi], eax

; 84   : 		CCampusHelper::GetInstance()->AddCampus( pCampus );

  000ce	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA, 1
  000d5	75 38		 jne	 SHORT $L206162
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
  000dd	b8 01 00 00 00	 mov	 eax, 1
  000e2	0b d0		 or	 edx, eax
  000e4	89 15 00 00 00
	00		 mov	 DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA, edx
  000ea	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
  000ef	89 84 24 24 a0
	00 00		 mov	 DWORD PTR __$EHRec$[esp+41008], eax
  000f6	e8 00 00 00 00	 call	 ??0CCampusHelper@@QAE@XZ ; CCampusHelper::CCampusHelper
  000fb	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  00100	e8 00 00 00 00	 call	 _atexit
  00105	83 c4 04	 add	 esp, 4
  00108	89 bc 24 24 a0
	00 00		 mov	 DWORD PTR __$EHRec$[esp+41008], edi
$L206162:
  0010f	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A+24
  00115	56		 push	 esi
  00116	e8 00 00 00 00	 call	 ?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z ; CCampusMng::AddCampus
  0011b	8b cb		 mov	 ecx, ebx
  0011d	e8 00 00 00 00	 call	 ?Fetch@CQuery@@QAEHXZ	; CQuery::Fetch
  00122	85 c0		 test	 eax, eax
  00124	0f 85 68 ff ff
	ff		 jne	 $L203186
$L203187:

; 85   : 	}
; 86   : 	
; 87   : 	sprintf( szQuery, "usp_CampusMember_Load @serverindex = '%02d'", g_appInfo.dwSys );

  0012a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_appInfo@@3UAppInfo@@A
  00130	51		 push	 ecx
  00131	8d 54 24 14	 lea	 edx, DWORD PTR _szQuery$[esp+41004]
  00135	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@CLANIGHK@usp_CampusMember_Load?5?$EAserverind@
  0013a	52		 push	 edx
  0013b	e8 00 00 00 00	 call	 _sprintf
  00140	83 c4 0c	 add	 esp, 12			; 0000000cH

; 88   : 	if( pQuery->Exec( szQuery ) == FALSE )

  00143	8d 44 24 10	 lea	 eax, DWORD PTR _szQuery$[esp+41000]
  00147	50		 push	 eax
  00148	8b cb		 mov	 ecx, ebx
  0014a	e8 00 00 00 00	 call	 ?Exec@CQuery@@QAEHPBD@Z	; CQuery::Exec
  0014f	85 c0		 test	 eax, eax
  00151	75 2b		 jne	 SHORT $L206213

; 89   : 	{
; 90   : 		CCampusHelper::GetInstance()->Clear();

  00153	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00158	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0015b	e8 00 00 00 00	 call	 ?Clear@CCampusMng@@QAEXXZ ; CCampusMng::Clear

; 91   : 		WriteLog( "%s, %d\t%s", __FILE__, __LINE__, szQuery );

  00160	8d 4c 24 10	 lea	 ecx, DWORD PTR _szQuery$[esp+41000]
  00164	51		 push	 ecx
  00165	6a 5b		 push	 91			; 0000005bH
$L206218:
  00167	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DNMKPCGK@?4?2CampusDBCtrl?4cpp?$AA@
  0016c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09GBAEEKDE@?$CFs?0?5?$CFd?7?$CFs?$AA@
  00171	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00176	83 c4 10	 add	 esp, 16			; 00000010H

; 92   : 		return;

  00179	e9 e8 00 00 00	 jmp	 $L203199
$L206213:

; 93   : 	}
; 94   : 	
; 95   : 	u_long idCampus;
; 96   : 	while( pQuery->Fetch() )

  0017e	8b cb		 mov	 ecx, ebx
  00180	e8 00 00 00 00	 call	 ?Fetch@CQuery@@QAEHXZ	; CQuery::Fetch
  00185	85 c0		 test	 eax, eax
  00187	0f 84 d9 00 00
	00		 je	 $L203199
  0018d	8d 49 00	 npad	 3
$L203198:

; 97   : 	{
; 98   : 		CCampusMember* pMember = new CCampusMember;

  00190	6a 08		 push	 8
  00192	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00197	83 c4 04	 add	 esp, 4
  0019a	89 44 24 0c	 mov	 DWORD PTR $T206142[esp+41000], eax
  0019e	85 c0		 test	 eax, eax
  001a0	c7 84 24 24 a0
	00 00 02 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+41008], 2
  001ab	74 0b		 je	 SHORT $L206143
  001ad	8b c8		 mov	 ecx, eax
  001af	e8 00 00 00 00	 call	 ??0CCampusMember@@QAE@XZ ; CCampusMember::CCampusMember
  001b4	8b f0		 mov	 esi, eax
  001b6	eb 02		 jmp	 SHORT $L206144
$L206143:
  001b8	33 f6		 xor	 esi, esi
$L206144:

; 99   : 		pMember->SetPlayerId( pQuery->GetInt( "m_idPlayer" ) );

  001ba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@FONFFEJF@m_idPlayer?$AA@
  001bf	8b cb		 mov	 ecx, ebx
  001c1	c7 84 24 28 a0
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+41012], -1
  001cc	e8 00 00 00 00	 call	 ?GetInt@CQuery@@QAEHPAD@Z ; CQuery::GetInt

; 100  : 		pMember->SetLevel( pQuery->GetInt( "nMemberLv" ) );

  001d1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09FLNBFAEP@nMemberLv?$AA@
  001d6	8b cb		 mov	 ecx, ebx
  001d8	89 06		 mov	 DWORD PTR [esi], eax
  001da	e8 00 00 00 00	 call	 ?GetInt@CQuery@@QAEHPAD@Z ; CQuery::GetInt

; 101  : 		idCampus = pQuery->GetInt( "idCampus" );

  001df	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08FHGJFCBK@idCampus?$AA@
  001e4	8b cb		 mov	 ecx, ebx
  001e6	89 46 04	 mov	 DWORD PTR [esi+4], eax
  001e9	e8 00 00 00 00	 call	 ?GetInt@CQuery@@QAEHPAD@Z ; CQuery::GetInt
  001ee	8b f8		 mov	 edi, eax
  001f0	89 7c 24 0c	 mov	 DWORD PTR _idCampus$[esp+41000], edi

; 102  : 		CCampus* pCampus = CCampusHelper::GetInstance()->GetCampus( idCampus );

  001f4	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  001f9	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001fc	57		 push	 edi
  001fd	e8 00 00 00 00	 call	 ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ; CCampusMng::GetCampus
  00202	8b f8		 mov	 edi, eax

; 103  : 		if( pCampus )

  00204	85 ff		 test	 edi, edi
  00206	74 2a		 je	 SHORT $L203208

; 104  : 		{
; 105  : 			pCampus->AddMember( pMember );

  00208	56		 push	 esi
  00209	8b cf		 mov	 ecx, edi
  0020b	e8 00 00 00 00	 call	 ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z ; CCampus::AddMember

; 106  : 			if( pMember->GetLevel() == CAMPUS_MASTER )

  00210	83 7e 04 01	 cmp	 DWORD PTR [esi+4], 1
  00214	75 05		 jne	 SHORT $L206191

; 107  : 				pCampus->SetMaster( pMember->GetPlayerId() );

  00216	8b 16		 mov	 edx, DWORD PTR [esi]
  00218	89 57 04	 mov	 DWORD PTR [edi+4], edx
$L206191:

; 108  : 			CCampusHelper::GetInstance()->AddPlayerId2CampusId( pMember->GetPlayerId(), idCampus );

  0021b	8b 36		 mov	 esi, DWORD PTR [esi]
  0021d	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00222	8b 4c 24 0c	 mov	 ecx, DWORD PTR _idCampus$[esp+41000]
  00226	51		 push	 ecx
  00227	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0022a	56		 push	 esi
  0022b	e8 00 00 00 00	 call	 ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ; CCampusMng::AddPlayerId2CampusId

; 109  : 		}
; 110  : 		else

  00230	eb 25		 jmp	 SHORT $L206147
$L203208:

; 111  : 		{
; 112  : 			WriteLog( "LoadAllCampus(): Player's campus not found - %d, %d", pMember->GetPlayerId(), idCampus );

  00232	8b 54 24 0c	 mov	 edx, DWORD PTR _idCampus$[esp+41000]
  00236	8b 06		 mov	 eax, DWORD PTR [esi]
  00238	52		 push	 edx
  00239	50		 push	 eax
  0023a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DE@GGIDIIN@LoadAllCampus?$CI?$CJ?3?5Player?8s?5campus@
  0023f	e8 00 00 00 00	 call	 ?WriteLog@@YAXPBDZZ	; WriteLog
  00244	83 c4 0c	 add	 esp, 12			; 0000000cH

; 113  : 			SAFE_DELETE( pMember );

  00247	8b ce		 mov	 ecx, esi
  00249	e8 00 00 00 00	 call	 ??1CCampusMember@@QAE@XZ ; CCampusMember::~CCampusMember
  0024e	56		 push	 esi
  0024f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00254	83 c4 04	 add	 esp, 4
$L206147:
  00257	8b cb		 mov	 ecx, ebx
  00259	e8 00 00 00 00	 call	 ?Fetch@CQuery@@QAEHXZ	; CQuery::Fetch
  0025e	85 c0		 test	 eax, eax
  00260	0f 85 2a ff ff
	ff		 jne	 $L203198
$L203199:

; 114  : 		}
; 115  : 	}
; 116  : }

  00266	8b 8c 24 1c a0
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+41000]
  0026d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00274	8b 8c 24 14 a0
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+41000]
  0027b	5f		 pop	 edi
  0027c	5e		 pop	 esi
  0027d	33 cd		 xor	 ecx, ebp
  0027f	5b		 pop	 ebx
  00280	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00285	8b e5		 mov	 esp, ebp
  00287	5d		 pop	 ebp
  00288	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L206149:
  00000	8b 85 e4 5f ff
	ff		 mov	 eax, DWORD PTR $T206138[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
$L206159:
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA
  00013	83 e0 fe	 and	 eax, -2			; fffffffeH
  00016	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4IA, eax
  0001b	c3		 ret	 0
$L206150:
  0001c	8b 85 e4 5f ff
	ff		 mov	 eax, DWORD PTR $T206142[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	59		 pop	 ecx
  00029	c3		 ret	 0
__ehhandler$?LoadAllCampus@CCampusDBCtrl@@AAEXXZ:
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T206211
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LoadAllCampus@CCampusDBCtrl@@AAEXXZ ENDP		; CCampusDBCtrl::LoadAllCampus
PUBLIC	?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z	; CCampusDBCtrl::AddCampusMember
PUBLIC	??_C@_0BM@IEAKIJNC@AddPlayerId2CampusId?$CI?$CJ?5fail?$AA@ ; `string'
PUBLIC	??_C@_0BC@EFJAFBJB@AddMember?5failed?$CB?$AA@	; `string'
PUBLIC	??_C@_0CA@DNIPPDFD@new?5campus?5failed?$CB?5campus?5exist?$AA@ ; `string'
EXTRN	?GetPupilNum@CCampus@@QAEHXZ:NEAR		; CCampus::GetPupilNum
EXTRN	?RemoveMember@CCampus@@QAEHK@Z:NEAR		; CCampus::RemoveMember
EXTRN	?SendAddCampusMember@CDPTrans@@QAEXKKK@Z:NEAR	; CDPTrans::SendAddCampusMember
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
xdata$x	SEGMENT
$T206413 DD	0ffffffffH
	DD	FLAT:$L206259
	DD	0ffffffffH
	DD	FLAT:$L206260
	DD	0ffffffffH
	DD	FLAT:$L206261
	DD	0ffffffffH
	DD	FLAT:$L206262
$T206410 DD	019930520H
	DD	04H
	DD	FLAT:$T206413
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@IEAKIJNC@AddPlayerId2CampusId?$CI?$CJ?5fail?$AA@
CONST	SEGMENT
??_C@_0BM@IEAKIJNC@AddPlayerId2CampusId?$CI?$CJ?5fail?$AA@ DB 'AddPlayerI'
	DB	'd2CampusId() fail', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EFJAFBJB@AddMember?5failed?$CB?$AA@
CONST	SEGMENT
??_C@_0BC@EFJAFBJB@AddMember?5failed?$CB?$AA@ DB 'AddMember failed!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DNIPPDFD@new?5campus?5failed?$CB?5campus?5exist?$AA@
CONST	SEGMENT
??_C@_0CA@DNIPPDFD@new?5campus?5failed?$CB?5campus?5exist?$AA@ DB 'new ca'
	DB	'mpus failed! campus exist', 00H		; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT
$T206244 = -24						; size = 4
$T206243 = -24						; size = 4
$T206240 = -24						; size = 4
_this$ = -20						; size = 4
$T206236 = -16						; size = 4
$T206224 = -16						; size = 4
_pCampus$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_idMaster$ = 8						; size = 4
_ar$ = 8						; size = 4
?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z PROC NEAR ; CCampusDBCtrl::AddCampusMember, COMDAT
; _this$ = ecx

; 119  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 120  : 	u_long idMaster, idPupil;
; 121  : 	int nMasterPoint, nPupilPoint;
; 122  : 	ar >> idMaster >> nMasterPoint >> idPupil >> nPupilPoint;

  00018	8b 44 24 1c	 mov	 eax, DWORD PTR _ar$[esp+20]
  0001c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001f	53		 push	 ebx
  00020	55		 push	 ebp
  00021	56		 push	 esi
  00022	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00026	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00029	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  0002c	3b f1		 cmp	 esi, ecx
  0002e	57		 push	 edi
  0002f	77 0b		 ja	 SHORT $L206265
  00031	8b 2a		 mov	 ebp, DWORD PTR [edx]
  00033	89 6c 24 2c	 mov	 DWORD PTR _idMaster$[esp+36], ebp
  00037	89 70 08	 mov	 DWORD PTR [eax+8], esi
  0003a	eb 0f		 jmp	 SHORT $L206266
$L206265:
  0003c	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR _idMaster$[esp+36], 0
  00044	8b 6c 24 2c	 mov	 ebp, DWORD PTR _idMaster$[esp+36]
  00048	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L206266:
  0004b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0004e	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00051	3b f1		 cmp	 esi, ecx
  00053	77 07		 ja	 SHORT $L206277
  00055	8b 3a		 mov	 edi, DWORD PTR [edx]
  00057	89 70 08	 mov	 DWORD PTR [eax+8], esi
  0005a	eb 05		 jmp	 SHORT $L206278
$L206277:
  0005c	33 ff		 xor	 edi, edi
  0005e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L206278:
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00067	3b f1		 cmp	 esi, ecx
  00069	77 07		 ja	 SHORT $L206282
  0006b	8b 1a		 mov	 ebx, DWORD PTR [edx]
  0006d	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00070	eb 05		 jmp	 SHORT $L206283
$L206282:
  00072	33 db		 xor	 ebx, ebx
  00074	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L206283:
  00077	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0007a	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  0007d	3b f1		 cmp	 esi, ecx
  0007f	77 07		 ja	 SHORT $L206294
  00081	8b 12		 mov	 edx, DWORD PTR [edx]
  00083	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00086	eb 05		 jmp	 SHORT $L206295
$L206294:
  00088	33 d2		 xor	 edx, edx
  0008a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L206295:

; 123  : 
; 124  : 	if( nMasterPoint < 0 || nPupilPoint < 0
; 125  : 		|| CCampusHelper::GetInstance()->GetCampus( CCampusHelper::GetInstance()->GetCampusIdByPlayerId( idPupil ) ) )

  0008d	85 ff		 test	 edi, edi
  0008f	0f 8c 0f 03 00
	00		 jl	 $L206257
  00095	85 d2		 test	 edx, edx
  00097	0f 8c 07 03 00
	00		 jl	 $L206257
  0009d	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000a2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000a5	53		 push	 ebx
  000a6	e8 00 00 00 00	 call	 ?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z ; CCampusMng::GetCampusIdByPlayerId
  000ab	8b f0		 mov	 esi, eax
  000ad	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000b2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b5	56		 push	 esi
  000b6	e8 00 00 00 00	 call	 ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ; CCampusMng::GetCampus
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 e1 02 00
	00		 jne	 $L206257

; 126  : 		return;
; 127  : 
; 128  : 	CCampus* pCampus = CCampusHelper::GetInstance()->GetCampus( CCampusHelper::GetInstance()->GetCampusIdByPlayerId( idMaster ) );

  000c3	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000c8	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000cb	55		 push	 ebp
  000cc	e8 00 00 00 00	 call	 ?GetCampusIdByPlayerId@CCampusMng@@QAEKK@Z ; CCampusMng::GetCampusIdByPlayerId
  000d1	8b f0		 mov	 esi, eax
  000d3	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000d8	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000db	56		 push	 esi
  000dc	e8 00 00 00 00	 call	 ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ; CCampusMng::GetCampus
  000e1	8b f0		 mov	 esi, eax

; 129  : 	if( pCampus )

  000e3	85 f6		 test	 esi, esi
  000e5	0f 84 b5 00 00
	00		 je	 $L203231

; 130  : 	{
; 131  : 		if( pCampus->GetPupilNum() >= CCampusHelper::GetInstance()->GetMaxPupilNum( nMasterPoint ) )

  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000f1	8b c8		 mov	 ecx, eax
  000f3	e8 00 00 00 00	 call	 ?GetMaxPupilNum@CCampusHelper@@QAEHH@Z ; CCampusHelper::GetMaxPupilNum
  000f8	8b ce		 mov	 ecx, esi
  000fa	8b f8		 mov	 edi, eax
  000fc	e8 00 00 00 00	 call	 ?GetPupilNum@CCampus@@QAEHXZ ; CCampus::GetPupilNum
  00101	3b c7		 cmp	 eax, edi
  00103	0f 8d 9b 02 00
	00		 jge	 $L206257

; 132  : 			return;
; 133  : 
; 134  : 		CCampusMember* pCM = new CCampusMember;

  00109	6a 08		 push	 8
  0010b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00110	83 c4 04	 add	 esp, 4
  00113	89 44 24 18	 mov	 DWORD PTR $T206224[esp+40], eax
  00117	33 ff		 xor	 edi, edi
  00119	3b c7		 cmp	 eax, edi
  0011b	89 7c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], edi
  0011f	74 09		 je	 SHORT $L206226
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??0CCampusMember@@QAE@XZ ; CCampusMember::CCampusMember
  00128	8b f8		 mov	 edi, eax
$L206226:

; 135  : 		pCM->SetLevel( CAMPUS_PUPIL );
; 136  : 		pCM->SetPlayerId( idPupil );
; 137  : 		if( pCampus->AddMember( pCM )  )

  0012a	57		 push	 edi
  0012b	8b ce		 mov	 ecx, esi
  0012d	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00135	c7 47 04 02 00
	00 00		 mov	 DWORD PTR [edi+4], 2
  0013c	89 1f		 mov	 DWORD PTR [edi], ebx
  0013e	e8 00 00 00 00	 call	 ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z ; CCampus::AddMember
  00143	85 c0		 test	 eax, eax
  00145	74 4d		 je	 SHORT $L203238

; 138  : 		{
; 139  : 			if( CCampusHelper::GetInstance()->AddPlayerId2CampusId( idPupil, pCampus->GetCampusId() ) )

  00147	8b 2e		 mov	 ebp, DWORD PTR [esi]
  00149	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  0014e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00151	55		 push	 ebp
  00152	53		 push	 ebx
  00153	e8 00 00 00 00	 call	 ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ; CCampusMng::AddPlayerId2CampusId
  00158	84 c0		 test	 al, al
  0015a	74 21		 je	 SHORT $L203239

; 140  : 			{
; 141  : 				UpdateCampusId( idPupil, pCampus->GetCampusId() );

  0015c	8b 06		 mov	 eax, DWORD PTR [esi]
  0015e	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+40]
  00162	50		 push	 eax
  00163	53		 push	 ebx
  00164	8b cf		 mov	 ecx, edi
  00166	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 142  : 				InsertCampusMember( pCampus->GetCampusId(), idPupil, CAMPUS_PUPIL );

  0016b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0016d	6a 02		 push	 2
  0016f	53		 push	 ebx
  00170	51		 push	 ecx
  00171	8b cf		 mov	 ecx, edi
  00173	e8 00 00 00 00	 call	 ?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z ; CCampusDBCtrl::InsertCampusMember

; 150  : 			}
; 151  : 		}
; 152  : 		else
; 153  : 		{
; 154  : 			SAFE_DELETE( pCM );
; 155  : 			return;
; 156  : 		}
; 157  : 	}
; 158  : 	else

  00178	e9 7e 01 00 00	 jmp	 $L203269
$L203239:

; 143  : 			}
; 144  : 			else
; 145  : 			{
; 146  : 				Error( "AddPlayerId2CampusId() fail" );

  0017d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@IEAKIJNC@AddPlayerId2CampusId?$CI?$CJ?5fail?$AA@
  00182	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error

; 147  : 				pCampus->RemoveMember( pCM->GetPlayerId() );

  00187	8b 17		 mov	 edx, DWORD PTR [edi]
  00189	83 c4 04	 add	 esp, 4
  0018c	52		 push	 edx
  0018d	8b ce		 mov	 ecx, esi
  0018f	e8 00 00 00 00	 call	 ?RemoveMember@CCampus@@QAEHK@Z ; CCampus::RemoveMember
$L203238:

; 148  : 				SAFE_DELETE( pCM );

  00194	8b cf		 mov	 ecx, edi
  00196	e8 00 00 00 00	 call	 ??1CCampusMember@@QAE@XZ ; CCampusMember::~CCampusMember

; 149  : 				return;

  0019b	e9 fb 01 00 00	 jmp	 $L206412
$L203231:

; 159  : 	{
; 160  : 		pCampus = new CCampus;

  001a0	6a 14		 push	 20			; 00000014H
  001a2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001a7	83 c4 04	 add	 esp, 4
  001aa	89 44 24 18	 mov	 DWORD PTR $T206236[esp+40], eax
  001ae	85 c0		 test	 eax, eax
  001b0	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 1
  001b8	74 0b		 je	 SHORT $L206237
  001ba	8b c8		 mov	 ecx, eax
  001bc	e8 00 00 00 00	 call	 ??0CCampus@@QAE@XZ	; CCampus::CCampus
  001c1	8b f8		 mov	 edi, eax
  001c3	eb 02		 jmp	 SHORT $L206238
$L206237:
  001c5	33 ff		 xor	 edi, edi
$L206238:
  001c7	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  001cf	89 7c 24 18	 mov	 DWORD PTR _pCampus$[esp+40], edi

; 161  : 		pCampus->SetMaster( idMaster );

  001d3	89 6f 04	 mov	 DWORD PTR [edi+4], ebp

; 162  : 		u_long idCampus = CCampusHelper::GetInstance()->AddCampus( pCampus );

  001d6	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  001db	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001de	57		 push	 edi
  001df	e8 00 00 00 00	 call	 ?AddCampus@CCampusMng@@QAEKPAVCCampus@@@Z ; CCampusMng::AddCampus
  001e4	8b f0		 mov	 esi, eax

; 163  : 		if( idCampus > 0 )

  001e6	85 f6		 test	 esi, esi
  001e8	0f 86 99 01 00
	00		 jbe	 $L203257

; 164  : 		{
; 165  : 			CCampusMember* pMaster = new CCampusMember;

  001ee	6a 08		 push	 8
  001f0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001f5	83 c4 04	 add	 esp, 4
  001f8	89 44 24 10	 mov	 DWORD PTR $T206240[esp+40], eax
  001fc	85 c0		 test	 eax, eax
  001fe	c7 44 24 24 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 2
  00206	74 0b		 je	 SHORT $L206241
  00208	8b c8		 mov	 ecx, eax
  0020a	e8 00 00 00 00	 call	 ??0CCampusMember@@QAE@XZ ; CCampusMember::CCampusMember
  0020f	8b e8		 mov	 ebp, eax
  00211	eb 02		 jmp	 SHORT $L206242
$L206241:
  00213	33 ed		 xor	 ebp, ebp
$L206242:

; 166  : 			CCampusMember* pPupil = new CCampusMember;

  00215	6a 08		 push	 8
  00217	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0021f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00224	83 c4 04	 add	 esp, 4
  00227	89 44 24 10	 mov	 DWORD PTR $T206244[esp+40], eax
  0022b	85 c0		 test	 eax, eax
  0022d	c7 44 24 24 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 3
  00235	74 0d		 je	 SHORT $L206245
  00237	8b c8		 mov	 ecx, eax
  00239	e8 00 00 00 00	 call	 ??0CCampusMember@@QAE@XZ ; CCampusMember::CCampusMember
  0023e	89 44 24 10	 mov	 DWORD PTR $T206243[esp+40], eax
  00242	eb 0c		 jmp	 SHORT $L206246
$L206245:
  00244	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR $T206243[esp+40], 0
  0024c	8b 44 24 10	 mov	 eax, DWORD PTR $T206243[esp+40]
$L206246:

; 167  : 
; 168  : 			pMaster->SetLevel( CAMPUS_MASTER );
; 169  : 			pMaster->SetPlayerId( idMaster );

  00250	8b 4c 24 2c	 mov	 ecx, DWORD PTR _idMaster$[esp+36]
  00254	89 4d 00	 mov	 DWORD PTR [ebp], ecx
  00257	c7 45 04 01 00
	00 00		 mov	 DWORD PTR [ebp+4], 1

; 170  : 			pPupil->SetLevel( CAMPUS_PUPIL );
; 171  : 			pPupil->SetPlayerId( idPupil );
; 172  : 
; 173  : 			if( pCampus->AddMember( pMaster ) && pCampus->AddMember( pPupil )
; 174  : 				&& CCampusHelper::GetInstance()->AddPlayerId2CampusId( idMaster, idCampus )
; 175  : 				&& CCampusHelper::GetInstance()->AddPlayerId2CampusId( idPupil, idCampus ) )

  0025e	55		 push	 ebp
  0025f	8b cf		 mov	 ecx, edi
  00261	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00269	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2
  00270	89 18		 mov	 DWORD PTR [eax], ebx
  00272	e8 00 00 00 00	 call	 ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z ; CCampus::AddMember
  00277	85 c0		 test	 eax, eax
  00279	0f 84 b4 00 00
	00		 je	 $L203268
  0027f	8b 54 24 10	 mov	 edx, DWORD PTR $T206243[esp+40]
  00283	52		 push	 edx
  00284	8b cf		 mov	 ecx, edi
  00286	e8 00 00 00 00	 call	 ?AddMember@CCampus@@QAEHPAVCCampusMember@@@Z ; CCampus::AddMember
  0028b	85 c0		 test	 eax, eax
  0028d	0f 84 a0 00 00
	00		 je	 $L203268
  00293	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00298	8b 7c 24 2c	 mov	 edi, DWORD PTR _idMaster$[esp+36]
  0029c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0029f	56		 push	 esi
  002a0	57		 push	 edi
  002a1	e8 00 00 00 00	 call	 ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ; CCampusMng::AddPlayerId2CampusId
  002a6	84 c0		 test	 al, al
  002a8	0f 84 85 00 00
	00		 je	 $L203268
  002ae	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  002b3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  002b6	56		 push	 esi
  002b7	53		 push	 ebx
  002b8	e8 00 00 00 00	 call	 ?AddPlayerId2CampusId@CCampusMng@@QAE_NKK@Z ; CCampusMng::AddPlayerId2CampusId
  002bd	84 c0		 test	 al, al
  002bf	74 72		 je	 SHORT $L203268

; 176  : 			{
; 177  : 				UpdateCampusId( idMaster, idCampus );

  002c1	8b 6c 24 14	 mov	 ebp, DWORD PTR _this$[esp+40]
  002c5	56		 push	 esi
  002c6	57		 push	 edi
  002c7	8b cd		 mov	 ecx, ebp
  002c9	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 178  : 				UpdateCampusId( idPupil, idCampus );

  002ce	56		 push	 esi
  002cf	53		 push	 ebx
  002d0	8b cd		 mov	 ecx, ebp
  002d2	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 179  : 				InsertCampus( idCampus );

  002d7	56		 push	 esi
  002d8	8b cd		 mov	 ecx, ebp
  002da	e8 00 00 00 00	 call	 ?InsertCampus@CCampusDBCtrl@@AAEXK@Z ; CCampusDBCtrl::InsertCampus

; 180  : 				InsertCampusMember( idCampus, idMaster, CAMPUS_MASTER );

  002df	6a 01		 push	 1
  002e1	57		 push	 edi
  002e2	56		 push	 esi
  002e3	8b cd		 mov	 ecx, ebp
  002e5	e8 00 00 00 00	 call	 ?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z ; CCampusDBCtrl::InsertCampusMember

; 181  : 				InsertCampusMember( idCampus, idPupil, CAMPUS_PUPIL );

  002ea	6a 02		 push	 2
  002ec	53		 push	 ebx
  002ed	56		 push	 esi
  002ee	8b cd		 mov	 ecx, ebp
  002f0	e8 00 00 00 00	 call	 ?InsertCampusMember@CCampusDBCtrl@@AAEXKKH@Z ; CCampusDBCtrl::InsertCampusMember
  002f5	8b 74 24 18	 mov	 esi, DWORD PTR _pCampus$[esp+40]
  002f9	8b fd		 mov	 edi, ebp
$L203269:

; 196  : 			return;
; 197  : 		}
; 198  : 	}
; 199  : 	LogUpdateCampusMember( pCampus->GetCampusId(), idMaster, idPupil, 'T' );

  002fb	8b 6c 24 2c	 mov	 ebp, DWORD PTR _idMaster$[esp+36]
  002ff	8b 06		 mov	 eax, DWORD PTR [esi]
  00301	6a 54		 push	 84			; 00000054H
  00303	53		 push	 ebx
  00304	55		 push	 ebp
  00305	50		 push	 eax
  00306	8b cf		 mov	 ecx, edi
  00308	e8 00 00 00 00	 call	 ?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z ; CCampusDBCtrl::LogUpdateCampusMember

; 200  : 	CDPTrans::GetInstance()->SendAddCampusMember( pCampus->GetCampusId(), idMaster, idPupil );

  0030d	8b 36		 mov	 esi, DWORD PTR [esi]
  0030f	53		 push	 ebx
  00310	55		 push	 ebp
  00311	56		 push	 esi
  00312	e8 00 00 00 00	 call	 ?GetInstance@CDPTrans@@SAPAV1@XZ ; CDPTrans::GetInstance
  00317	8b c8		 mov	 ecx, eax
  00319	e8 00 00 00 00	 call	 ?SendAddCampusMember@CDPTrans@@QAEXKKK@Z ; CDPTrans::SendAddCampusMember
  0031e	5f		 pop	 edi
  0031f	5e		 pop	 esi
  00320	5d		 pop	 ebp
  00321	5b		 pop	 ebx

; 201  : }

  00322	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00326	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0032d	83 c4 18	 add	 esp, 24			; 00000018H
  00330	c2 04 00	 ret	 4
$L203268:

; 182  : 			}
; 183  : 			else
; 184  : 			{
; 185  : 				Error( "AddMember failed!" );

  00333	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@EFJAFBJB@AddMember?5failed?$CB?$AA@
  00338	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  0033d	83 c4 04	 add	 esp, 4

; 186  : 				SAFE_DELETE( pMaster );

  00340	8b cd		 mov	 ecx, ebp
  00342	e8 00 00 00 00	 call	 ??1CCampusMember@@QAE@XZ ; CCampusMember::~CCampusMember
  00347	55		 push	 ebp
  00348	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 187  : 				SAFE_DELETE( pPupil );

  0034d	8b 7c 24 14	 mov	 edi, DWORD PTR $T206243[esp+44]
  00351	83 c4 04	 add	 esp, 4
  00354	8b cf		 mov	 ecx, edi
  00356	e8 00 00 00 00	 call	 ??1CCampusMember@@QAE@XZ ; CCampusMember::~CCampusMember
  0035b	57		 push	 edi
  0035c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00361	83 c4 04	 add	 esp, 4

; 188  : 				CCampusHelper::GetInstance()->RemoveCampus( idCampus );

  00364	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00369	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0036c	56		 push	 esi
  0036d	e8 00 00 00 00	 call	 ?RemoveCampus@CCampusMng@@QAEHK@Z ; CCampusMng::RemoveCampus
  00372	5f		 pop	 edi
  00373	5e		 pop	 esi
  00374	5d		 pop	 ebp
  00375	5b		 pop	 ebx

; 201  : }

  00376	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0037a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00381	83 c4 18	 add	 esp, 24			; 00000018H
  00384	c2 04 00	 ret	 4
$L203257:

; 189  : 				return;
; 190  : 			}
; 191  : 		}
; 192  : 		else
; 193  : 		{
; 194  : 			Error( "new campus failed! campus exist" );

  00387	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@DNIPPDFD@new?5campus?5failed?$CB?5campus?5exist?$AA@
  0038c	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error
  00391	83 c4 04	 add	 esp, 4

; 195  : 			SAFE_DELETE( pCampus );

  00394	8b cf		 mov	 ecx, edi
  00396	e8 00 00 00 00	 call	 ??1CCampus@@QAE@XZ	; CCampus::~CCampus
$L206412:
  0039b	57		 push	 edi
  0039c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003a1	83 c4 04	 add	 esp, 4
$L206257:

; 201  : }

  003a4	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  003a8	5f		 pop	 edi
  003a9	5e		 pop	 esi
  003aa	5d		 pop	 ebp
  003ab	5b		 pop	 ebx
  003ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003b3	83 c4 18	 add	 esp, 24			; 00000018H
  003b6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L206259:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T206224[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L206260:
  0000b	8b 45 f0	 mov	 eax, DWORD PTR $T206236[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L206261:
  00016	8b 45 e8	 mov	 eax, DWORD PTR $T206240[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L206262:
  00021	8b 45 e8	 mov	 eax, DWORD PTR $T206244[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
__ehhandler$?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z:
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T206410
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z ENDP	; CCampusDBCtrl::AddCampusMember
PUBLIC	?SendAllCampus@CCampusDBCtrl@@AAEXK@Z		; CCampusDBCtrl::SendAllCampus
EXTRN	?SendAllCampus@CDPTrans@@QAEXK@Z:NEAR		; CDPTrans::SendAllCampus
; Function compile flags: /Ogty
;	COMDAT ?SendAllCampus@CCampusDBCtrl@@AAEXK@Z
_TEXT	SEGMENT
_dpId$ = 8						; size = 4
?SendAllCampus@CCampusDBCtrl@@AAEXK@Z PROC NEAR		; CCampusDBCtrl::SendAllCampus, COMDAT
; _this$ = ecx

; 274  : 	if( !CCampusHelper::GetInstance()->IsEmpty() )

  00000	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00005	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00008	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 11		 je	 SHORT $L203445

; 275  : 		CDPTrans::GetInstance()->SendAllCampus( dpId );

  0000f	8b 4c 24 04	 mov	 ecx, DWORD PTR _dpId$[esp-4]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?GetInstance@CDPTrans@@SAPAV1@XZ ; CDPTrans::GetInstance
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?SendAllCampus@CDPTrans@@QAEXK@Z ; CDPTrans::SendAllCampus
$L203445:

; 276  : }

  00020	c2 04 00	 ret	 4
?SendAllCampus@CCampusDBCtrl@@AAEXK@Z ENDP		; CCampusDBCtrl::SendAllCampus
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::clear
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L206550
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L206518:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L206520
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L206521
$L206520:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L206521:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L206518
  00029	5b		 pop	 ebx
$L206550:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L206622
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L206590:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L206592
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L206593
$L206592:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L206593:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L206590
  00029	5b		 pop	 ebx
$L206622:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T206672 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T206672[esp], eax
  0000f	74 21		 je	 SHORT $L206660
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L206662:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T206672[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T206672[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L206662
  00031	5e		 pop	 esi
$L206660:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L206715
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L206715:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L206737
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L206737:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L185002

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L185002:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L185003

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L185003:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L185005
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L185005
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L206742
  00047	8b de		 mov	 ebx, esi
$L206742:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L206802
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L206801
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L206801:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L206802:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L185005:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L206833

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L206831
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L206831:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L206833:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::equal_range
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L206929
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L206928:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L206930
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L206931
$L206930:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L206931:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L206928
$L206929:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L207034
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L207033:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L207035
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L207036
$L207035:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L207036:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L207033
$L207034:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L207113
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L207113:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L207139
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L207139:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L207145
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L207145:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L184271

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184271:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L184273

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L184273:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L184274

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L184274:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L207295
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L207295:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L207296
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L207341:
  0006b	76 6d		 jbe	 SHORT $L207340

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L207306
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L207307

; 599  : 		else if (_Grow(_Num))

$L207296:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L207341
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L207288
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L207288:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L207306:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L207307:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L207312
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L207313
$L207312:
  000b7	8b f8		 mov	 edi, eax
$L207313:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L207335
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L207335:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L207340:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L207365
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L207366
$L207365:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L207366:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L184989
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L207369
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L207370
$L207369:
  00029	8b c8		 mov	 ecx, eax
$L207370:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L184989

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L207378
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L207378:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L184989:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L207519
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L207519:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L207520
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L207558:
  00077	76 68		 jbe	 SHORT $L207556

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L207529
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L207530

; 611  : 
; 612  : 		if (_Grow(_Num))

$L207520:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L207558
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L207512
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L207512:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L207529:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L207530:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L207553
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L207553:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L207556:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L207630:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L207630
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T207733 DD	0ffffffffH
	DD	FLAT:$L207633
$T207731 DD	019930520H
	DD	01H
	DD	FLAT:$T207733
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L207633:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T207731
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L207741
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L207741:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L207835
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L207835:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L207921:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L207921
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T208416 DD	0ffffffffH
	DD	FLAT:$L207930
$T208408 DD	019930520H
	DD	01H
	DD	FLAT:$T208416
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T207925 = -80						; size = 28
$T207924 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L203933

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T207925[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T207925[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T207925[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T207925[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T207925[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T207924[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T207924[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T207924[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L203933:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L203941

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L208411
$L203941:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L203943

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L208411
$L203943:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L203945
$L208411:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L203946

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L203946:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L203947

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L203950
$L203947:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L203949

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L203950
$L203949:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L203950:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L203951

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L207926
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L207927
$L207926:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L207927:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L203951:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L208244

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L207928
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L208244
$L207928:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L208244
$L203945:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L203954

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L203955
$L203954:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L203956

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L203956:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L203955:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L203957

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L203960
$L203957:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L203959

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L203960
$L203959:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L203960:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L208244:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L203961

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L203964
  0018e	8b ff		 npad	 2
$L203962:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L203964

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L203965

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L203966

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L203966:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L208414

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L203969
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L208415
$L203969:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L203971

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L203971:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L203964
$L203965:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L203973

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L203973:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L208414

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L203976
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L203976
$L208415:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L208414:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L203962

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L203964
$L203976:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L203978

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L203978:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Rrotate
$L203964:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L203961:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L203979

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L203979:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L208413:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L207930:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T207925[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T208408
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
$T208521 DD	0ffffffffH
	DD	FLAT:$L208421
$T208519 DD	019930520H
	DD	01H
	DD	FLAT:$T208521
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L208421:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T208519
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T208532 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L208864
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L208864

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L208864:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L203809
$L203808:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L208835
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L208866
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L208835
  0006e	8b ff		 npad	 2
$L208849:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L208849
  0007b	eb 1d		 jmp	 SHORT $L208835
$L208866:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L208838
$L208837:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L208838
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L208837
$L208838:
  00098	8b f0		 mov	 esi, eax
$L208835:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T208532[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L203808
$L203809:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T208872 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T208872[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
_TEXT	ENDS
PUBLIC	?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z	; CCampusMng::RemovePlayerId2CampusId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_common\campus.h
;	COMDAT ?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z
_TEXT	SEGMENT
_idPlayer$ = 8						; size = 4
?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z PROC NEAR	; CCampusMng::RemovePlayerId2CampusId, COMDAT
; _this$ = ecx

; 102  : 	void	RemovePlayerId2CampusId( u_long idPlayer )	{	m_mapPid2Cid.erase( idPlayer );	}

  00000	8d 44 24 04	 lea	 eax, DWORD PTR _idPlayer$[esp-4]
  00004	50		 push	 eax
  00005	83 c1 10	 add	 ecx, 16			; 00000010H
  00008	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  0000d	c2 04 00	 ret	 4
?RemovePlayerId2CampusId@CCampusMng@@QAEXK@Z ENDP	; CCampusMng::RemovePlayerId2CampusId
_TEXT	ENDS
PUBLIC	?RemovePlayerId2CampusId@CCampusHelper@@QAEXK@Z	; CCampusHelper::RemovePlayerId2CampusId
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.h
;	COMDAT ?RemovePlayerId2CampusId@CCampusHelper@@QAEXK@Z
_TEXT	SEGMENT
$T208880 = 8						; size = 4
_idPlayer$ = 8						; size = 4
?RemovePlayerId2CampusId@CCampusHelper@@QAEXK@Z PROC NEAR ; CCampusHelper::RemovePlayerId2CampusId, COMDAT
; _this$ = ecx

; 83   : 	void	RemovePlayerId2CampusId( u_long idPlayer )	{	m_pCampusMng->RemovePlayerId2CampusId( idPlayer );	}

  00000	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR _idPlayer$[esp-4]
  00007	8d 54 24 04	 lea	 edx, DWORD PTR $T208880[esp-4]
  0000b	52		 push	 edx
  0000c	83 c1 10	 add	 ecx, 16			; 00000010H
  0000f	89 44 24 08	 mov	 DWORD PTR $T208880[esp], eax
  00013	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase
  00018	c2 04 00	 ret	 4
?RemovePlayerId2CampusId@CCampusHelper@@QAEXK@Z ENDP	; CCampusHelper::RemovePlayerId2CampusId
_TEXT	ENDS
PUBLIC	?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z ; CCampusDBCtrl::RemoveCampusMember
PUBLIC	??_C@_0BI@BMKKJLKC@RemoveCampusMember?5fail?$AA@ ; `string'
EXTRN	?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ:NEAR ; CCampus::GetAllMemberPlayerId
EXTRN	?IsMember@CCampus@@QAEHK@Z:NEAR			; CCampus::IsMember
EXTRN	?SendRemoveCampusMember@CDPTrans@@QAEXKK@Z:NEAR	; CDPTrans::SendRemoveCampusMember
;	COMDAT xdata$x
xdata$x	SEGMENT
$T209077 DD	0ffffffffH
	DD	FLAT:$L208885
$T209073 DD	019930520H
	DD	01H
	DD	FLAT:$T209077
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BI@BMKKJLKC@RemoveCampusMember?5fail?$AA@
CONST	SEGMENT
??_C@_0BI@BMKKJLKC@RemoveCampusMember?5fail?$AA@ DB 'RemoveCampusMember f'
	DB	'ail', 00H					; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\campusdbctrl.cpp
CONST	ENDS
;	COMDAT ?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
_TEXT	SEGMENT
_vecMember$203299 = -28					; size = 16
__$EHRec$ = -12						; size = 12
$T209056 = 8						; size = 4
$T209051 = 8						; size = 4
$T209027 = 8						; size = 4
$T208959 = 8						; size = 4
$T208965 = 8						; size = 4
_ar$ = 8						; size = 4
?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z PROC NEAR ; CCampusDBCtrl::RemoveCampusMember, COMDAT
; _this$ = ecx

; 204  : {

  00000	6a ff		 push	 -1
  00002	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00008	68 00 00 00 00	 push	 __ehhandler$?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z
  0000d	50		 push	 eax

; 205  : 	u_long idCampus, idPlayer;
; 206  : 	ar >> idCampus >> idPlayer;

  0000e	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001c	83 ec 10	 sub	 esp, 16			; 00000010H
  0001f	53		 push	 ebx
  00020	55		 push	 ebp
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	8b f1		 mov	 esi, ecx
  00025	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00028	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  0002b	3b f9		 cmp	 edi, ecx
  0002d	77 07		 ja	 SHORT $L208888
  0002f	8b 2a		 mov	 ebp, DWORD PTR [edx]
  00031	89 78 08	 mov	 DWORD PTR [eax+8], edi
  00034	eb 05		 jmp	 SHORT $L208889
$L208888:
  00036	33 ed		 xor	 ebp, ebp
  00038	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L208889:
  0003b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003e	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00041	3b f9		 cmp	 edi, ecx
  00043	77 07		 ja	 SHORT $L208893
  00045	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00047	89 78 08	 mov	 DWORD PTR [eax+8], edi
  0004a	eb 05		 jmp	 SHORT $L208894
$L208893:
  0004c	33 db		 xor	 ebx, ebx
  0004e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L208894:

; 207  : 
; 208  : 	CCampus* pCampus = CCampusHelper::GetInstance()->GetCampus( idCampus );

  00051	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00056	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00059	55		 push	 ebp
  0005a	e8 00 00 00 00	 call	 ?GetCampus@CCampusMng@@QAEPAVCCampus@@K@Z ; CCampusMng::GetCampus
  0005f	8b f8		 mov	 edi, eax

; 209  : 	if( pCampus && pCampus->IsMember( idPlayer ) )

  00061	85 ff		 test	 edi, edi
  00063	0f 84 99 01 00
	00		 je	 $L203296
  00069	53		 push	 ebx
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?IsMember@CCampus@@QAEHK@Z ; CCampus::IsMember
  00071	85 c0		 test	 eax, eax
  00073	0f 84 89 01 00
	00		 je	 $L203296

; 210  : 	{
; 211  : 		if( pCampus->IsMaster( idPlayer ) )

  00079	3b 5f 04	 cmp	 ebx, DWORD PTR [edi+4]
  0007c	0f 85 cc 00 00
	00		 jne	 $L203297

; 212  : 		{
; 213  : 			vector<u_long> vecMember = pCampus->GetAllMemberPlayerId();

  00082	8d 44 24 10	 lea	 eax, DWORD PTR _vecMember$203299[esp+44]
  00086	50		 push	 eax
  00087	8b cf		 mov	 ecx, edi
  00089	e8 00 00 00 00	 call	 ?GetAllMemberPlayerId@CCampus@@QAE?AV?$vector@KV?$allocator@K@std@@@std@@XZ ; CCampus::GetAllMemberPlayerId

; 214  : 			for( vector<u_long>::iterator it = vecMember.begin(); it != vecMember.end(); ++it )

  0008e	8b 7c 24 14	 mov	 edi, DWORD PTR _vecMember$203299[esp+48]
  00092	3b 7c 24 18	 cmp	 edi, DWORD PTR _vecMember$203299[esp+52]
  00096	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+52], 0
  0009e	74 58		 je	 SHORT $L203423
$L208921:

; 215  : 			{
; 216  : 				CCampusHelper::GetInstance()->RemovePlayerId2CampusId( *it );

  000a0	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000a2	89 4c 24 30	 mov	 DWORD PTR $T208965[esp+40], ecx
  000a6	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000ab	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  000ae	8b 54 24 30	 mov	 edx, DWORD PTR $T208965[esp+40]
  000b2	8d 4c 24 30	 lea	 ecx, DWORD PTR $T208959[esp+40]
  000b6	51		 push	 ecx
  000b7	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  000ba	89 54 24 34	 mov	 DWORD PTR $T208959[esp+44], edx
  000be	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase

; 217  : 				UpdateCampusId( *it, 0 );

  000c3	8b 17		 mov	 edx, DWORD PTR [edi]
  000c5	6a 00		 push	 0
  000c7	52		 push	 edx
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 218  : 				if( *it != idPlayer )

  000cf	8b 07		 mov	 eax, DWORD PTR [edi]
  000d1	3b c3		 cmp	 eax, ebx
  000d3	74 18		 je	 SHORT $L203422

; 219  : 				{
; 220  : 					DeleteCampusMember( *it, CAMPUS_PUPIL );

  000d5	6a 02		 push	 2
  000d7	50		 push	 eax
  000d8	8b ce		 mov	 ecx, esi
  000da	e8 00 00 00 00	 call	 ?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z ; CCampusDBCtrl::DeleteCampusMember

; 221  : 					LogUpdateCampusMember( idCampus, idPlayer, *it, 'F' );

  000df	8b 07		 mov	 eax, DWORD PTR [edi]
  000e1	6a 46		 push	 70			; 00000046H
  000e3	50		 push	 eax
  000e4	53		 push	 ebx
  000e5	55		 push	 ebp
  000e6	8b ce		 mov	 ecx, esi
  000e8	e8 00 00 00 00	 call	 ?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z ; CCampusDBCtrl::LogUpdateCampusMember
$L203422:
  000ed	8b 44 24 18	 mov	 eax, DWORD PTR _vecMember$203299[esp+52]
  000f1	83 c7 04	 add	 edi, 4
  000f4	3b f8		 cmp	 edi, eax
  000f6	75 a8		 jne	 SHORT $L208921
$L203423:

; 222  : 				}
; 223  : 			}
; 224  : 			CCampusHelper::GetInstance()->RemoveCampus( idCampus );

  000f8	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  000fd	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00100	55		 push	 ebp
  00101	e8 00 00 00 00	 call	 ?RemoveCampus@CCampusMng@@QAEHK@Z ; CCampusMng::RemoveCampus

; 225  : 			DeleteCampus( idCampus );

  00106	55		 push	 ebp
  00107	8b ce		 mov	 ecx, esi
  00109	e8 00 00 00 00	 call	 ?DeleteCampus@CCampusDBCtrl@@AAEXK@Z ; CCampusDBCtrl::DeleteCampus

; 226  : 		}

  0010e	8b 44 24 14	 mov	 eax, DWORD PTR _vecMember$203299[esp+48]
  00112	85 c0		 test	 eax, eax
  00114	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0011c	0f 84 bd 00 00
	00		 je	 $L203426
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00128	83 c4 04	 add	 esp, 4

; 240  : 			}
; 241  : 		}
; 242  : 		CDPTrans::GetInstance()->SendRemoveCampusMember( idCampus, idPlayer );

  0012b	53		 push	 ebx
  0012c	55		 push	 ebp
  0012d	e8 00 00 00 00	 call	 ?GetInstance@CDPTrans@@SAPAV1@XZ ; CDPTrans::GetInstance
  00132	8b c8		 mov	 ecx, eax
  00134	e8 00 00 00 00	 call	 ?SendRemoveCampusMember@CDPTrans@@QAEXKK@Z ; CDPTrans::SendRemoveCampusMember
  00139	5f		 pop	 edi
  0013a	5e		 pop	 esi
  0013b	5d		 pop	 ebp
  0013c	5b		 pop	 ebx

; 246  : }

  0013d	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00141	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00148	83 c4 1c	 add	 esp, 28			; 0000001cH
  0014b	c2 04 00	 ret	 4
$L203297:

; 227  : 		else
; 228  : 		{
; 229  : 			CCampusHelper::GetInstance()->RemovePlayerId2CampusId( idPlayer );

  0014e	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  00153	8d 4c 24 30	 lea	 ecx, DWORD PTR $T209027[esp+40]
  00157	51		 push	 ecx
  00158	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0015b	83 c1 10	 add	 ecx, 16			; 00000010H
  0015e	89 5c 24 34	 mov	 DWORD PTR $T209027[esp+44], ebx
  00162	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase

; 230  : 			pCampus->RemoveMember( idPlayer );

  00167	53		 push	 ebx
  00168	8b cf		 mov	 ecx, edi
  0016a	e8 00 00 00 00	 call	 ?RemoveMember@CCampus@@QAEHK@Z ; CCampus::RemoveMember

; 231  : 			UpdateCampusId( idPlayer, 0 );

  0016f	6a 00		 push	 0
  00171	53		 push	 ebx
  00172	8b ce		 mov	 ecx, esi
  00174	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 232  : 			DeleteCampusMember( idPlayer, CAMPUS_PUPIL );

  00179	6a 02		 push	 2
  0017b	53		 push	 ebx
  0017c	8b ce		 mov	 ecx, esi
  0017e	e8 00 00 00 00	 call	 ?DeleteCampusMember@CCampusDBCtrl@@AAEXKH@Z ; CCampusDBCtrl::DeleteCampusMember

; 233  : 			LogUpdateCampusMember( idCampus, pCampus->GetMaster(), idPlayer, 'F' );

  00183	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00186	6a 46		 push	 70			; 00000046H
  00188	53		 push	 ebx
  00189	52		 push	 edx
  0018a	55		 push	 ebp
  0018b	8b ce		 mov	 ecx, esi
  0018d	e8 00 00 00 00	 call	 ?LogUpdateCampusMember@CCampusDBCtrl@@AAEXKKKD@Z ; CCampusDBCtrl::LogUpdateCampusMember

; 234  : 			if( pCampus->GetMemberSize() < 2 )

  00192	83 7f 10 02	 cmp	 DWORD PTR [edi+16], 2
  00196	7d 47		 jge	 SHORT $L203426

; 235  : 			{
; 236  : 				CCampusHelper::GetInstance()->RemovePlayerId2CampusId( pCampus->GetMaster() );

  00198	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0019b	89 44 24 30	 mov	 DWORD PTR $T209051[esp+40], eax
  0019f	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  001a4	8b 4c 24 30	 mov	 ecx, DWORD PTR $T209051[esp+40]
  001a8	89 4c 24 30	 mov	 DWORD PTR $T209056[esp+40], ecx
  001ac	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001af	8d 54 24 30	 lea	 edx, DWORD PTR $T209056[esp+40]
  001b3	52		 push	 edx
  001b4	83 c1 10	 add	 ecx, 16			; 00000010H
  001b7	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::erase

; 237  : 				UpdateCampusId( pCampus->GetMaster(), 0 );

  001bc	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001bf	6a 00		 push	 0
  001c1	50		 push	 eax
  001c2	8b ce		 mov	 ecx, esi
  001c4	e8 00 00 00 00	 call	 ?UpdateCampusId@CCampusDBCtrl@@AAEXKK@Z ; CCampusDBCtrl::UpdateCampusId

; 238  : 				CCampusHelper::GetInstance()->RemoveCampus( idCampus );

  001c9	e8 00 00 00 00	 call	 ?GetInstance@CCampusHelper@@SAPAV1@XZ ; CCampusHelper::GetInstance
  001ce	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001d1	55		 push	 ebp
  001d2	e8 00 00 00 00	 call	 ?RemoveCampus@CCampusMng@@QAEHK@Z ; CCampusMng::RemoveCampus

; 239  : 				DeleteCampus( idCampus );

  001d7	55		 push	 ebp
  001d8	8b ce		 mov	 ecx, esi
  001da	e8 00 00 00 00	 call	 ?DeleteCampus@CCampusDBCtrl@@AAEXK@Z ; CCampusDBCtrl::DeleteCampus
$L203426:

; 240  : 			}
; 241  : 		}
; 242  : 		CDPTrans::GetInstance()->SendRemoveCampusMember( idCampus, idPlayer );

  001df	53		 push	 ebx
  001e0	55		 push	 ebp
  001e1	e8 00 00 00 00	 call	 ?GetInstance@CDPTrans@@SAPAV1@XZ ; CDPTrans::GetInstance
  001e6	8b c8		 mov	 ecx, eax
  001e8	e8 00 00 00 00	 call	 ?SendRemoveCampusMember@CDPTrans@@QAEXKK@Z ; CDPTrans::SendRemoveCampusMember
  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	5d		 pop	 ebp
  001f0	5b		 pop	 ebx

; 246  : }

  001f1	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  001f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001fc	83 c4 1c	 add	 esp, 28			; 0000001cH
  001ff	c2 04 00	 ret	 4
$L203296:

; 243  : 	}
; 244  : 	else
; 245  : 		Error( "RemoveCampusMember fail" );

  00202	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@BMKKJLKC@RemoveCampusMember?5fail?$AA@
  00207	e8 00 00 00 00	 call	 ?Error@@YAPBDPBDZZ	; Error

; 246  : }

  0020c	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  00210	83 c4 04	 add	 esp, 4
  00213	5f		 pop	 edi
  00214	5e		 pop	 esi
  00215	5d		 pop	 ebp
  00216	5b		 pop	 ebx
  00217	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0021e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00221	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L208885:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _vecMember$203299[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
__ehhandler$?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209073
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z ENDP	; CCampusDBCtrl::RemoveCampusMember
EXTRN	??0CAr@@QAE@PAXI@Z:NEAR				; CAr::CAr
EXTRN	??1CAr@@QAE@XZ:NEAR				; CAr::~CAr
;	COMDAT xdata$x
xdata$x	SEGMENT
$T209091 DD	0ffffffffH
	DD	FLAT:$L209083
$T209087 DD	019930520H
	DD	01H
	DD	FLAT:$T209091
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z
_TEXT	SEGMENT
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pov$ = 8						; size = 4
_dwCompletionKey$ = 12					; size = 4
?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z PROC NEAR ; CCampusDBCtrl::Handler, COMDAT
; _this$ = ecx

; 30   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 18 40 00 00	 mov	 eax, 16408		; 00004018H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	8b b4 24 2c 40
	00 00		 mov	 esi, DWORD PTR _pov$[esp+16420]
  0002e	57		 push	 edi
  0002f	89 84 24 1c 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16428], eax

; 31   : 	CAr ar( pov->lpBuf, pov->uBufSize );

  00036	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00039	8b f9		 mov	 edi, ecx
  0003b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00044	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 32   : 	
; 33   : 	switch( pov->nQueryMode )

  00049	8b 76 14	 mov	 esi, DWORD PTR [esi+20]
  0004c	83 fe 04	 cmp	 esi, 4
  0004f	c7 84 24 28 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16436], 0
  0005a	77 50		 ja	 SHORT $L203154
  0005c	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $L209090[esi*4]
$L203157:

; 34   : 	{
; 35   : 	case CAMPUS_LOAD:
; 36   : 		CreateLogQuery();

  00063	8b cf		 mov	 ecx, edi
  00065	e8 00 00 00 00	 call	 ?CreateLogQuery@CCampusDBCtrl@@AAEXXZ ; CCampusDBCtrl::CreateLogQuery

; 37   : 		LoadAllCampus();

  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?LoadAllCampus@CCampusDBCtrl@@AAEXXZ ; CCampusDBCtrl::LoadAllCampus

; 38   : 		break;

  00071	eb 39		 jmp	 SHORT $L203154
$L203158:

; 39   : 
; 40   : 	case CAMPUS_SEND:
; 41   : 		SendAllCampus( dwCompletionKey );

  00073	8b 94 24 34 40
	00 00		 mov	 edx, DWORD PTR _dwCompletionKey$[esp+16424]
  0007a	52		 push	 edx
  0007b	8b cf		 mov	 ecx, edi
  0007d	e8 00 00 00 00	 call	 ?SendAllCampus@CCampusDBCtrl@@AAEXK@Z ; CCampusDBCtrl::SendAllCampus

; 42   : 		break;

  00082	eb 28		 jmp	 SHORT $L203154
$L203159:

; 43   : 
; 44   : 	case CAMPUS_ADD_MEMBER:
; 45   : 		AddCampusMember( ar );

  00084	8d 44 24 08	 lea	 eax, DWORD PTR _ar$[esp+16428]
  00088	50		 push	 eax
  00089	8b cf		 mov	 ecx, edi
  0008b	e8 00 00 00 00	 call	 ?AddCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z ; CCampusDBCtrl::AddCampusMember

; 46   : 		break;

  00090	eb 1a		 jmp	 SHORT $L203154
$L203160:

; 47   : 
; 48   : 	case CAMPUS_REMOVE_MEMBER:
; 49   : 		RemoveCampusMember( ar );

  00092	8d 4c 24 08	 lea	 ecx, DWORD PTR _ar$[esp+16428]
  00096	51		 push	 ecx
  00097	8b cf		 mov	 ecx, edi
  00099	e8 00 00 00 00	 call	 ?RemoveCampusMember@CCampusDBCtrl@@AAEXAAVCAr@@@Z ; CCampusDBCtrl::RemoveCampusMember

; 50   : 		break;

  0009e	eb 0c		 jmp	 SHORT $L203154
$L203161:

; 51   : 
; 52   : 	case CAMPUS_UPDATE_POINT:
; 53   : 		UpdateCampusPoint( ar );

  000a0	8d 54 24 08	 lea	 edx, DWORD PTR _ar$[esp+16428]
  000a4	52		 push	 edx
  000a5	8b cf		 mov	 ecx, edi
  000a7	e8 00 00 00 00	 call	 ?UpdateCampusPoint@CCampusDBCtrl@@AAEXAAVCAr@@@Z ; CCampusDBCtrl::UpdateCampusPoint
$L203154:

; 54   : 		break;
; 55   : 	}
; 56   : }

  000ac	8d 4c 24 08	 lea	 ecx, DWORD PTR _ar$[esp+16428]
  000b0	c7 84 24 28 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16436], -1
  000bb	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000c0	8b 8c 24 20 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16428]
  000c7	5f		 pop	 edi
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000d6	5e		 pop	 esi
  000d7	33 cc		 xor	 ecx, esp
  000d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000de	81 c4 24 40 00
	00		 add	 esp, 16420		; 00004024H
  000e4	c2 08 00	 ret	 8
  000e7	90		 npad	 1
$L209090:
  000e8	00 00 00 00	 DD	 $L203157
  000ec	00 00 00 00	 DD	 $L203158
  000f0	00 00 00 00	 DD	 $L203159
  000f4	00 00 00 00	 DD	 $L203160
  000f8	00 00 00 00	 DD	 $L203161
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L209083:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209087
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Handler@CCampusDBCtrl@@UAEXPAUtagDB_OVERLAPPED_PLUS@@K@Z ENDP ; CCampusDBCtrl::Handler
; Function compile flags: /Ogty
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?sCH@?1??GetInstance@CCampusHelper@@SAPAV2@XZ@4V2@A
  00005	e9 00 00 00 00	 jmp	 ??1CCampusHelper@@QAE@XZ ; CCampusHelper::~CCampusHelper
_$E2	ENDP
text$yd	ENDS
END
