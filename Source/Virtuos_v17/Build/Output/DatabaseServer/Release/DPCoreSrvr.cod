; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	.\DPCoreSrvr.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0DB@BEDINLHB@RANKING?4RANKING_DBF?4dbo?4RANKING_@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CN@HNMEKJGP@CDbManager?3?3UpdateGuildRanking?$LP?$KB@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LJMBJH@m_dwLogo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09NKFNPOPN@m_szGuild?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08HDDJDJAG@m_szName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06LJIKPPDH@m_nWin?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07IGCLHJHO@m_nLose?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BBOGLCAO@m_nSurrender?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EKKIFFNL@m_AvgLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@EMHJODPK@m_nWinPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@CJGBCKAI@MAKE_RANKING_STR?5?8?$CFd?8?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@IPKIBOKB@CDbManager?3?3RankingDBUpdate?5?$CI?$CFs?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0_GUILDQUEST@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHandler@CDPCoreSrvr@@AAEP81@AEXAAVCAr@@PAEK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDPCoreSrvr@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDPCoreSrvr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDPCoreSrvr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddConnection@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveConnection@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendPartyName@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendTagResult@CDPCoreSrvr@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCGuildMember@@@@QAEPAVCGuildMember@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCGuildMember@@@@QAEHPAVCGuildMember@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildMember@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildMember@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCGuild@@@@QAEPAVCGuild@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCGuild@@@@QAEHPAVCGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuild@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuild@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAU_PlayerData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAU_PlayerData@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@QAE@ABKABQ8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCGuildWar@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCGuildWar@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCGuildMember@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCGuild@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPAccountClient@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPAccountClient@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KU_Friend@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKU_Friend@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXViterator@12@ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAXV?$allocator@PAX@std@@@std@@IAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@QAE@PAU012@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09PKKCPLIP@bad?5alloc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Send@CDPMng@@QAEHPAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CDPCoreSrvr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CTimeSpan@ATL@@QAE@JHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCTime@ATL@@QBE?AV01@VCTimeSpan@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsStoring@CAr@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Leave@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Enter@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTickCount@CTime@ATL@@SG?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMclCritSec@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMclCritSec@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCMclCritSec@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMclCritSec@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?OnRemoveConnection@CDPCoreSrvr@@QAEXK@Z	; CDPCoreSrvr::OnRemoveConnection
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
;	COMDAT ?OnRemoveConnection@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT
_dpid$ = 8						; size = 4
?OnRemoveConnection@CDPCoreSrvr@@QAEXK@Z PROC NEAR	; CDPCoreSrvr::OnRemoveConnection, COMDAT
; _this$ = ecx

; 111  : 
; 112  : }

  00000	c2 04 00	 ret	 4
?OnRemoveConnection@CDPCoreSrvr@@QAEXK@Z ENDP		; CDPCoreSrvr::OnRemoveConnection
_TEXT	ENDS
PUBLIC	?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnCreateGuild
EXTRN	?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ:NEAR ; CDbManager::AllocRequest
EXTRN	?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z:NEAR ; CDbManager::MakeRequest
EXTRN	?g_DbManager@@3AAVCDbManager@@A:DWORD		; g_DbManager
EXTRN	__imp__PostQueuedCompletionStatus@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnCreateGuild, COMDAT
; _this$ = ecx

; 129  : 	TRACE( "OnCreateGuild\n" );
; 130  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 131  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 132  : 	lpDbOverlappedPlus->nQueryMode	= CREATE_GUILD;
; 133  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 13 00
	00 00		 mov	 DWORD PTR [esi+20], 19	; 00000013H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 134  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnCreateGuild
_TEXT	ENDS
PUBLIC	?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnDestroyGuild
; Function compile flags: /Ogty
;	COMDAT ?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnDestroyGuild, COMDAT
; _this$ = ecx

; 138  : 	TRACE( "OnDestroyGuild\n" );
; 139  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 140  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 141  : 	lpDbOverlappedPlus->nQueryMode	= DESTROY_GUILD;
; 142  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 14 00
	00 00		 mov	 DWORD PTR [esi+20], 20	; 00000014H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 143  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnDestroyGuild
_TEXT	ENDS
PUBLIC	?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAddGuildMember
; Function compile flags: /Ogty
;	COMDAT ?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnAddGuildMember, COMDAT
; _this$ = ecx

; 147  : 	TRACE( "OnAddGuildMember\n" );
; 148  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 149  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 150  : 	lpDbOverlappedPlus->nQueryMode	= ADD_GUILD_MEMBER;
; 151  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 15 00
	00 00		 mov	 DWORD PTR [esi+20], 21	; 00000015H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 152  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnAddGuildMember
_TEXT	ENDS
PUBLIC	?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnRemoveGuildMember
; Function compile flags: /Ogty
;	COMDAT ?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnRemoveGuildMember, COMDAT
; _this$ = ecx

; 156  : 	TRACE( "OnRemoveGuildMember\n" );
; 157  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 158  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 159  : 	lpDbOverlappedPlus->nQueryMode	= REMOVE_GUILD_MEMBER;
; 160  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 16 00
	00 00		 mov	 DWORD PTR [esi+20], 22	; 00000016H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 161  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP ; CDPCoreSrvr::OnRemoveGuildMember
_TEXT	ENDS
PUBLIC	?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildMemberLv
; Function compile flags: /Ogty
;	COMDAT ?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnGuildMemberLv, COMDAT
; _this$ = ecx

; 165  : 	TRACE( "OnGuildMemberLv\n" );
; 166  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 167  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 168  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_MEMBER_LEVEL;
; 169  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 1a 00
	00 00		 mov	 DWORD PTR [esi+20], 26	; 0000001aH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 170  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildMemberLv
_TEXT	ENDS
PUBLIC	?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnGuildClass
; Function compile flags: /Ogty
;	COMDAT ?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnGuildClass, COMDAT
; _this$ = ecx

; 174  : 	TRACE( "OnGuildClass\n" );
; 175  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 176  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 177  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_CLASS;
; 178  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 36 00
	00 00		 mov	 DWORD PTR [esi+20], 54	; 00000036H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 179  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildClass
_TEXT	ENDS
PUBLIC	?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildNickName
; Function compile flags: /Ogty
;	COMDAT ?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnGuildNickName, COMDAT
; _this$ = ecx

; 182  : 	TRACE( "OnGuildNickName\n" );
; 183  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 184  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 185  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_NICKNAME;
; 186  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 37 00
	00 00		 mov	 DWORD PTR [esi+20], 55	; 00000037H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 187  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildNickName
_TEXT	ENDS
PUBLIC	?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnChgMaster
; Function compile flags: /Ogty
;	COMDAT ?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnChgMaster, COMDAT
; _this$ = ecx

; 190  : 	TRACE( "OnChgMaster\n" );
; 191  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 192  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 193  : 	lpDbOverlappedPlus->nQueryMode	= QM_UPDATEGUILDMASTER;
; 194  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 4d 00
	00 00		 mov	 DWORD PTR [esi+20], 77	; 0000004dH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 195  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnChgMaster
_TEXT	ENDS
PUBLIC	?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnGuildLogo
; Function compile flags: /Ogty
;	COMDAT ?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnGuildLogo, COMDAT
; _this$ = ecx

; 198  : 	TRACE( "D CDPCoreSrvr::OnGuildLogo\n" );
; 199  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 200  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 201  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_LOGO;
; 202  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 17 00
	00 00		 mov	 DWORD PTR [esi+20], 23	; 00000017H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 203  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildLogo
_TEXT	ENDS
PUBLIC	?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnGuildNotice
; Function compile flags: /Ogty
;	COMDAT ?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnGuildNotice, COMDAT
; _this$ = ecx

; 208  : 	TRACE( "D CDPCoreSrvr::OnGuildNotice\n" );
; 209  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 210  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 211  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_NOTICE;
; 212  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 19 00
	00 00		 mov	 DWORD PTR [esi+20], 25	; 00000019H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 213  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildNotice
_TEXT	ENDS
PUBLIC	?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnAddVote
; Function compile flags: /Ogty
;	COMDAT ?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnAddVote, COMDAT
; _this$ = ecx

; 218  : 	TRACE( "recv PACKETTYPE_CD_ADDVOTE\n" );
; 219  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 220  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 221  : 	lpDbOverlappedPlus->nQueryMode	= ADD_GUILD_VOTE;
; 222  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 23 00
	00 00		 mov	 DWORD PTR [esi+20], 35	; 00000023H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 223  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnAddVote
_TEXT	ENDS
PUBLIC	?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnRemoveVote
; Function compile flags: /Ogty
;	COMDAT ?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnRemoveVote, COMDAT
; _this$ = ecx

; 227  : 	TRACE( "recv PACKETTYPE_CD_REMOVEVOTE\n" );
; 228  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 229  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 230  : 	lpDbOverlappedPlus->nQueryMode	= REMOVE_GUILD_VOTE;
; 231  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 24 00
	00 00		 mov	 DWORD PTR [esi+20], 36	; 00000024H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 232  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnRemoveVote
_TEXT	ENDS
PUBLIC	?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnCloseVote
; Function compile flags: /Ogty
;	COMDAT ?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnCloseVote, COMDAT
; _this$ = ecx

; 236  : 	TRACE( "recv PACKETTYPE_CD_CLOSEVOTE\n" );
; 237  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 238  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 239  : 	lpDbOverlappedPlus->nQueryMode	= CLOSE_GUILD_VOTE;
; 240  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 25 00
	00 00		 mov	 DWORD PTR [esi+20], 37	; 00000025H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 241  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnCloseVote
_TEXT	ENDS
PUBLIC	?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnCastVote
; Function compile flags: /Ogty
;	COMDAT ?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnCastVote, COMDAT
; _this$ = ecx

; 245  : 	TRACE( "recv PACKETTYPE_CD_CASTVOTE\n" );
; 246  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 247  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 248  : 	lpDbOverlappedPlus->nQueryMode	= CAST_GUILD_VOTE;
; 249  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 26 00
	00 00		 mov	 DWORD PTR [esi+20], 38	; 00000026H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 250  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnCastVote
_TEXT	ENDS
PUBLIC	?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildAuthority
; Function compile flags: /Ogty
;	COMDAT ?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnGuildAuthority, COMDAT
; _this$ = ecx

; 263  : 	TRACE( "D CDPCoreSrvr::OnGuildAuthority\n" );
; 264  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 265  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 266  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_AUTHORITY;
; 267  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 1b 00
	00 00		 mov	 DWORD PTR [esi+20], 27	; 0000001bH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 268  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildAuthority
_TEXT	ENDS
PUBLIC	?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnGuildPenya
; Function compile flags: /Ogty
;	COMDAT ?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnGuildPenya, COMDAT
; _this$ = ecx

; 272  : 	TRACE( "D CDPCoreSrvr::OnGuildPenya\n" );
; 273  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 274  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 275  : 	lpDbOverlappedPlus->nQueryMode	= UPDATE_GUILD_PENYA;
; 276  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 1c 00
	00 00		 mov	 DWORD PTR [esi+20], 28	; 0000001cH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 277  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildPenya
_TEXT	ENDS
PUBLIC	?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnGuildSetName
; Function compile flags: /Ogty
;	COMDAT ?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnGuildSetName, COMDAT
; _this$ = ecx

; 281  : 	TRACE( "D CDPCoreSrvr::OnGuildSetName\n" );
; 282  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 283  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 284  : 	lpDbOverlappedPlus->nQueryMode	= GUILD_SETNAME;
; 285  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 1d 00
	00 00		 mov	 DWORD PTR [esi+20], 29	; 0000001dH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 286  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnGuildSetName
_TEXT	ENDS
PUBLIC	?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnAcptWar
; Function compile flags: /Ogty
;	COMDAT ?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnAcptWar, COMDAT
; _this$ = ecx

; 291  : 	TRACE( "recv PACKETTYPE_ACPT_GUILD_WAR\n" );
; 292  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 293  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 294  : 	lpDbOverlappedPlus->nQueryMode	= ACPT_GUILD_WAR;
; 295  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 29 00
	00 00		 mov	 DWORD PTR [esi+20], 41	; 00000029H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 296  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnAcptWar
_TEXT	ENDS
PUBLIC	?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnWarEnd
; Function compile flags: /Ogty
;	COMDAT ?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnWarEnd, COMDAT
; _this$ = ecx

; 300  : 	TRACE( "recv PACKETTYPE_WAR_END\n" );
; 301  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 302  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 303  : 	lpDbOverlappedPlus->nQueryMode	= WAR_END;
; 304  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 2a 00
	00 00		 mov	 DWORD PTR [esi+20], 42	; 0000002aH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 305  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnWarEnd
_TEXT	ENDS
PUBLIC	?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnSurrender
; Function compile flags: /Ogty
;	COMDAT ?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnSurrender, COMDAT
; _this$ = ecx

; 309  : 	TRACE( "recv PACKETTYPE_SURRENDER\n" );
; 310  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 311  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 312  : 	lpDbOverlappedPlus->nQueryMode	= SURRENDER;
; 313  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 2b 00
	00 00		 mov	 DWORD PTR [esi+20], 43	; 0000002bH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 314  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnSurrender
_TEXT	ENDS
PUBLIC	?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnWarDead
; Function compile flags: /Ogty
;	COMDAT ?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnWarDead, COMDAT
; _this$ = ecx

; 318  : 	TRACE( "recv PACKETTYPE_WAR_DEAD\n" );
; 319  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 320  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 321  : 	lpDbOverlappedPlus->nQueryMode	= WAR_DEAD;
; 322  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 2c 00
	00 00		 mov	 DWORD PTR [esi+20], 44	; 0000002cH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 323  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnWarDead
_TEXT	ENDS
PUBLIC	?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnWarMasterAbsent
; Function compile flags: /Ogty
;	COMDAT ?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnWarMasterAbsent, COMDAT
; _this$ = ecx

; 327  : 	TRACE( "recv PACKETTYPE_WAR_MASTER_ABSENT\n" );
; 328  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 329  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 330  : 	lpDbOverlappedPlus->nQueryMode	= WAR_MASTER_ABSENT;
; 331  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 2d 00
	00 00		 mov	 DWORD PTR [esi+20], 45	; 0000002dH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 332  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnWarMasterAbsent
_TEXT	ENDS
PUBLIC	?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnAddPartyName
; Function compile flags: /Ogty
;	COMDAT ?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnAddPartyName, COMDAT
; _this$ = ecx

; 336  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 337  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 338  : 	lpDbOverlappedPlus->nQueryMode	= ADD_PARTYNAME;
; 339  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 2f 00
	00 00		 mov	 DWORD PTR [esi+20], 47	; 0000002fH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 340  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnAddPartyName
_TEXT	ENDS
PUBLIC	?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z		; CDPCoreSrvr::OnTag
; Function compile flags: /Ogty
;	COMDAT ?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnTag, COMDAT
; _this$ = ecx

; 345  : 	TRACE("CDPCoreSrvr::OnTag\n");
; 346  : 
; 347  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 348  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 349  : 	lpDbOverlappedPlus->nQueryMode	= INSERT_TAG;
; 350  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 34 00
	00 00		 mov	 DWORD PTR [esi+20], 52	; 00000034H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 351  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnTag
_TEXT	ENDS
PUBLIC	?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnWanted
; Function compile flags: /Ogty
;	COMDAT ?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnWanted, COMDAT
; _this$ = ecx

; 386  : 	TRACE( "recv PACKETTYPE_CD_CASTVOTE\n" );
; 387  : 
; 388  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 389  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 390  : 	lpDbOverlappedPlus->nQueryMode	= WANTED_OP;
; 391  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPGuild, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 3e 00
	00 00		 mov	 DWORD PTR [esi+20], 62	; 0000003eH
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 54 03 00
	00		 mov	 eax, DWORD PTR [edx+852]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 392  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP		; CDPCoreSrvr::OnWanted
_TEXT	ENDS
PUBLIC	?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnAddMessenger
; Function compile flags: /Ogty
;	COMDAT ?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnAddMessenger, COMDAT
; _this$ = ecx

; 444  : 	LPDB_OVERLAPPED_PLUS pov	= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 445  : 	g_DbManager.MakeRequest( pov, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 446  : 	pov->nQueryMode	= QM_ADD_MESSENGER;
; 447  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &pov->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 56 00
	00 00		 mov	 DWORD PTR [esi+20], 86	; 00000056H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 448  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnAddMessenger
_TEXT	ENDS
PUBLIC	?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnDeleteMessenger
; Function compile flags: /Ogty
;	COMDAT ?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnDeleteMessenger, COMDAT
; _this$ = ecx

; 452  : 	LPDB_OVERLAPPED_PLUS pov	= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 453  : 	g_DbManager.MakeRequest( pov, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 454  : 	pov->nQueryMode	= QM_DELETE_MESSENGER;
; 455  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &pov->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 57 00
	00 00		 mov	 DWORD PTR [esi+20], 87	; 00000057H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 456  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnDeleteMessenger
_TEXT	ENDS
PUBLIC	?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnUpdateMessenger
; Function compile flags: /Ogty
;	COMDAT ?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR ; CDPCoreSrvr::OnUpdateMessenger, COMDAT
; _this$ = ecx

; 460  : 	LPDB_OVERLAPPED_PLUS pov	= g_DbManager.AllocRequest();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00006	56		 push	 esi
  00007	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 461  : 	g_DbManager.MakeRequest( pov, lpBuf, uBufSize );

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _lpBuf$[esp]
  00010	8b f0		 mov	 esi, eax
  00012	8b 44 24 10	 mov	 eax, DWORD PTR _uBufSize$[esp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 462  : 	pov->nQueryMode	= QM_UPDATE_MESSENGER;
; 463  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &pov->Overlapped );

  00024	56		 push	 esi
  00025	c7 46 14 58 00
	00 00		 mov	 DWORD PTR [esi+20], 88	; 00000058H
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00032	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00038	6a 00		 push	 0
  0003a	6a 01		 push	 1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00043	5e		 pop	 esi

; 464  : }

  00044	c2 0c 00	 ret	 12			; 0000000cH
?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnUpdateMessenger
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::size
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@QAE@ABKABQ8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@Z ; std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@QAE@ABKABQ8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@QAE@ABKABQ8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@Z PROC NEAR ; std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@QAE@ABKABQ8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@Z ENDP ; std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)>
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L195977

; 517  : 		}

  00007	c3		 ret	 0
$L195977:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00012	f7 e9		 imul	 ecx
  00014	03 d1		 add	 edx, ecx
  00016	c1 fa 04	 sar	 edx, 4
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx

; 517  : 		}

  00020	c3		 ret	 0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@SAABKABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ENDP ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L196003

; 459  : 		}

  00007	c3		 ret	 0
$L196003:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00008	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00012	f7 e9		 imul	 ecx
  00014	03 d1		 add	 edx, ecx
  00016	c1 fa 04	 sar	 edx, 4
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx

; 459  : 		}

  00020	c3		 ret	 0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Color
; Function compile flags: /Ogty
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV012@H@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 2d	 add	 eax, 45			; 0000002dH

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L195073
  0000d	8d 49 00	 npad	 3
$L195072:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L195072
$L195073:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >::max_size
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L195199
  0000e	8b ff		 npad	 2
$L195198:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L195198
$L195199:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L195203
  0000d	8d 49 00	 npad	 3
$L195202:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L195202
$L195203:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0>
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L195235

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L196157

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L196145
  0001d	8d 49 00	 npad	 3
$L196144:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L196144
$L196145:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L196157:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L195239
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L195238:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L195239

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L195238
$L195239:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L195235:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC NEAR ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 35   : 	}

  00010	c3		 ret	 0
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node><std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L196176
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L196176:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC NEAR ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L196187:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L196187
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@E@Z				; CAr::operator<<
EXTRN	?CheckBuf@CAr@@QAEXI@Z:NEAR			; CAr::CheckBuf
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??6CAr@@QAEAAV0@E@Z
_TEXT	SEGMENT
_by$ = 8						; size = 1
??6CAr@@QAEAAV0@E@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 107  : 	{ CheckBuf( sizeof(BYTE) );

  00000	56		 push	 esi
  00001	6a 01		 push	 1
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 108  : 		*(UNALIGNED BYTE*)m_lpBufCur = by; m_lpBufCur += sizeof(BYTE); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8a 4c 24 08	 mov	 cl, BYTE PTR _by$[esp]
  00011	88 08		 mov	 BYTE PTR [eax], cl
  00013	ff 46 08	 inc	 DWORD PTR [esi+8]
  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@E@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@J@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??6CAr@@QAEAAV0@J@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 113  : 	{ CheckBuf( sizeof(LONG) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 114  : 		*(UNALIGNED LONG*)m_lpBufCur = l; m_lpBufCur += sizeof(LONG); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _l$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@J@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@K@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??6CAr@@QAEAAV0@K@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 116  : 	{ CheckBuf( sizeof(DWORD) );

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf

; 117  : 		*(UNALIGNED DWORD*)m_lpBufCur = dw; m_lpBufCur += sizeof(DWORD); return *this; }

  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _dw$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@K@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??5CAr@@QAEAAV0@AAK@Z				; CAr::operator>>
; Function compile flags: /Ogty
;	COMDAT ??5CAr@@QAEAAV0@AAK@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
??5CAr@@QAEAAV0@AAK@Z PROC NEAR				; CAr::operator>>, COMDAT
; _this$ = ecx

; 146  : 	{	CAR_SAFE_READ( DWORD, dw );	}

  00000	8b c1		 mov	 eax, ecx
  00002	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00005	56		 push	 esi
  00006	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00009	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000c	3b d6		 cmp	 edx, esi
  0000e	5e		 pop	 esi
  0000f	77 0f		 ja	 SHORT $L162868
  00011	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00013	8b 54 24 04	 mov	 edx, DWORD PTR _dw$[esp-4]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	83 40 08 04	 add	 DWORD PTR [eax+8], 4
  0001d	c2 04 00	 ret	 4
$L162868:
  00020	8b 4c 24 04	 mov	 ecx, DWORD PTR _dw$[esp-4]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0002a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	c2 04 00	 ret	 4
??5CAr@@QAEAAV0@AAK@Z ENDP				; CAr::operator>>
_TEXT	ENDS
PUBLIC	?Send@CDPMng@@QAEHPAXKK@Z			; CDPMng::Send
EXTRN	?Send@CDPSock@@QAEHPADKK@Z:NEAR			; CDPSock::Send
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
;	COMDAT ?Send@CDPMng@@QAEHPAXKK@Z
_TEXT	SEGMENT
_lpData$ = 8						; size = 4
_dwDataSize$ = 12					; size = 4
_dpidTo$ = 16						; size = 4
?Send@CDPMng@@QAEHPAXKK@Z PROC NEAR			; CDPMng::Send, COMDAT
; _this$ = ecx

; 171  : 	if( !m_pDPSock )

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 05		 jne	 SHORT $L165681

; 172  : 		return FALSE;

  00007	33 c0		 xor	 eax, eax

; 174  : }

  00009	c2 0c 00	 ret	 12			; 0000000cH
$L165681:

; 173  : 	return m_pDPSock->Send( (char*)lpData, dwDataSize, dpidTo );

  0000c	e9 00 00 00 00	 jmp	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
?Send@CDPMng@@QAEHPAXKK@Z ENDP				; CDPMng::Send
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L196207
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L196207:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L196217
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L196217:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L196227
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L196228
$L196227:
  00011	8b d0		 mov	 edx, eax
$L196228:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L185560
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L196235
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L196235:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L185560
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L185560:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z ; CDPCoreSrvr::SendAddVoteResult
EXTRN	??6@YAAAVCAr@@AAV0@AAUVOTE_INSERTED_INFO@@@Z:NEAR ; operator<<
EXTRN	__except_list:DWORD
EXTRN	__chkstk:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CAr@@QAE@PAXI@Z:NEAR				; CAr::CAr
EXTRN	??1CAr@@QAE@XZ:NEAR				; CAr::~CAr
EXTRN	?GetBuffer@CAr@@QAEPAEPAH@Z:NEAR		; CAr::GetBuffer
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196269 DD	0ffffffffH
	DD	FLAT:$L196248
$T196262 DD	019930520H
	DD	01H
	DD	FLAT:$T196269
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_info$ = 8						; size = 4
?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z PROC NEAR ; CDPCoreSrvr::SendAddVoteResult, COMDAT
; _this$ = ecx

; 254  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 34 40
	00 00		 mov	 edi, DWORD PTR _info$[esp+16428]

; 255  : 	BEFORESEND( ar, PACKETTYPE_DC_ADDVOTERESULT );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 40 b0 00
	f0		 mov	 DWORD PTR [eax], -268390336 ; f000b040H
  00065	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 256  : 	ar << info;

  0006a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0006e	57		 push	 edi
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??6@YAAAVCAr@@AAV0@AAUVOTE_INSERTED_INFO@@@Z ; operator<<
  00075	83 c4 08	 add	 esp, 8

; 257  : 	SEND( ar, this, DPID_ALLPLAYERS );

  00078	8d 54 24 08	 lea	 edx, DWORD PTR _nBufSize$[esp+16432]
  0007c	52		 push	 edx
  0007d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00081	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  00086	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00089	85 c9		 test	 ecx, ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	74 0c		 je	 SHORT $L196254
  0008f	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  00092	6a 00		 push	 0
  00094	52		 push	 edx
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196254:

; 258  : }

  0009b	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  0009f	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000aa	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000af	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bd	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000c4	33 cc		 xor	 ecx, esp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  000d1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196248:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196262
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendAddVoteResult@CDPCoreSrvr@@QAEXAAUVOTE_INSERTED_INFO@@@Z ENDP ; CDPCoreSrvr::SendAddVoteResult
PUBLIC	?SendTagResult@CDPCoreSrvr@@QAEXKE@Z		; CDPCoreSrvr::SendTagResult
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196296 DD	0ffffffffH
	DD	FLAT:$L196276
$T196293 DD	019930520H
	DD	01H
	DD	FLAT:$T196296
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendTagResult@CDPCoreSrvr@@QAEXKE@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_idFrom$ = 8						; size = 4
_cbResult$ = 12						; size = 1
?SendTagResult@CDPCoreSrvr@@QAEXKE@Z PROC NEAR		; CDPCoreSrvr::SendTagResult, COMDAT
; _this$ = ecx

; 354  : {

  00000	6a ff		 push	 -1
  00002	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00008	68 00 00 00 00	 push	 __ehhandler$?SendTagResult@CDPCoreSrvr@@QAEXKE@Z
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi

; 355  : 	BEFORESEND( ar, PACKETTYPE_INSERTTAG_RESULT );

  00027	6a 00		 push	 0
  00029	8b f1		 mov	 esi, ecx
  0002b	6a 00		 push	 0
  0002d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00031	89 84 24 24 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16436], eax
  00038	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0003d	6a 04		 push	 4
  0003f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  00043	c7 84 24 2c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16440], 0
  0004e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00053	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00057	c7 00 08 b0 00
	f0		 mov	 DWORD PTR [eax], -268390392 ; f000b008H
  0005d	8b 54 24 10	 mov	 edx, DWORD PTR _ar$[esp+16436]
  00061	83 c2 04	 add	 edx, 4

; 356  : 	ar << idFrom;

  00064	6a 04		 push	 4
  00066	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0006a	89 54 24 14	 mov	 DWORD PTR _ar$[esp+16440], edx
  0006e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00073	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  00077	8b 94 24 30 40
	00 00		 mov	 edx, DWORD PTR _idFrom$[esp+16424]
  0007e	89 11		 mov	 DWORD PTR [ecx], edx
  00080	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00084	83 c0 04	 add	 eax, 4

; 357  : 	ar << cbResult;

  00087	6a 01		 push	 1
  00089	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0008d	89 44 24 14	 mov	 DWORD PTR _ar$[esp+16440], eax
  00091	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00096	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  0009a	8a 8c 24 34 40
	00 00		 mov	 cl, BYTE PTR _cbResult$[esp+16424]
  000a1	88 08		 mov	 BYTE PTR [eax], cl
  000a3	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  000a7	41		 inc	 ecx

; 358  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000a8	8d 54 24 04	 lea	 edx, DWORD PTR _nBufSize$[esp+16428]
  000ac	89 4c 24 10	 mov	 DWORD PTR _ar$[esp+16436], ecx
  000b0	52		 push	 edx
  000b1	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  000b5	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000ba	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000bd	85 c9		 test	 ecx, ecx
  000bf	5e		 pop	 esi
  000c0	74 0c		 je	 SHORT $L196288
  000c2	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000c5	6a 00		 push	 0
  000c7	52		 push	 edx
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196288:

; 359  : }

  000ce	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000d2	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000dd	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000e2	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f0	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000f7	33 cc		 xor	 ecx, esp
  000f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fe	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00104	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196276:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendTagResult@CDPCoreSrvr@@QAEXKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196293
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendTagResult@CDPCoreSrvr@@QAEXKE@Z ENDP		; CDPCoreSrvr::SendTagResult
PUBLIC	?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z		; CDPCoreSrvr::SendDelPlayer
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196322 DD	0ffffffffH
	DD	FLAT:$L196302
$T196319 DD	019930520H
	DD	01H
	DD	FLAT:$T196322
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_idGuild$ = 12						; size = 4
?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z PROC NEAR		; CDPCoreSrvr::SendDelPlayer, COMDAT
; _this$ = ecx

; 362  : {

  00000	6a ff		 push	 -1
  00002	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00008	68 00 00 00 00	 push	 __ehhandler$?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi

; 363  : 	BEFORESEND( ar, PACKETTYPE_DEL_PLAYER );

  00027	6a 00		 push	 0
  00029	8b f1		 mov	 esi, ecx
  0002b	6a 00		 push	 0
  0002d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00031	89 84 24 24 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16436], eax
  00038	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0003d	6a 04		 push	 4
  0003f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  00043	c7 84 24 2c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16440], 0
  0004e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00053	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00057	c7 00 f5 00 00
	00		 mov	 DWORD PTR [eax], 245	; 000000f5H
  0005d	8b 54 24 10	 mov	 edx, DWORD PTR _ar$[esp+16436]
  00061	83 c2 04	 add	 edx, 4

; 364  : 	ar << idPlayer << idGuild;

  00064	6a 04		 push	 4
  00066	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0006a	89 54 24 14	 mov	 DWORD PTR _ar$[esp+16440], edx
  0006e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00073	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  00077	8b 94 24 30 40
	00 00		 mov	 edx, DWORD PTR _idPlayer$[esp+16424]
  0007e	89 11		 mov	 DWORD PTR [ecx], edx
  00080	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00084	83 c0 04	 add	 eax, 4
  00087	6a 04		 push	 4
  00089	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0008d	89 44 24 14	 mov	 DWORD PTR _ar$[esp+16440], eax
  00091	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00096	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  0009a	8b 8c 24 34 40
	00 00		 mov	 ecx, DWORD PTR _idGuild$[esp+16424]
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  000a7	83 c1 04	 add	 ecx, 4

; 365  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000aa	8d 54 24 04	 lea	 edx, DWORD PTR _nBufSize$[esp+16428]
  000ae	89 4c 24 10	 mov	 DWORD PTR _ar$[esp+16436], ecx
  000b2	52		 push	 edx
  000b3	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  000b7	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000bc	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000bf	85 c9		 test	 ecx, ecx
  000c1	5e		 pop	 esi
  000c2	74 0c		 je	 SHORT $L196314
  000c4	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000c7	6a 00		 push	 0
  000c9	52		 push	 edx
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196314:

; 366  : }

  000d0	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000d4	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000df	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000e4	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f2	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000f9	33 cc		 xor	 ecx, esp
  000fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00100	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00106	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196302:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196319
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDelPlayer@CDPCoreSrvr@@QAEXKK@Z ENDP		; CDPCoreSrvr::SendDelPlayer
PUBLIC	?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z		; CDPCoreSrvr::SendMemberTime
EXTRN	?WriteString@CAr@@QAEXPBD@Z:NEAR		; CAr::WriteString
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196346 DD	0ffffffffH
	DD	FLAT:$L196328
$T196343 DD	019930520H
	DD	01H
	DD	FLAT:$T196346
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_tGuildMember$ = 12					; size = 4
?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z PROC NEAR	; CDPCoreSrvr::SendMemberTime, COMDAT
; _this$ = ecx

; 369  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 38 40
	00 00		 mov	 edi, DWORD PTR _tGuildMember$[esp+16428]

; 370  : 	BEFORESEND( ar, PACKETTYPE_GUILD_MEMBERTIME );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 76 ff ff
	ff		 mov	 DWORD PTR [eax], -138	; ffffff76H
  00065	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  00069	83 c0 04	 add	 eax, 4

; 371  : 	ar << idPlayer;

  0006c	6a 04		 push	 4
  0006e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00072	89 44 24 18	 mov	 DWORD PTR _ar$[esp+16444], eax
  00076	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007b	8b 4c 24 14	 mov	 ecx, DWORD PTR _ar$[esp+16440]
  0007f	8b 94 24 34 40
	00 00		 mov	 edx, DWORD PTR _idPlayer$[esp+16428]
  00086	89 11		 mov	 DWORD PTR [ecx], edx
  00088	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 372  : 	ar.WriteString( tGuildMember );

  0008d	57		 push	 edi
  0008e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00092	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 373  : 	SEND( ar, this, DPID_ALLPLAYERS );

  00097	8d 44 24 08	 lea	 eax, DWORD PTR _nBufSize$[esp+16432]
  0009b	50		 push	 eax
  0009c	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000a0	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000a5	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000a8	85 c9		 test	 ecx, ecx
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	74 0c		 je	 SHORT $L196337
  000ae	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000b1	6a 00		 push	 0
  000b3	52		 push	 edx
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196337:

; 374  : }

  000ba	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000be	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000c9	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000ce	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000dc	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000e3	33 cc		 xor	 ecx, esp
  000e5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ea	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  000f0	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196328:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196343
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMemberTime@CDPCoreSrvr@@QAEXKPBD@Z ENDP		; CDPCoreSrvr::SendMemberTime
PUBLIC	?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z ; CDPCoreSrvr::SendBuyingInfo
EXTRN	?Write@CAr@@QAEXPBXI@Z:NEAR			; CAr::Write
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196367 DD	0ffffffffH
	DD	FLAT:$L196352
$T196364 DD	019930520H
	DD	01H
	DD	FLAT:$T196367
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pbi2$ = 8						; size = 4
?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z PROC NEAR ; CDPCoreSrvr::SendBuyingInfo, COMDAT
; _this$ = ecx

; 377  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 34 40
	00 00		 mov	 edi, DWORD PTR _pbi2$[esp+16428]

; 378  : 	BEFORESEND( ar, PACKETTYPE_BUYING_INFO );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 52 b0 00
	f0		 mov	 DWORD PTR [eax], -268390318 ; f000b052H
  00065	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]

; 379  : 	ar.Write( pbi2, sizeof(BUYING_INFO2) );

  00069	6a 38		 push	 56			; 00000038H
  0006b	83 c2 04	 add	 edx, 4
  0006e	57		 push	 edi
  0006f	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00073	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
  00077	e8 00 00 00 00	 call	 ?Write@CAr@@QAEXPBXI@Z	; CAr::Write

; 380  : 	SEND( ar, this, DPID_ALLPLAYERS );

  0007c	8d 4c 24 08	 lea	 ecx, DWORD PTR _nBufSize$[esp+16432]
  00080	51		 push	 ecx
  00081	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00085	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  0008a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0008d	85 c9		 test	 ecx, ecx
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	74 0c		 je	 SHORT $L196358
  00093	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  00096	6a 00		 push	 0
  00098	52		 push	 edx
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196358:

; 381  : }

  0009f	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000a3	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000ae	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000b3	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c1	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000c8	33 cc		 xor	 ecx, esp
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196352:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196364
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendBuyingInfo@CDPCoreSrvr@@QAEXPAU_BUYING_INFO2@@@Z ENDP ; CDPCoreSrvr::SendBuyingInfo
PUBLIC	?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z	; CDPCoreSrvr::OnSnoopGuild
EXTRN	?ReadString@CAr@@QAEPADPADH@Z:NEAR		; CAr::ReadString
; Function compile flags: /Ogty
;	COMDAT ?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z
_TEXT	SEGMENT
_lpszChat$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_ar$ = 8						; size = 4
_lpBuf$ = 12						; size = 4
_uBufSize$ = 16						; size = 4
?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z PROC NEAR	; CDPCoreSrvr::OnSnoopGuild, COMDAT
; _this$ = ecx

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 0c 04 00
	00		 sub	 esp, 1036		; 0000040cH
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	8b 55 08	 mov	 edx, DWORD PTR _ar$[ebp]
  00014	33 c5		 xor	 eax, ebp
  00016	53		 push	 ebx
  00017	8b 5d 0c	 mov	 ebx, DWORD PTR _lpBuf$[ebp]
  0001a	89 84 24 0c 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1040], eax

; 405  : 	if( uBufSize > 1000 )	// 1032

  00021	81 7d 10 e8 03
	00 00		 cmp	 DWORD PTR _uBufSize$[ebp], 1000 ; 000003e8H
  00028	56		 push	 esi
  00029	57		 push	 edi
  0002a	77 78		 ja	 SHORT $L194127

; 406  : 		return;
; 407  : 
; 408  : 	u_long idGuild;
; 409  : 	char lpszChat[1024]		= { 0, };

  0002c	33 c0		 xor	 eax, eax
  0002e	c6 44 24 10 00	 mov	 BYTE PTR _lpszChat$[esp+1048], 0
  00033	b9 ff 00 00 00	 mov	 ecx, 255		; 000000ffH
  00038	8d 7c 24 11	 lea	 edi, DWORD PTR _lpszChat$[esp+1049]
  0003c	f3 ab		 rep stosd

; 410  : 	ar >> idGuild;

  0003e	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00041	66 ab		 stosw
  00043	aa		 stosb
  00044	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00047	83 c0 04	 add	 eax, 4
  0004a	3b c1		 cmp	 eax, ecx
  0004c	77 05		 ja	 SHORT $L196375
  0004e	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00051	eb 03		 jmp	 SHORT $L196376
$L196375:
  00053	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$L196376:

; 411  : 	ar.ReadString( lpszChat, 1024 );

  00056	68 00 04 00 00	 push	 1024			; 00000400H
  0005b	8d 44 24 14	 lea	 eax, DWORD PTR _lpszChat$[esp+1052]
  0005f	50		 push	 eax
  00060	8b ca		 mov	 ecx, edx
  00062	e8 00 00 00 00	 call	 ?ReadString@CAr@@QAEPADPADH@Z ; CAr::ReadString

; 412  : 
; 413  : 	TRACE( "recv PACKETTYPE_SETSNOOPGUILD\n" );
; 414  : 
; 415  : 	LPDB_OVERLAPPED_PLUS lpDbOverlappedPlus		= g_DbManager.AllocRequest();

  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0006d	e8 00 00 00 00	 call	 ?AllocRequest@CDbManager@@QAEPAUtagDB_OVERLAPPED_PLUS@@XZ ; CDbManager::AllocRequest

; 416  : 	g_DbManager.MakeRequest( lpDbOverlappedPlus, lpBuf, uBufSize );

  00072	8b 4d 10	 mov	 ecx, DWORD PTR _uBufSize$[ebp]
  00075	51		 push	 ecx
  00076	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0007c	8b f0		 mov	 esi, eax
  0007e	53		 push	 ebx
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 ?MakeRequest@CDbManager@@QAEXPAUtagDB_OVERLAPPED_PLUS@@PAEK@Z ; CDbManager::MakeRequest

; 417  : 	lpDbOverlappedPlus->nQueryMode	= QM_SNOOPGUILD;
; 418  : 	PostQueuedCompletionStatus( g_DbManager.m_hIOCPPut, 1, NULL, &lpDbOverlappedPlus->Overlapped );

  00085	56		 push	 esi
  00086	c7 46 14 40 00
	00 00		 mov	 DWORD PTR [esi+20], 64	; 00000040H
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00093	8b 82 4c 03 00
	00		 mov	 eax, DWORD PTR [edx+844]
  00099	6a 00		 push	 0
  0009b	6a 01		 push	 1
  0009d	50		 push	 eax
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
$L194127:

; 419  : }

  000a4	8b 8c 24 14 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1048]
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	33 cd		 xor	 ecx, ebp
  000af	5b		 pop	 ebx
  000b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 0c 00	 ret	 12			; 0000000cH
?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ENDP	; CDPCoreSrvr::OnSnoopGuild
_TEXT	ENDS
PUBLIC	?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z ; CDPCoreSrvr::SendUpdatePlayerData
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196401 DD	0ffffffffH
	DD	FLAT:$L196383
$T196398 DD	019930520H
	DD	01H
	DD	FLAT:$T196401
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_pPlayerData$ = 12					; size = 4
?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z PROC NEAR ; CDPCoreSrvr::SendUpdatePlayerData, COMDAT
; _this$ = ecx

; 433  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b bc 24 38 40
	00 00		 mov	 edi, DWORD PTR _pPlayerData$[esp+16428]

; 434  : 	BEFORESEND( ar, PACKETTYPE_UPDATE_PLAYER_DATA );

  0002f	6a 00		 push	 0
  00031	8b f1		 mov	 esi, ecx
  00033	6a 00		 push	 0
  00035	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00039	89 84 24 28 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16440], eax
  00040	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00045	6a 04		 push	 4
  00047	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  0004b	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  00056	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  0005f	c7 00 08 f8 00
	f0		 mov	 DWORD PTR [eax], -268371960 ; f000f808H
  00065	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 435  : 	ar << idPlayer;

  0006a	6a 04		 push	 4
  0006c	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00070	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00075	8b 4c 24 14	 mov	 ecx, DWORD PTR _ar$[esp+16440]
  00079	8b 94 24 34 40
	00 00		 mov	 edx, DWORD PTR _idPlayer$[esp+16428]
  00080	89 11		 mov	 DWORD PTR [ecx], edx
  00082	8b 54 24 14	 mov	 edx, DWORD PTR _ar$[esp+16440]

; 436  : 	ar.Write( &pPlayerData->data, sizeof(sPlayerData) );

  00086	6a 0c		 push	 12			; 0000000cH
  00088	83 c2 04	 add	 edx, 4
  0008b	57		 push	 edi
  0008c	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00090	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
  00094	e8 00 00 00 00	 call	 ?Write@CAr@@QAEXPBXI@Z	; CAr::Write

; 437  : 	SEND( ar, this, DPID_ALLPLAYERS );

  00099	8d 44 24 08	 lea	 eax, DWORD PTR _nBufSize$[esp+16432]
  0009d	50		 push	 eax
  0009e	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000a2	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000a7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000aa	85 c9		 test	 ecx, ecx
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	74 0c		 je	 SHORT $L196392
  000b0	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000b3	6a 00		 push	 0
  000b5	52		 push	 edx
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196392:

; 438  : }

  000bc	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000c0	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000cb	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000d0	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000de	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000e5	33 cc		 xor	 ecx, esp
  000e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ec	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  000f2	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196383:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196398
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendUpdatePlayerData@CDPCoreSrvr@@QAEXKPAU_PlayerData@@@Z ENDP ; CDPCoreSrvr::SendUpdatePlayerData
PUBLIC	?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z	; CDPCoreSrvr::SendRemovePlayerFriend
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196427 DD	0ffffffffH
	DD	FLAT:$L196407
$T196424 DD	019930520H
	DD	01H
	DD	FLAT:$T196427
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_uPlayerId$ = 8						; size = 4
_uFriendId$ = 12					; size = 4
?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z PROC NEAR	; CDPCoreSrvr::SendRemovePlayerFriend, COMDAT
; _this$ = ecx

; 467  : {

  00000	6a ff		 push	 -1
  00002	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00008	68 00 00 00 00	 push	 __ehhandler$?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi

; 468  : 	BEFORESEND( ar, PACKETTYPE_REMOVEFRIEND );

  00027	6a 00		 push	 0
  00029	8b f1		 mov	 esi, ecx
  0002b	6a 00		 push	 0
  0002d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00031	89 84 24 24 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16436], eax
  00038	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0003d	6a 04		 push	 4
  0003f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  00043	c7 84 24 2c 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16440], 0
  0004e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00053	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00057	c7 00 6a ff ff
	ff		 mov	 DWORD PTR [eax], -150	; ffffff6aH
  0005d	8b 54 24 10	 mov	 edx, DWORD PTR _ar$[esp+16436]
  00061	83 c2 04	 add	 edx, 4

; 469  : 	ar << uPlayerId << uFriendId;

  00064	6a 04		 push	 4
  00066	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0006a	89 54 24 14	 mov	 DWORD PTR _ar$[esp+16440], edx
  0006e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00073	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  00077	8b 94 24 30 40
	00 00		 mov	 edx, DWORD PTR _uPlayerId$[esp+16424]
  0007e	89 11		 mov	 DWORD PTR [ecx], edx
  00080	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  00084	83 c0 04	 add	 eax, 4
  00087	6a 04		 push	 4
  00089	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  0008d	89 44 24 14	 mov	 DWORD PTR _ar$[esp+16440], eax
  00091	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00096	8b 44 24 10	 mov	 eax, DWORD PTR _ar$[esp+16436]
  0009a	8b 8c 24 34 40
	00 00		 mov	 ecx, DWORD PTR _uFriendId$[esp+16424]
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	8b 4c 24 10	 mov	 ecx, DWORD PTR _ar$[esp+16436]
  000a7	83 c1 04	 add	 ecx, 4

; 470  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000aa	8d 54 24 04	 lea	 edx, DWORD PTR _nBufSize$[esp+16428]
  000ae	89 4c 24 10	 mov	 DWORD PTR _ar$[esp+16436], ecx
  000b2	52		 push	 edx
  000b3	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  000b7	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000bc	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000bf	85 c9		 test	 ecx, ecx
  000c1	5e		 pop	 esi
  000c2	74 0c		 je	 SHORT $L196418
  000c4	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000c7	6a 00		 push	 0
  000c9	52		 push	 edx
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196418:

; 471  : }

  000d0	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  000d4	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  000df	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000e4	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  000eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f2	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  000f9	33 cc		 xor	 ecx, esp
  000fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00100	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00106	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196407:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196424
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRemovePlayerFriend@CDPCoreSrvr@@QAEXKK@Z ENDP	; CDPCoreSrvr::SendRemovePlayerFriend
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC NEAR ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	6b d2 1c	 imul	 edx, 28			; 0000001cH
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV012@H@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::operator+
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 138  : 		}

  00010	c2 04 00	 ret	 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L194983
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L194982:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L194984

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L194985
$L194984:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L194985:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L194982
  00029	5b		 pop	 ebx
$L194983:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L194991

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L194991:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L194992

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L194992:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L194994

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L194994:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L195001

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L195001:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L195002

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L195002:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L195004

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L195004:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L195041

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 2d	 mov	 bl, BYTE PTR [edx+45]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L196745

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 2d	 mov	 bl, BYTE PTR [eax+45]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L196733
  0001d	8d 49 00	 npad	 3
$L196732:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 2d	 mov	 bl, BYTE PTR [eax+45]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L196732
$L196733:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L196745:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L195045
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L195044:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L195045

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L195044
$L195045:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L195041:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::iterator::iterator
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L195171

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L195171:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L196822

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L196807
$L196806:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L196806
$L196807:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L196822:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L196825
  0003d	8d 49 00	 npad	 3
$L195177:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L195178

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L195177
$L195178:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L196825

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L196825:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L196851
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L196851:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@H@Z				; CAr::operator<<
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\misc\include\ar.h
;	COMDAT ??6CAr@@QAEAAV0@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??6CAr@@QAEAAV0@H@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 99   : 	{ return CAr::operator<<((LONG)i); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _i$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@H@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	??6CAr@@QAEAAV0@I@Z				; CAr::operator<<
; Function compile flags: /Ogty
;	COMDAT ??6CAr@@QAEAAV0@I@Z
_TEXT	SEGMENT
_u$ = 8							; size = 4
??6CAr@@QAEAAV0@I@Z PROC NEAR				; CAr::operator<<, COMDAT
; _this$ = ecx

; 101  : 	{ return CAr::operator<<((LONG)u); }

  00000	56		 push	 esi
  00001	6a 04		 push	 4
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0000a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000d	8b 4c 24 08	 mov	 ecx, DWORD PTR _u$[esp]
  00011	89 08		 mov	 DWORD PTR [eax], ecx
  00013	83 46 08 04	 add	 DWORD PTR [esi+8], 4
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
??6CAr@@QAEAAV0@I@Z ENDP				; CAr::operator<<
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1094 : 		return (_Myptr());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L196875
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1095 : 		}

  00009	c3		 ret	 0

; 1094 : 		return (_Myptr());

$L196875:
  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1095 : 		}

  0000d	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L196889
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L196889:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z	; CDPCoreSrvr::SendSetPlayerName
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T196944 DD	0ffffffffH
	DD	FLAT:$L196915
$T196941 DD	019930520H
	DD	01H
	DD	FLAT:$T196944
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_idPlayer$ = 8						; size = 4
_lpszPlayer$ = 12					; size = 4
_dwData$ = 16						; size = 4
_f$ = 20						; size = 4
?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z PROC NEAR	; CDPCoreSrvr::SendSetPlayerName, COMDAT
; _this$ = ecx

; 395  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	8b bc 24 3c 40
	00 00		 mov	 edi, DWORD PTR _lpszPlayer$[esp+16432]

; 396  : 	BEFORESEND( ar, PACKETTYPE_QUERYSETPLAYERNAME );

  00030	6a 00		 push	 0
  00032	8b f1		 mov	 esi, ecx
  00034	6a 00		 push	 0
  00036	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  0003a	89 84 24 2c 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16444], eax
  00041	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00046	bb 04 00 00 00	 mov	 ebx, 4
  0004b	53		 push	 ebx
  0004c	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00050	c7 84 24 34 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16448], 0
  0005b	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00060	8b 44 24 18	 mov	 eax, DWORD PTR _ar$[esp+16444]
  00064	c7 00 12 00 00
	00		 mov	 DWORD PTR [eax], 18	; 00000012H
  0006a	8b 44 24 18	 mov	 eax, DWORD PTR _ar$[esp+16444]
  0006e	03 c3		 add	 eax, ebx

; 397  : 	ar << idPlayer;

  00070	53		 push	 ebx
  00071	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00075	89 44 24 1c	 mov	 DWORD PTR _ar$[esp+16448], eax
  00079	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007e	8b 4c 24 18	 mov	 ecx, DWORD PTR _ar$[esp+16444]
  00082	8b 94 24 38 40
	00 00		 mov	 edx, DWORD PTR _idPlayer$[esp+16432]
  00089	89 11		 mov	 DWORD PTR [ecx], edx
  0008b	01 5c 24 18	 add	 DWORD PTR _ar$[esp+16444], ebx

; 398  : 	ar.WriteString( lpszPlayer );

  0008f	57		 push	 edi
  00090	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00094	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString

; 399  : 	ar << dwData << f;

  00099	53		 push	 ebx
  0009a	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  0009e	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000a3	8b 44 24 18	 mov	 eax, DWORD PTR _ar$[esp+16444]
  000a7	8b 8c 24 40 40
	00 00		 mov	 ecx, DWORD PTR _dwData$[esp+16432]
  000ae	89 08		 mov	 DWORD PTR [eax], ecx
  000b0	8b 54 24 18	 mov	 edx, DWORD PTR _ar$[esp+16444]
  000b4	03 d3		 add	 edx, ebx
  000b6	53		 push	 ebx
  000b7	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  000bb	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
  000bf	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000c4	8b 54 24 18	 mov	 edx, DWORD PTR _ar$[esp+16444]
  000c8	8b 84 24 44 40
	00 00		 mov	 eax, DWORD PTR _f$[esp+16432]
  000cf	89 02		 mov	 DWORD PTR [edx], eax
  000d1	8b 44 24 18	 mov	 eax, DWORD PTR _ar$[esp+16444]

; 400  : 	SEND( ar, this, DPID_ALLPLAYERS );

  000d5	8d 4c 24 0c	 lea	 ecx, DWORD PTR _nBufSize$[esp+16436]
  000d9	03 c3		 add	 eax, ebx
  000db	51		 push	 ecx
  000dc	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  000e0	89 44 24 1c	 mov	 DWORD PTR _ar$[esp+16448], eax
  000e4	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000e9	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ec	85 c9		 test	 ecx, ecx
  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	74 0c		 je	 SHORT $L196935
  000f3	8b 14 24	 mov	 edx, DWORD PTR _nBufSize$[esp+16424]
  000f6	6a 00		 push	 0
  000f8	52		 push	 edx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L196935:

; 401  : }

  000ff	8d 4c 24 04	 lea	 ecx, DWORD PTR _ar$[esp+16424]
  00103	c7 84 24 24 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16432], -1
  0010e	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  00113	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16424]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00121	8b 8c 24 18 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16424]
  00128	33 cc		 xor	 ecx, esp
  0012a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012f	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00135	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196915:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196941
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSetPlayerName@CDPCoreSrvr@@QAEXKPBDKH@Z ENDP	; CDPCoreSrvr::SendSetPlayerName
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx

; 1099 : 		return (c_str());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L196960
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1100 : 		}

  00009	c3		 ret	 0

; 1099 : 		return (c_str());

$L196960:
  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1100 : 		}

  0000d	c3		 ret	 0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::end
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L197123
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L197091:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L197093
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L197094
$L197093:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L197094:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L197091
  00029	5b		 pop	 ebx
$L197123:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
EXTRN	__CxxThrowException@8:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L197141
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L197141:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L197205
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L197205:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L197232
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L197232:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L197259
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L197259:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L195195
$L195193:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L195193
$L195195:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L197333

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L197333

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L197331
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L197331:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L197333:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L184993

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184993:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L184994

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L184994:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L197398

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L197364
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L197365
$L197364:
  00036	8b d3		 mov	 edx, ebx
$L197365:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L197371
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L197372
$L197371:
  00041	8b cb		 mov	 ecx, ebx
$L197372:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L197395

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L197395:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L197398:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T197601 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T197603 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L197404
$T197604 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L197402
$T197602 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T197603
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T197604
$T197596 DD	019930520H
	DD	04H
	DD	FLAT:$T197601
	DD	02H
	DD	FLAT:$T197602
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L185550

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L185552
$L185550:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L185552
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L185552

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L185552:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L185554
$L197402:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L197597
  00092	c3		 ret	 0
$L197597:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L185554:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L197522

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L197518
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L197519
$L197518:
  000ae	83 c6 04	 add	 esi, 4
$L197519:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L197522:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L197563
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L197563:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L197592
  000f2	8b c2		 mov	 eax, edx
$L197592:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L197404:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L197502
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L197502:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L197600:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197596
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T197611 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L197698
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L197697:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L197699
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L197700
$L197699:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L197700:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L197697
$L197698:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L197610
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L197610
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L197610:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T197611[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T197611[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator--
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::clear
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L197980
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L197980:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L185002

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L185002:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L185003

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L185003:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L185005
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L185005
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L197993
  00047	8b de		 mov	 ebx, esi
$L197993:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L198054
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L198052
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L198052:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L198054:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L185005:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L198084

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L198080
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L198080:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L198084:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?GetHandler@CDPCoreSrvr@@AAEP81@AEXAAVCAr@@PAEK@ZK@Z ; CDPCoreSrvr::GetHandler
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.h
;	COMDAT ?GetHandler@CDPCoreSrvr@@AAEP81@AEXAAVCAr@@PAEK@ZK@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_dwType$ = 8						; size = 4
?GetHandler@CDPCoreSrvr@@AAEP81@AEXAAVCAr@@PAEK@ZK@Z PROC NEAR ; CDPCoreSrvr::GetHandler, COMDAT
; _this$ = ecx

; 51   : 	USES_PFNENTRIES;

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwType$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _i$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::find
  00016	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _i$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L192718
  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L192718:
  00029	33 c0		 xor	 eax, eax
  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?GetHandler@CDPCoreSrvr@@AAEP81@AEXAAVCAr@@PAEK@ZK@Z ENDP ; CDPCoreSrvr::GetHandler
_TEXT	ENDS
PUBLIC	?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ; CDPCoreSrvr::UserMessageHandler
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T198227 DD	0ffffffffH
	DD	FLAT:$L198141
$T198224 DD	019930520H
	DD	01H
	DD	FLAT:$T198227
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT
_i$198198 = -16428					; size = 4
$T198220 = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_dwMsgSize$ = 12					; size = 4
_dpid$ = 16						; size = 4
?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z PROC NEAR ; CDPCoreSrvr::UserMessageHandler, COMDAT
; _this$ = ecx

; 82   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 20 40 00 00	 mov	 eax, 16416		; 00004020H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx

; 83   : 	CAr ar( (LPBYTE)lpMsg, dwMsgSize );

  00027	8b 9c 24 38 40
	00 00		 mov	 ebx, DWORD PTR _dwMsgSize$[esp+16428]
  0002e	56		 push	 esi
  0002f	57		 push	 edi
  00030	8b bc 24 3c 40
	00 00		 mov	 edi, DWORD PTR _lpMsg$[esp+16436]
  00037	53		 push	 ebx
  00038	8b f1		 mov	 esi, ecx
  0003a	57		 push	 edi
  0003b	8d 4c 24 1c	 lea	 ecx, DWORD PTR _ar$[esp+16448]
  0003f	89 84 24 30 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16448], eax
  00046	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr

; 84   : 	GETTYPE( ar );

  0004b	8b 4c 24 1c	 mov	 ecx, DWORD PTR _ar$[esp+16448]
  0004f	8b 54 24 20	 mov	 edx, DWORD PTR _ar$[esp+16452]
  00053	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00056	3b c2		 cmp	 eax, edx
  00058	c7 84 24 34 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16448], 0
  00063	77 08		 ja	 SHORT $L198144
  00065	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00067	89 44 24 1c	 mov	 DWORD PTR _ar$[esp+16448], eax
  0006b	eb 06		 jmp	 SHORT $L198145
$L198144:
  0006d	33 c9		 xor	 ecx, ecx
  0006f	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
$L198145:

; 85   : 	void ( theClass::*pfn )( theParameters )

  00073	89 4c 24 10	 mov	 DWORD PTR $T198220[esp+16440], ecx
  00077	8d 44 24 10	 lea	 eax, DWORD PTR $T198220[esp+16440]
  0007b	50		 push	 eax
  0007c	8d 4c 24 10	 lea	 ecx, DWORD PTR _i$198198[esp+16444]
  00080	51		 push	 ecx
  00081	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00084	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::find
  00089	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0008c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _i$198198[esp+16440]
  00090	3b c8		 cmp	 ecx, eax
  00092	74 18		 je	 SHORT $L193751
  00094	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 86   : 		=	GetHandler( dw );
; 87   : 	//	ASSERT( pfn );
; 88   : 	if( pfn )

  00097	85 c0		 test	 eax, eax
  00099	74 11		 je	 SHORT $L193751

; 89   : 		( this->*( pfn ) )( ar, (LPBYTE)lpMsg + sizeof(DWORD), dwMsgSize - sizeof(DWORD) );

  0009b	83 c3 fc	 add	 ebx, -4			; fffffffcH
  0009e	53		 push	 ebx
  0009f	83 c7 04	 add	 edi, 4
  000a2	57		 push	 edi
  000a3	8d 54 24 1c	 lea	 edx, DWORD PTR _ar$[esp+16448]
  000a7	52		 push	 edx
  000a8	8b ce		 mov	 ecx, esi
  000aa	ff d0		 call	 eax
$L193751:

; 90   : }

  000ac	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  000b0	c7 84 24 34 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16448], -1
  000bb	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000c0	8b 8c 24 2c 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16440]
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d0	8b 8c 24 20 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16432]
  000d7	5b		 pop	 ebx
  000d8	33 cc		 xor	 ecx, esp
  000da	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000df	81 c4 2c 40 00
	00		 add	 esp, 16428		; 0000402cH
  000e5	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198141:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198224
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ENDP ; CDPCoreSrvr::UserMessageHandler
PUBLIC	?SendPartyName@CDPCoreSrvr@@QAEXK@Z		; CDPCoreSrvr::SendPartyName
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T198375 DD	0ffffffffH
	DD	FLAT:$L198234
$T198371 DD	019930520H
	DD	01H
	DD	FLAT:$T198375
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendPartyName@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT
_i$193854 = -16428					; size = 4
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_dpid$ = 8						; size = 4
?SendPartyName@CDPCoreSrvr@@QAEXK@Z PROC NEAR		; CDPCoreSrvr::SendPartyName, COMDAT
; _this$ = ecx

; 115  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendPartyName@CDPCoreSrvr@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 20 40 00 00	 mov	 eax, 16416		; 00004020H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi

; 116  : 	BEFORESEND( ar, PACKETTYPE_PARTYNAME );

  00029	6a 00		 push	 0
  0002b	8b d9		 mov	 ebx, ecx
  0002d	6a 00		 push	 0
  0002f	8d 4c 24 1c	 lea	 ecx, DWORD PTR _ar$[esp+16448]
  00033	89 84 24 30 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16448], eax
  0003a	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0003f	bf 04 00 00 00	 mov	 edi, 4
  00044	57		 push	 edi
  00045	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  00049	c7 84 24 38 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16452], 0
  00054	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00059	8b 44 24 1c	 mov	 eax, DWORD PTR _ar$[esp+16448]
  0005d	c7 00 70 ff ff
	ff		 mov	 DWORD PTR [eax], -144	; ffffff70H
  00063	01 7c 24 1c	 add	 DWORD PTR _ar$[esp+16448], edi

; 117  : 
; 118  : 	ar << (u_long)g_DbManager.m_2PartyNamePtr.size();

  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  0006d	8b 71 5c	 mov	 esi, DWORD PTR [ecx+92]
  00070	57		 push	 edi
  00071	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  00075	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  0007a	8b 54 24 1c	 mov	 edx, DWORD PTR _ar$[esp+16448]
  0007e	89 32		 mov	 DWORD PTR [edx], esi
  00080	8b 54 24 1c	 mov	 edx, DWORD PTR _ar$[esp+16448]

; 119  : 	for( ULONG2STRING::iterator i = g_DbManager.m_2PartyNamePtr.begin(); i != g_DbManager.m_2PartyNamePtr.end(); ++i )

  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00089	03 d7		 add	 edx, edi
  0008b	89 54 24 1c	 mov	 DWORD PTR _ar$[esp+16448], edx
  0008f	8b 40 58	 mov	 eax, DWORD PTR [eax+88]
  00092	8b 30		 mov	 esi, DWORD PTR [eax]
  00094	3b f0		 cmp	 esi, eax
  00096	89 74 24 0c	 mov	 DWORD PTR _i$193854[esp+16440], esi
  0009a	74 4f		 je	 SHORT $L193859
  0009c	8d 64 24 00	 npad	 4
$L198281:

; 120  : 	{
; 121  : 		ar << (*i).first;

  000a0	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  000a3	6a 04		 push	 4
  000a5	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000a9	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  000ae	8b 4c 24 1c	 mov	 ecx, DWORD PTR _ar$[esp+16448]
  000b2	89 39		 mov	 DWORD PTR [ecx], edi
  000b4	83 44 24 1c 04	 add	 DWORD PTR _ar$[esp+16448], 4

; 122  : 		ar.WriteString( (*i).second.data() );

  000b9	83 7e 28 10	 cmp	 DWORD PTR [esi+40], 16	; 00000010H
  000bd	72 05		 jb	 SHORT $L198359
  000bf	8b 76 14	 mov	 esi, DWORD PTR [esi+20]
  000c2	eb 03		 jmp	 SHORT $L198360
$L198359:
  000c4	83 c6 14	 add	 esi, 20			; 00000014H
$L198360:
  000c7	56		 push	 esi
  000c8	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000cc	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString
  000d1	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i$193854[esp+16440]
  000d5	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::const_iterator::_Inc
  000da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  000e0	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  000e3	8b 74 24 0c	 mov	 esi, DWORD PTR _i$193854[esp+16440]
  000e7	3b f0		 cmp	 esi, eax
  000e9	75 b5		 jne	 SHORT $L198281
$L193859:

; 123  : 	}
; 124  : 	SEND( ar, this, dpid );

  000eb	8d 44 24 10	 lea	 eax, DWORD PTR _nBufSize$[esp+16440]
  000ef	50		 push	 eax
  000f0	8d 4c 24 18	 lea	 ecx, DWORD PTR _ar$[esp+16444]
  000f4	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000f9	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fc	85 c9		 test	 ecx, ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	74 13		 je	 SHORT $L198366
  00103	8b 94 24 30 40
	00 00		 mov	 edx, DWORD PTR _dpid$[esp+16424]
  0010a	52		 push	 edx
  0010b	8b 54 24 08	 mov	 edx, DWORD PTR _nBufSize$[esp+16432]
  0010f	52		 push	 edx
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L198366:

; 125  : }

  00116	8d 4c 24 08	 lea	 ecx, DWORD PTR _ar$[esp+16428]
  0011a	c7 84 24 28 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16436], -1
  00125	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  0012a	8b 8c 24 20 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16428]
  00131	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00138	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16428]
  0013f	33 cc		 xor	 ecx, esp
  00141	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00146	81 c4 2c 40 00
	00		 add	 esp, 16428		; 0000402cH
  0014c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198234:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?SendPartyName@CDPCoreSrvr@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198371
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendPartyName@CDPCoreSrvr@@QAEXK@Z ENDP		; CDPCoreSrvr::SendPartyName
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L198560
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L198560:
  00015	33 c0		 xor	 eax, eax
  00017	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0001a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  00029	74 09		 je	 SHORT $L198572
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00031	83 c4 04	 add	 esp, 4
$L198572:
  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	c2 04 00	 ret	 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L198639
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L198639:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L198662
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L198662:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L198671
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L198671:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L184271

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L184271:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L184273

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L184273:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L184274

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L184274:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L198821
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L198821:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L198822
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L198867:
  0006b	76 6d		 jbe	 SHORT $L198866

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L198832
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L198833

; 599  : 		else if (_Grow(_Num))

$L198822:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L198867
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L198814
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L198814:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L198832:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L198833:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L198838
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L198839
$L198838:
  000b7	8b f8		 mov	 edi, eax
$L198839:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L198861
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L198861:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L198866:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L198891
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L198892
$L198891:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L198892:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L184989
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L198895
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L198896
$L198895:
  00029	8b c8		 mov	 ecx, eax
$L198896:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L184989

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L198904
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L198904:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L184989:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L199045
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L199045:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L199046
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L199084:
  00077	76 68		 jbe	 SHORT $L199081

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L199055
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L199056

; 611  : 
; 612  : 		if (_Grow(_Num))

$L199046:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L199084
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L199038
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L199038:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L199055:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L199056:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L199077
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L199077:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L199081:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?OnAddConnection@CDPCoreSrvr@@QAEXK@Z		; CDPCoreSrvr::OnAddConnection
EXTRN	?g_GuildMng@@3VCGuildMng@@A:BYTE		; g_GuildMng
EXTRN	?Serialize@CGuildTable@@QAEXAAVCAr@@@Z:NEAR	; CGuildTable::Serialize
EXTRN	?GetInstance@CGuildTable@@SAAAV1@XZ:NEAR	; CGuildTable::GetInstance
EXTRN	?Serialize@CGuildMng@@QAEXAAVCAr@@H@Z:NEAR	; CGuildMng::Serialize
EXTRN	?Serialize@CGuildWarMng@@QAEXAAVCAr@@@Z:NEAR	; CGuildWarMng::Serialize
EXTRN	?g_GuildWarMng@@3VCGuildWarMng@@A:BYTE		; g_GuildWarMng
EXTRN	?OpenGuild@CDbManager@@QAEXXZ:NEAR		; CDbManager::OpenGuild
EXTRN	?prj@@3VCProject@@A:BYTE			; prj
;	COMDAT xdata$x
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\_network\net\include\dpmng.h
xdata$x	SEGMENT
$T199102 DD	0ffffffffH
	DD	FLAT:$L199088
$T199099 DD	019930520H
	DD	01H
	DD	FLAT:$T199102
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?OnAddConnection@CDPCoreSrvr@@QAEXK@Z
_TEXT	SEGMENT
_nBufSize$ = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_dpid$ = 8						; size = 4
?OnAddConnection@CDPCoreSrvr@@QAEXK@Z PROC NEAR		; CDPCoreSrvr::OnAddConnection, COMDAT
; _this$ = ecx

; 93   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnAddConnection@CDPCoreSrvr@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 1c 40 00 00	 mov	 eax, 16412		; 0000401cH
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	56		 push	 esi
  00027	57		 push	 edi

; 94   : 	SendPartyName( dpid );

  00028	8b bc 24 34 40
	00 00		 mov	 edi, DWORD PTR _dpid$[esp+16428]
  0002f	57		 push	 edi
  00030	89 84 24 24 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16436], eax
  00037	8b f1		 mov	 esi, ecx
  00039	e8 00 00 00 00	 call	 ?SendPartyName@CDPCoreSrvr@@QAEXK@Z ; CDPCoreSrvr::SendPartyName

; 95   : 	BEFORESEND( ar, PACKETTYPE_GLOBAL_DATA );

  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  00046	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  0004b	6a 04		 push	 4
  0004d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00051	c7 84 24 30 40
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+16444], 0
  0005c	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00061	8b 44 24 14	 mov	 eax, DWORD PTR _ar$[esp+16440]
  00065	c7 00 38 ff ff
	ff		 mov	 DWORD PTR [eax], -200	; ffffff38H
  0006b	83 44 24 14 04	 add	 DWORD PTR _ar$[esp+16440], 4

; 96   : 	g_DbManager.OpenGuild();

  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_DbManager@@3AAVCDbManager@@A ; g_DbManager
  00076	e8 00 00 00 00	 call	 ?OpenGuild@CDbManager@@QAEXXZ ; CDbManager::OpenGuild

; 97   : 	g_GuildMng.Serialize( ar, FALSE );

  0007b	6a 00		 push	 0
  0007d	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  00081	51		 push	 ecx
  00082	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_GuildMng@@3VCGuildMng@@A
  00087	e8 00 00 00 00	 call	 ?Serialize@CGuildMng@@QAEXAAVCAr@@H@Z ; CGuildMng::Serialize

; 98   : 	CGuildTable::GetInstance().Serialize( ar );

  0008c	8d 54 24 0c	 lea	 edx, DWORD PTR _ar$[esp+16432]
  00090	52		 push	 edx
  00091	e8 00 00 00 00	 call	 ?GetInstance@CGuildTable@@SAAAV1@XZ ; CGuildTable::GetInstance
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ?Serialize@CGuildTable@@QAEXAAVCAr@@@Z ; CGuildTable::Serialize

; 99   : 	g_GuildWarMng.Serialize( ar );

  0009d	8d 44 24 0c	 lea	 eax, DWORD PTR _ar$[esp+16432]
  000a1	50		 push	 eax
  000a2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_GuildWarMng@@3VCGuildWarMng@@A
  000a7	e8 00 00 00 00	 call	 ?Serialize@CGuildWarMng@@QAEXAAVCAr@@@Z ; CGuildWarMng::Serialize

; 100  : 	ar.Write( (const void*)prj.m_aExpParty, sizeof(prj.m_aExpParty) );

  000ac	6a 50		 push	 80			; 00000050H
  000ae	68 a4 1a 00 00	 push	 OFFSET FLAT:?prj@@3VCProject@@A+6820
  000b3	8d 4c 24 14	 lea	 ecx, DWORD PTR _ar$[esp+16440]
  000b7	e8 00 00 00 00	 call	 ?Write@CAr@@QAEXPBXI@Z	; CAr::Write

; 101  : 
; 102  : #if defined(__INTERNALSERVER )
; 103  : 	g_DbManager.OpenWanted( ar );	
; 104  : #endif
; 105  : 
; 106  : 	SEND( ar, this, dpid );

  000bc	8d 4c 24 08	 lea	 ecx, DWORD PTR _nBufSize$[esp+16432]
  000c0	51		 push	 ecx
  000c1	8d 4c 24 10	 lea	 ecx, DWORD PTR _ar$[esp+16436]
  000c5	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  000ca	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000cd	85 c9		 test	 ecx, ecx
  000cf	74 0c		 je	 SHORT $L199094
  000d1	8b 54 24 08	 mov	 edx, DWORD PTR _nBufSize$[esp+16432]
  000d5	57		 push	 edi
  000d6	52		 push	 edx
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L199094:

; 107  : }

  000dd	8d 4c 24 0c	 lea	 ecx, DWORD PTR _ar$[esp+16432]
  000e1	c7 84 24 2c 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16440], -1
  000ec	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  000f1	8b 8c 24 24 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16432]
  000f8	5f		 pop	 edi
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00100	8b 8c 24 1c 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16428]
  00107	5e		 pop	 esi
  00108	33 cc		 xor	 ecx, esp
  0010a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010f	81 c4 28 40 00
	00		 add	 esp, 16424		; 00004028H
  00115	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199088:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
__ehhandler$?OnAddConnection@CDPCoreSrvr@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199099
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnAddConnection@CDPCoreSrvr@@QAEXK@Z ENDP		; CDPCoreSrvr::OnAddConnection
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 585  : 		return (assign(_Right, 0, npos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	6a ff		 push	 -1
  00006	6a 00		 push	 0
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 586  : 		}

  0000e	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC NEAR ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	56		 push	 esi

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00009	72 0c		 jb	 SHORT $L199195
  0000b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	83 c4 04	 add	 esp, 4
$L199195:
  00017	33 c0		 xor	 eax, eax
  00019	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00020	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00023	88 46 04	 mov	 BYTE PTR [esi+4], al
  00026	5e		 pop	 esi

; 50   : 	}

  00027	c3		 ret	 0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L199279:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L199279
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ; CDPCoreSrvr::SysMessageHandler
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
;	COMDAT ?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_dwMsgSize$ = 12					; size = 4
_dpid$ = 16						; size = 4
?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z PROC NEAR ; CDPCoreSrvr::SysMessageHandler, COMDAT
; _this$ = ecx

; 64   : 	switch( lpMsg->dwType )

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _lpMsg$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	83 e8 03	 sub	 eax, 3
  00009	75 09		 jne	 SHORT $L193729

; 65   : 	{
; 66   : 		case DPSYS_CREATEPLAYERORGROUP:
; 67   : 			{
; 68   : 				LPDPMSG_CREATEPLAYERORGROUP lpCreatePlayer	= (LPDPMSG_CREATEPLAYERORGROUP)lpMsg;
; 69   : 				OnAddConnection( lpCreatePlayer->dpId );

  0000b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?OnAddConnection@CDPCoreSrvr@@QAEXK@Z ; CDPCoreSrvr::OnAddConnection
$L193729:

; 70   : 				break;
; 71   : 			}
; 72   : 		case DPSYS_DESTROYPLAYERORGROUP:
; 73   : 			{
; 74   : 				LPDPMSG_DESTROYPLAYERORGROUP lpDestroyPlayer	= (LPDPMSG_DESTROYPLAYERORGROUP)lpMsg;
; 75   : 				OnRemoveConnection( lpDestroyPlayer->dpId );
; 76   : 				break;
; 77   : 			}
; 78   : 	}
; 79   : }

  00014	c2 0c 00	 ret	 12			; 0000000cH
?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z ENDP ; CDPCoreSrvr::SysMessageHandler
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 467  : 		return (assign(_Right));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	6a ff		 push	 -1
  00006	6a 00		 push	 0
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 468  : 		}

  0000e	c2 04 00	 ret	 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	56		 push	 esi

; 152  : 		_Destroy(_Ptr);

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00009	72 0c		 jb	 SHORT $L199405
  0000b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	83 c4 04	 add	 esp, 4
$L199405:
  00017	33 c0		 xor	 eax, eax
  00019	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00020	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00023	88 46 04	 mov	 BYTE PTR [esi+4], al
  00026	5e		 pop	 esi

; 153  : 		}

  00027	c2 04 00	 ret	 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
_TEXT	ENDS
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T199526 DD	0ffffffffH
	DD	FLAT:$L199425
$T199524 DD	019930520H
	DD	01H
	DD	FLAT:$T199526
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
$T199422 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC NEAR ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00016	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+12]
  0001a	89 0c 24	 mov	 DWORD PTR $T199422[esp+16], ecx
  0001d	33 c0		 xor	 eax, eax
  0001f	3b c8		 cmp	 ecx, eax
  00021	89 44 24 0c	 mov	 DWORD PTR __$EHRec$[esp+24], eax
  00025	74 1a		 je	 SHORT $L199423
  00027	6a ff		 push	 -1
  00029	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002c	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00033	50		 push	 eax
  00034	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00037	8b 44 24 20	 mov	 eax, DWORD PTR __Val$[esp+20]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$L199423:

; 43   : 	}

  00041	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004c	83 c4 10	 add	 esp, 16			; 00000010H
  0004f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199425:
  00000	8b 45 04	 mov	 eax, DWORD PTR __Ptr$[ebp-4]
  00003	50		 push	 eax
  00004	8b 4d f0	 mov	 ecx, DWORD PTR $T199422[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199524
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T199631 DD	0ffffffffH
	DD	FLAT:$L199531
$T199629 DD	019930520H
	DD	01H
	DD	FLAT:$T199631
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199531:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199629
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L199639
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L199639:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L199726
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L199726:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L199750
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L199750:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L199843
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L199843:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L199930:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L199930
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Insert
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T200305 DD	0ffffffffH
	DD	FLAT:$L199935
$T200300 DD	019930520H
	DD	01H
	DD	FLAT:$T200305
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT
$T199934 = -80						; size = 28
$T199933 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L194797

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T199934[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T199934[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T199934[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T199934[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T199934[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T199933[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T199933[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T199933[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L194797:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L194802

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L194807
$L194802:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L194804

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L194807

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L194807
$L194804:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L194807

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L194807:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L194811
  000e5	55		 push	 ebp
$L194810:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L194812

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L194813
$L200304:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L194818
$L194813:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L194815

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate
$L194815:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L194818
$L194812:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L200304

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L194819

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate
$L194819:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate
$L194818:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L194810
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L194811:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L200303:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199935:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T199934[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T200300
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T200410 DD	0ffffffffH
	DD	FLAT:$L200310
$T200408 DD	019930520H
	DD	01H
	DD	FLAT:$T200410
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L200310:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T200408
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T200535 DD	0ffffffffH
	DD	FLAT:$L200420
$T200532 DD	019930520H
	DD	01H
	DD	FLAT:$T200535
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
$T200419 = -80						; size = 28
$T200418 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T200419[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T200419[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T200419[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T200419[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T200419[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T200418[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T200418[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T200418[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L200534:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L200420:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T200419[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T200532
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T201032 DD	0ffffffffH
	DD	FLAT:$L200546
$T201024 DD	019930520H
	DD	01H
	DD	FLAT:$T201032
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T200541 = -80						; size = 28
$T200540 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L195085

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T200541[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T200541[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T200541[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T200541[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T200541[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T200540[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T200540[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T200540[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L195085:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L195093

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L201027
$L195093:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L195095

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L201027
$L195095:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L195097
$L201027:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L195098

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L195098:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L195099

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L195102
$L195099:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L195101

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L195102
$L195101:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L195102:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L195103

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L200542
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L200543
$L200542:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L200543:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L195103:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L200861

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L200544
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L200861
$L200544:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L200861
$L195097:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L195106

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L195107
$L195106:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L195108

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L195108:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L195107:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L195109

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L195112
$L195109:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L195111

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L195112
$L195111:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L195112:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L200861:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L195113

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L195116
  0018e	8b ff		 npad	 2
$L195114:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L195116

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L195117

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L195118

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L195118:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L201030

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L195121
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L201031
$L195121:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L195123

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L195123:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L195116
$L195117:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L195125

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L195125:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L201030

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L195128
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L195128
$L201031:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L201030:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L195114

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L195116
$L195128:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L195130

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L195130:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Rrotate
$L195116:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L195113:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L195131

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L195131:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L201029:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L200546:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T200541[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T201024
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1020 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

  00000	53		 push	 ebx

; 1021 : 	for (; _First != _Last; ++_Dest, ++_First)

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 0c	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	3b f3		 cmp	 esi, ebx
  0000c	74 21		 je	 SHORT $L201050
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Dest$[esp+8]
$L195399:

; 1022 : 		*_Dest = *_First;

  00013	6a ff		 push	 -1
  00015	6a 00		 push	 0
  00017	56		 push	 esi
  00018	8b cf		 mov	 ecx, edi
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0001f	83 c6 1c	 add	 esi, 28			; 0000001cH
  00022	83 c7 1c	 add	 edi, 28			; 0000001cH
  00025	3b f3		 cmp	 esi, ebx
  00027	75 ea		 jne	 SHORT $L195399

; 1023 : 	return (_Dest);

  00029	8b c7		 mov	 eax, edi
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx

; 1024 : 	}

  0002e	c3		 ret	 0
$L201050:

; 1023 : 	return (_Dest);

  0002f	8b 44 24 14	 mov	 eax, DWORD PTR __Dest$[esp+4]
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx

; 1024 : 	}

  00035	c3		 ret	 0
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 224  : 	{	// destroy [_First, _Last), arbitrary type

  00000	56		 push	 esi

; 225  : 	for (; _First != _Last; ++_First)

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __First$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR __Last$[esp+4]
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 2a		 je	 SHORT $L195496
  0000e	53		 push	 ebx
  0000f	33 db		 xor	 ebx, ebx
$L195494:

; 226  : 		_Al.destroy(_First);

  00011	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00015	72 0c		 jb	 SHORT $L201195
  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L201195:
  00023	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0002a	89 5e 14	 mov	 DWORD PTR [esi+20], ebx
  0002d	88 5e 04	 mov	 BYTE PTR [esi+4], bl
  00030	83 c6 1c	 add	 esi, 28			; 0000001cH
  00033	3b f7		 cmp	 esi, edi
  00035	75 da		 jne	 SHORT $L195494
  00037	5b		 pop	 ebx
$L195496:
  00038	5f		 pop	 edi
  00039	5e		 pop	 esi

; 227  : 	}

  0003a	c3		 ret	 0
??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z PROC NEAR ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Val$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	e8 00 00 00 00	 call	 ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0000f	83 c4 08	 add	 esp, 8

; 148  : 		}

  00012	c2 08 00	 ret	 8
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T201224 = 12						; size = 4
$T201222 = 12						; size = 4
__Where$194500 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L194490
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L194489:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L201216
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L201217
$L201216:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L201217:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L194489
$L194490:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$194500[esp+12], edx
  00045	74 33		 je	 SHORT $L201316

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T201222[esp+12]
  00050	75 1f		 jne	 SHORT $L194505
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L194505:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$194500[esp+12]
$L201316:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L194510

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T201224[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L194510:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy, COMDAT
; _this$ = ecx

; 770  : 		{	// allocate array with _Capacity elements

  00000	56		 push	 esi

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00001	33 c0		 xor	 eax, eax
  00003	57		 push	 edi

; 772  : 		if (_Capacity == 0)

  00004	8b 7c 24 0c	 mov	 edi, DWORD PTR __Capacity$[esp+4]
  00008	3b f8		 cmp	 edi, eax
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00012	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00015	75 07		 jne	 SHORT $L194864
  00017	5f		 pop	 edi

; 773  : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	5e		 pop	 esi

; 783  : 		}

  0001b	c2 04 00	 ret	 4
$L194864:

; 774  : 		else if (max_size() < _Capacity)

  0001e	81 ff 49 92 24
	09		 cmp	 edi, 153391689		; 09249249H
  00024	76 07		 jbe	 SHORT $L194866

; 775  : 			_Xlen();	// result too long

  00026	8b ce		 mov	 ecx, esi
  00028	e8 00 00 00 00	 call	 ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$L194866:

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002d	6b ff 1c	 imul	 edi, 28			; 0000001cH
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00036	03 f8		 add	 edi, eax
  00038	83 c4 04	 add	 esp, 4
  0003b	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00044	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00045	b0 01		 mov	 al, 1
  00047	5e		 pop	 esi

; 783  : 		}

  00048	c2 04 00	 ret	 4
$L201376:
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T201382 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L201714
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L201714

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L201714:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L194972
$L194971:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L201685
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L201716
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L201685
  0006e	8b ff		 npad	 2
$L201699:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L201699
  0007b	eb 1d		 jmp	 SHORT $L201685
$L201716:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L201688
$L201687:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L201688
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L201687
$L201688:
  00098	8b f0		 mov	 esi, eax
$L201685:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T201382[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L194971
$L194972:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
_TEXT	ENDS
PUBLIC	??$copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ; std::copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT
__Cat$201725 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z PROC NEAR ; std::copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1039 : 	{	// copy [_First, _Last) to [_Dest, ...)

  00000	51		 push	 ecx

; 1040 : 	return (_Copy_opt(_First, _Last, _Dest, _Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$201725[esp+4]
  00004	8b 4c 24 10	 mov	 ecx, DWORD PTR __Dest$[esp]
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Last$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 0c	 mov	 eax, DWORD PTR __First$[esp+4]
  00011	51		 push	 ecx
  00012	52		 push	 edx
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1041 : 	}

  00019	83 c4 14	 add	 esp, 20			; 00000014H
  0001c	c3		 ret	 0
??$copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ENDP ; std::copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$201733 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC NEAR ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 216  : 	{	// destroy [_First, _Last)

  00000	51		 push	 ecx

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$201733[esp+4]
  00004	8b 4c 24 10	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Last$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 0c	 mov	 eax, DWORD PTR __First$[esp+4]
  00011	51		 push	 ecx
  00012	52		 push	 edx
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 218  : 	}

  00019	83 c4 14	 add	 esp, 20			; 00000014H
  0001c	c3		 ret	 0
??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T201925 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L201744
	DD	0ffffffffH
	DD	00H
$T201927 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L201737
$T201926 DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T201927
$T201919 DD	019930520H
	DD	03H
	DD	FLAT:$T201925
	DD	01H
	DD	FLAT:$T201926
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T201882 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 77   : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	53		 push	 ebx
  0001c	56		 push	 esi

; 78   : 	_FwdIt _Next = _Dest;

  0001d	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  00020	57		 push	 edi

; 79   : 
; 80   : 	_TRY_BEGIN

  00021	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00024	33 db		 xor	 ebx, ebx
  00026	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00029	89 75 ec	 mov	 DWORD PTR __Next$[ebp], esi
  0002c	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  0002f	90		 npad	 1
$L195511:

; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00030	3b 7d 0c	 cmp	 edi, DWORD PTR __Last$[ebp]
  00033	74 56		 je	 SHORT $L195513

; 82   : 		_Al.construct(_Dest, *_First);

  00035	89 75 08	 mov	 DWORD PTR $T201882[ebp], esi
  00038	3b f3		 cmp	 esi, ebx
  0003a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0003e	74 18		 je	 SHORT $L201883
  00040	6a ff		 push	 -1
  00042	53		 push	 ebx
  00043	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0004a	89 5e 14	 mov	 DWORD PTR [esi+20], ebx
  0004d	57		 push	 edi
  0004e	8b ce		 mov	 ecx, esi
  00050	88 5e 04	 mov	 BYTE PTR [esi+4], bl
  00053	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$L201883:
  00058	83 c6 1c	 add	 esi, 28			; 0000001cH
  0005b	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+12], bl
  0005e	89 75 10	 mov	 DWORD PTR __Dest$[ebp], esi
  00061	83 c7 1c	 add	 edi, 28			; 0000001cH
  00064	eb ca		 jmp	 SHORT $L195511
$L201737:

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)

  00066	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  00069	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0006c	3b f7		 cmp	 esi, edi
  0006e	74 12		 je	 SHORT $L195516
  00070	8b 5d 14	 mov	 ebx, DWORD PTR __Al$[ebp]
$L195514:

; 85   : 		_Al.destroy(_Next);

  00073	56		 push	 esi
  00074	8b cb		 mov	 ecx, ebx
  00076	e8 00 00 00 00	 call	 ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
  0007b	83 c6 1c	 add	 esi, 28			; 0000001cH
  0007e	3b f7		 cmp	 esi, edi
  00080	75 f1		 jne	 SHORT $L195514
$L195516:

; 86   : 	_RERAISE;

  00082	33 db		 xor	 ebx, ebx
  00084	53		 push	 ebx
  00085	53		 push	 ebx
  00086	e8 00 00 00 00	 call	 __CxxThrowException@8
$L195513:

; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0008e	5f		 pop	 edi
  0008f	8b c6		 mov	 eax, esi
  00091	5e		 pop	 esi
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$L201924:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L201744:
  00000	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00003	50		 push	 eax
  00004	8b 4d 08	 mov	 ecx, DWORD PTR $T201882[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T201919
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T201992 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T201992[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$202064 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Cat$202064[esp-4]
  00004	8b 54 24 04	 mov	 edx, DWORD PTR __First$[esp-4]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	8b 4c 24 10	 mov	 ecx, DWORD PTR __Last$[esp+4]
  0000e	51		 push	 ecx
  0000f	52		 push	 edx
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 788  : 		}

  00018	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$202091 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	85 c0		 test	 eax, eax
  00009	74 1c		 je	 SHORT $L202096

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);

  0000b	8b 4c 24 04	 mov	 ecx, DWORD PTR __Cat$202091[esp+8]
  0000f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00012	51		 push	 ecx
  00013	56		 push	 esi
  00014	52		 push	 edx
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00024	83 c4 14	 add	 esp, 20			; 00000014H
$L202096:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00027	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0002e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0003c	5e		 pop	 esi

; 798  : 		}

  0003d	59		 pop	 ecx
  0003e	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$202106 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$202106[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T202176 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T202176[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$202243 = -4					; size = 1
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	85 c0		 test	 eax, eax
  00009	74 1c		 je	 SHORT $L202245
  0000b	8b 4c 24 04	 mov	 ecx, DWORD PTR __Cat$202243[esp+8]
  0000f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00012	51		 push	 ecx
  00013	56		 push	 esi
  00014	52		 push	 edx
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00024	83 c4 14	 add	 esp, 20			; 00000014H
$L202245:
  00027	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0002e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0003c	5e		 pop	 esi

; 389  : 		}

  0003d	59		 pop	 ecx
  0003e	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Cat$202289 = -4					; size = 1
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT
; _this$ = ecx

; 743  : 		{	// erase all

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 744  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	85 c0		 test	 eax, eax
  00009	74 1c		 je	 SHORT $L202291
  0000b	8b 4c 24 04	 mov	 ecx, DWORD PTR __Cat$202289[esp+8]
  0000f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00012	51		 push	 ecx
  00013	56		 push	 esi
  00014	52		 push	 edx
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00024	83 c4 14	 add	 esp, 20			; 00000014H
$L202291:
  00027	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0002e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00035	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0003c	5e		 pop	 esi

; 745  : 		}

  0003d	59		 pop	 ecx
  0003e	c3		 ret	 0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$202305 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$202305[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T202410 = -4						; size = 4
??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T202410[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::~map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >
_TEXT	ENDS
PUBLIC	??_7CDPCoreSrvr@@6B@				; CDPCoreSrvr::`vftable'
PUBLIC	??_GCDPCoreSrvr@@UAEPAXI@Z			; CDPCoreSrvr::`scalar deleting destructor'
PUBLIC	??1CDPCoreSrvr@@UAE@XZ				; CDPCoreSrvr::~CDPCoreSrvr
EXTRN	??_ECDPCoreSrvr@@UAEPAXI@Z:NEAR			; CDPCoreSrvr::`vector deleting destructor'
EXTRN	??1CDPMng@@UAE@XZ:NEAR				; CDPMng::~CDPMng
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T202603 DD	0ffffffffH
	DD	FLAT:$L202438
$T202601 DD	019930520H
	DD	01H
	DD	FLAT:$T202603
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CDPCoreSrvr@@6B@
CONST	SEGMENT
??_7CDPCoreSrvr@@6B@ DD FLAT:??_ECDPCoreSrvr@@UAEPAXI@Z	; CDPCoreSrvr::`vftable'
	DD	FLAT:?SysMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
	DD	FLAT:?UserMessageHandler@CDPCoreSrvr@@UAEXPAUDPMSG_GENERIC@@KK@Z
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
CONST	ENDS
;	COMDAT ??1CDPCoreSrvr@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T202573 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDPCoreSrvr@@UAE@XZ PROC NEAR			; CDPCoreSrvr::~CDPCoreSrvr, COMDAT
; _this$ = ecx

; 58   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CDPCoreSrvr@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	89 7c 24 08	 mov	 DWORD PTR _this$[esp+28], edi
  00020	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET FLAT:??_7CDPCoreSrvr@@6B@

; 59   : 
; 60   : }

  00026	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  0002e	50		 push	 eax
  0002f	51		 push	 ecx
  00030	8d 44 24 14	 lea	 eax, DWORD PTR $T202573[esp+36]
  00034	50		 push	 eax
  00035	8b ce		 mov	 ecx, esi
  00037	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::erase
  00044	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b cf		 mov	 ecx, edi
  00052	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00059	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00060	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00068	e8 00 00 00 00	 call	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
  0006d	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L202438:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
__ehhandler$??1CDPCoreSrvr@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T202601
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CDPCoreSrvr@@UAE@XZ ENDP				; CDPCoreSrvr::~CDPCoreSrvr
PUBLIC	??0?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >::map<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> > >
_TEXT	ENDS
PUBLIC	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Cat$202866 = 8					; size = 1
__Cat$202890 = 8					; size = 1
__Cat$202831 = 8					; size = 1
__Cat$202806 = 8					; size = 1
__Right$ = 8						; size = 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z PROC NEAR ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=, COMDAT
; _this$ = ecx

; 392  : 		{	// assign _Right

  00000	55		 push	 ebp

; 393  : 		if (this != &_Right)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Right$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	3b f5		 cmp	 esi, ebp
  0000a	0f 84 71 01 00
	00		 je	 $L202902

; 394  : 			{	// worth doing
; 395  : 
; 396  : 
; 397  : 			if (_Right.size() == 0)

  00010	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00013	85 c0		 test	 eax, eax
  00015	74 1a		 je	 SHORT $L202900
  00017	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  0001a	2b c8		 sub	 ecx, eax
  0001c	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00021	f7 e9		 imul	 ecx
  00023	03 d1		 add	 edx, ecx
  00025	c1 fa 04	 sar	 edx, 4
  00028	8b ca		 mov	 ecx, edx
  0002a	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0002d	03 ca		 add	 ecx, edx
  0002f	75 0e		 jne	 SHORT $L194555
$L202900:

; 398  : 				clear();	// new sequence empty, free storage

  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

; 422  : 				}
; 423  : 			}
; 424  : 		return (*this);

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	5d		 pop	 ebp

; 425  : 		}

  0003c	c2 04 00	 ret	 4
$L194555:
  0003f	53		 push	 ebx

; 399  : 			else if (_Right.size() <= size())

  00040	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00043	85 db		 test	 ebx, ebx
  00045	57		 push	 edi
  00046	75 04		 jne	 SHORT $L202794
  00048	33 c0		 xor	 eax, eax
  0004a	eb 18		 jmp	 SHORT $L202795
$L202794:
  0004c	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0004f	2b fb		 sub	 edi, ebx
  00051	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00056	f7 ef		 imul	 edi
  00058	03 d7		 add	 edx, edi
  0005a	c1 fa 04	 sar	 edx, 4
  0005d	8b c2		 mov	 eax, edx
  0005f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00062	03 c2		 add	 eax, edx
$L202795:
  00064	3b c8		 cmp	 ecx, eax
  00066	77 6d		 ja	 SHORT $L194557

; 400  : 				{	// enough elements, copy new and destroy old
; 401  : 				pointer _Ptr = copy(_Right._Myfirst, _Right._Mylast,
; 402  : 					_Myfirst);	// copy new

  00068	8b 44 24 14	 mov	 eax, DWORD PTR __Cat$202806[esp+12]
  0006c	50		 push	 eax
  0006d	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00070	53		 push	 ebx
  00071	50		 push	 eax
  00072	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 403  : 				_Destroy(_Ptr, _Mylast);	// destroy old

  0007b	8b 4c 24 24	 mov	 ecx, DWORD PTR __Cat$202831[esp+28]
  0007f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00082	51		 push	 ecx
  00083	56		 push	 esi
  00084	52		 push	 edx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 404  : 				_Mylast = _Myfirst + _Right.size();

  0008b	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0008e	83 c4 20	 add	 esp, 32			; 00000020H
  00091	85 c0		 test	 eax, eax
  00093	75 14		 jne	 SHORT $L202840
  00095	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00098	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0009b	5f		 pop	 edi
  0009c	03 c1		 add	 eax, ecx

; 410  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

  0009e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a1	5b		 pop	 ebx

; 422  : 				}
; 423  : 			}
; 424  : 		return (*this);

  000a2	8b c6		 mov	 eax, esi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp

; 425  : 		}

  000a6	c2 04 00	 ret	 4

; 404  : 				_Mylast = _Myfirst + _Right.size();

$L202840:
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  000ac	2b c8		 sub	 ecx, eax
  000ae	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000b3	f7 e9		 imul	 ecx
  000b5	03 d1		 add	 edx, ecx
  000b7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ba	c1 fa 04	 sar	 edx, 4
  000bd	8b c2		 mov	 eax, edx
  000bf	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000c2	03 c2		 add	 eax, edx
  000c4	6b c0 1c	 imul	 eax, 28			; 0000001cH
  000c7	5f		 pop	 edi
  000c8	03 c1		 add	 eax, ecx

; 410  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

  000ca	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000cd	5b		 pop	 ebx

; 422  : 				}
; 423  : 			}
; 424  : 		return (*this);

  000ce	8b c6		 mov	 eax, esi
  000d0	5e		 pop	 esi
  000d1	5d		 pop	 ebp

; 425  : 		}

  000d2	c2 04 00	 ret	 4
$L194557:

; 405  : 				}
; 406  : 			else if (_Right.size() <= capacity())

  000d5	85 db		 test	 ebx, ebx
  000d7	75 04		 jne	 SHORT $L202853
  000d9	33 c0		 xor	 eax, eax
  000db	eb 18		 jmp	 SHORT $L202854
$L202853:
  000dd	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  000e0	2b fb		 sub	 edi, ebx
  000e2	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000e7	f7 ef		 imul	 edi
  000e9	03 d7		 add	 edx, edi
  000eb	c1 fa 04	 sar	 edx, 4
  000ee	8b c2		 mov	 eax, edx
  000f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f3	03 c2		 add	 eax, edx
$L202854:
  000f5	3b c8		 cmp	 ecx, eax
  000f7	77 41		 ja	 SHORT $L194567

; 407  : 				{	// enough room, copy and construct new
; 408  : 				pointer _Ptr = _Right._Myfirst + size();

  000f9	8b ce		 mov	 ecx, esi
  000fb	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size

; 409  : 				copy(_Right._Myfirst, _Ptr, _Myfirst);

  00100	8b 4c 24 14	 mov	 ecx, DWORD PTR __Cat$202866[esp+12]
  00104	8b f8		 mov	 edi, eax
  00106	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00109	6b ff 1c	 imul	 edi, 28			; 0000001cH
  0010c	51		 push	 ecx
  0010d	03 f8		 add	 edi, eax
  0010f	53		 push	 ebx
  00110	57		 push	 edi
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 410  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

  00117	8b 54 24 24	 mov	 edx, DWORD PTR __Cat$202890[esp+28]
  0011b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0011e	8b 6d 08	 mov	 ebp, DWORD PTR [ebp+8]
  00121	52		 push	 edx
  00122	56		 push	 esi
  00123	50		 push	 eax
  00124	55		 push	 ebp
  00125	57		 push	 edi
  00126	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0012b	83 c4 24	 add	 esp, 36			; 00000024H
  0012e	5f		 pop	 edi
  0012f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00132	5b		 pop	 ebx

; 422  : 				}
; 423  : 			}
; 424  : 		return (*this);

  00133	8b c6		 mov	 eax, esi
  00135	5e		 pop	 esi
  00136	5d		 pop	 ebp

; 425  : 		}

  00137	c2 04 00	 ret	 4
$L194567:

; 411  : 				}
; 412  : 			else
; 413  : 				{	// not enough room, allocate new array and construct new
; 414  : 				if (_Myfirst != 0)

  0013a	85 db		 test	 ebx, ebx
  0013c	74 18		 je	 SHORT $L202897

; 415  : 					{	// discard old array
; 416  : 					_Destroy(_Myfirst, _Mylast);

  0013e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00141	50		 push	 eax
  00142	53		 push	 ebx
  00143	8b ce		 mov	 ecx, esi
  00145	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 417  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0014a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00153	83 c4 04	 add	 esp, 4
$L202897:

; 418  : 					}
; 419  : 				if (_Buy(_Right.size()))

  00156	8b cd		 mov	 ecx, ebp
  00158	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  0015d	50		 push	 eax
  0015e	8b ce		 mov	 ecx, esi
  00160	e8 00 00 00 00	 call	 ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
  00165	84 c0		 test	 al, al
  00167	74 16		 je	 SHORT $L202901

; 420  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 421  : 						_Myfirst);

  00169	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0016c	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0016f	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00172	52		 push	 edx
  00173	50		 push	 eax
  00174	51		 push	 ecx
  00175	8b ce		 mov	 ecx, esi
  00177	e8 00 00 00 00	 call	 ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  0017c	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L202901:
  0017f	5f		 pop	 edi
  00180	5b		 pop	 ebx
$L202902:

; 422  : 				}
; 423  : 			}
; 424  : 		return (*this);

  00181	8b c6		 mov	 eax, esi
  00183	5e		 pop	 esi
  00184	5d		 pop	 ebp

; 425  : 		}

  00185	c2 04 00	 ret	 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
_TEXT	ENDS
PUBLIC	??0CDPCoreSrvr@@QAE@XZ				; CDPCoreSrvr::CDPCoreSrvr
EXTRN	??0CDPMng@@QAE@XZ:NEAR				; CDPMng::CDPMng
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T203301 DD	0ffffffffH
	DD	FLAT:$L202995
	DD	00H
	DD	FLAT:$L202996
$T203299 DD	019930520H
	DD	02H
	DD	FLAT:$T203301
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ??0CDPCoreSrvr@@QAE@XZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T202992 = -32						; size = 8
$T202989 = -32						; size = 8
$T202986 = -32						; size = 8
$T202983 = -32						; size = 8
$T202980 = -32						; size = 8
$T202977 = -32						; size = 8
$T202974 = -32						; size = 8
$T202971 = -32						; size = 8
$T202968 = -32						; size = 8
$T202965 = -32						; size = 8
$T202962 = -32						; size = 8
$T202959 = -32						; size = 8
$T202956 = -32						; size = 8
$T202953 = -32						; size = 8
$T202950 = -32						; size = 8
$T202947 = -32						; size = 8
$T202944 = -32						; size = 8
$T202941 = -32						; size = 8
$T202938 = -32						; size = 8
$T202935 = -32						; size = 8
$T202932 = -32						; size = 8
$T202929 = -32						; size = 8
$T202926 = -32						; size = 8
$T202923 = -32						; size = 8
$T202920 = -32						; size = 8
$T202917 = -32						; size = 8
$T202914 = -32						; size = 8
$T202911 = -32						; size = 8
$T202908 = -32						; size = 8
$T202994 = -24						; size = 8
$T202991 = -24						; size = 8
$T202988 = -24						; size = 8
$T202985 = -24						; size = 8
$T202982 = -24						; size = 8
$T202979 = -24						; size = 8
$T202976 = -24						; size = 8
$T202973 = -24						; size = 8
$T202970 = -24						; size = 8
$T202967 = -24						; size = 8
$T202964 = -24						; size = 8
$T202961 = -24						; size = 8
$T202958 = -24						; size = 8
$T202955 = -24						; size = 8
$T202952 = -24						; size = 8
$T202949 = -24						; size = 8
$T202946 = -24						; size = 8
$T202943 = -24						; size = 8
$T202940 = -24						; size = 8
$T202937 = -24						; size = 8
$T202934 = -24						; size = 8
$T202931 = -24						; size = 8
$T202928 = -24						; size = 8
$T202925 = -24						; size = 8
$T202922 = -24						; size = 8
$T202919 = -24						; size = 8
$T202916 = -24						; size = 8
$T202913 = -24						; size = 8
$T202910 = -24						; size = 8
__$EHRec$ = -12						; size = 12
??0CDPCoreSrvr@@QAE@XZ PROC NEAR			; CDPCoreSrvr::CDPCoreSrvr, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$??0CDPCoreSrvr@@QAE@XZ
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8b f9		 mov	 edi, ecx
  00022	89 7c 24 0c	 mov	 DWORD PTR _this$[esp+48], edi
  00026	e8 00 00 00 00	 call	 ??0CDPMng@@QAE@XZ	; CDPMng::CDPMng
  0002b	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  0002e	8b ce		 mov	 ecx, esi
  00030	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 0
  00038	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET FLAT:??_7CDPCoreSrvr@@6B@
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::_Buynode
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00046	b1 01		 mov	 cl, 1
  00048	88 48 15	 mov	 BYTE PTR [eax+21], cl
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	89 00		 mov	 DWORD PTR [eax], eax
  00056	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00059	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0005c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00063	88 4c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], cl

; 16   : 	BEGIN_MSG;
; 17   : #ifdef __RT_1025
; 18   : 	ON_MSG( PACKETTYPE_ADD_MESSENGER, OnAddMessenger );

  00067	8d 44 24 10	 lea	 eax, DWORD PTR $T202908[esp+48]
  0006b	50		 push	 eax
  0006c	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202910[esp+52]
  00070	51		 push	 ecx
  00071	8b ce		 mov	 ecx, esi
  00073	c7 44 24 18 00
	00 00 70	 mov	 DWORD PTR $T202908[esp+56], 1879048192 ; 70000000H
  0007b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202908[esp+60], OFFSET FLAT:?OnAddMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAddMessenger
  00083	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 19   : 	ON_MSG( PACKETTYPE_DELETE_MESSENGER, OnDeleteMessenger );

  00088	8d 54 24 10	 lea	 edx, DWORD PTR $T202911[esp+48]
  0008c	52		 push	 edx
  0008d	8d 44 24 1c	 lea	 eax, DWORD PTR $T202913[esp+52]
  00091	50		 push	 eax
  00092	8b ce		 mov	 ecx, esi
  00094	c7 44 24 18 01
	00 00 70	 mov	 DWORD PTR $T202911[esp+56], 1879048193 ; 70000001H
  0009c	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202911[esp+60], OFFSET FLAT:?OnDeleteMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnDeleteMessenger
  000a4	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 20   : 	ON_MSG( PACKETTYPE_UPDATE_MESSENGER, OnUpdateMessenger );

  000a9	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202914[esp+48]
  000ad	51		 push	 ecx
  000ae	8d 54 24 1c	 lea	 edx, DWORD PTR $T202916[esp+52]
  000b2	52		 push	 edx
  000b3	8b ce		 mov	 ecx, esi
  000b5	c7 44 24 18 02
	00 00 70	 mov	 DWORD PTR $T202914[esp+56], 1879048194 ; 70000002H
  000bd	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202914[esp+60], OFFSET FLAT:?OnUpdateMessenger@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnUpdateMessenger
  000c5	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 21   : #else	// __RT_1025
; 22   : 	ON_MSG( PACKETTYPE_REMOVEFRIEND, OnRemoveFriend );
; 23   : #endif	// __RT_1025
; 24   : 	ON_MSG( PACKETTYPE_ADDPARTYNAME, OnAddPartyName );

  000ca	8d 44 24 10	 lea	 eax, DWORD PTR $T202917[esp+48]
  000ce	50		 push	 eax
  000cf	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202919[esp+52]
  000d3	51		 push	 ecx
  000d4	8b ce		 mov	 ecx, esi
  000d6	c7 44 24 18 71
	ff ff ff	 mov	 DWORD PTR $T202917[esp+56], -143 ; ffffff71H
  000de	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202917[esp+60], OFFSET FLAT:?OnAddPartyName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAddPartyName
  000e6	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 25   : 	ON_MSG( PACKETTYPE_TAG, OnTag );

  000eb	8d 54 24 10	 lea	 edx, DWORD PTR $T202920[esp+48]
  000ef	52		 push	 edx
  000f0	8d 44 24 1c	 lea	 eax, DWORD PTR $T202922[esp+52]
  000f4	50		 push	 eax
  000f5	8b ce		 mov	 ecx, esi
  000f7	c7 44 24 18 06
	b0 00 f0	 mov	 DWORD PTR $T202920[esp+56], -268390394 ; f000b006H
  000ff	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202920[esp+60], OFFSET FLAT:?OnTag@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnTag
  00107	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 26   : 
; 27   : 	ON_MSG( PACKETTYPE_CREATE_GUILD, OnCreateGuild );

  0010c	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202923[esp+48]
  00110	51		 push	 ecx
  00111	8d 54 24 1c	 lea	 edx, DWORD PTR $T202925[esp+52]
  00115	52		 push	 edx
  00116	8b ce		 mov	 ecx, esi
  00118	c7 44 24 18 31
	ff ff ff	 mov	 DWORD PTR $T202923[esp+56], -207 ; ffffff31H
  00120	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202923[esp+60], OFFSET FLAT:?OnCreateGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnCreateGuild
  00128	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 28   : 	ON_MSG( PACKETTYPE_DESTROY_GUILD, OnDestroyGuild );

  0012d	8d 44 24 10	 lea	 eax, DWORD PTR $T202926[esp+48]
  00131	50		 push	 eax
  00132	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202928[esp+52]
  00136	51		 push	 ecx
  00137	8b ce		 mov	 ecx, esi
  00139	c7 44 24 18 32
	ff ff ff	 mov	 DWORD PTR $T202926[esp+56], -206 ; ffffff32H
  00141	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202926[esp+60], OFFSET FLAT:?OnDestroyGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnDestroyGuild
  00149	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 29   : 	ON_MSG( PACKETTYPE_ADD_GUILD_MEMBER, OnAddGuildMember );

  0014e	c7 44 24 10 33
	ff ff ff	 mov	 DWORD PTR $T202929[esp+48], -205 ; ffffff33H
  00156	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR $T202929[esp+52], OFFSET FLAT:?OnAddGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAddGuildMember
  0015e	8d 54 24 10	 lea	 edx, DWORD PTR $T202929[esp+48]
  00162	52		 push	 edx
  00163	8d 44 24 1c	 lea	 eax, DWORD PTR $T202931[esp+52]
  00167	50		 push	 eax
  00168	8b ce		 mov	 ecx, esi
  0016a	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 30   : 	ON_MSG( PACKETTYPE_REMOVE_GUILD_MEMBER, OnRemoveGuildMember );

  0016f	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202932[esp+48]
  00173	51		 push	 ecx
  00174	8d 54 24 1c	 lea	 edx, DWORD PTR $T202934[esp+52]
  00178	52		 push	 edx
  00179	8b ce		 mov	 ecx, esi
  0017b	c7 44 24 18 34
	ff ff ff	 mov	 DWORD PTR $T202932[esp+56], -204 ; ffffff34H
  00183	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202932[esp+60], OFFSET FLAT:?OnRemoveGuildMember@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnRemoveGuildMember
  0018b	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 31   : 	ON_MSG( PACKETTYPE_CD_GUILD_LOGO, OnGuildLogo );

  00190	8d 44 24 10	 lea	 eax, DWORD PTR $T202935[esp+48]
  00194	50		 push	 eax
  00195	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202937[esp+52]
  00199	51		 push	 ecx
  0019a	8b ce		 mov	 ecx, esi
  0019c	c7 44 24 18 16
	b0 00 f0	 mov	 DWORD PTR $T202935[esp+56], -268390378 ; f000b016H
  001a4	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202935[esp+60], OFFSET FLAT:?OnGuildLogo@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildLogo
  001ac	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 32   : 	ON_MSG( PACKETTYPE_CD_GUILD_NOTICE, OnGuildNotice );

  001b1	8d 54 24 10	 lea	 edx, DWORD PTR $T202938[esp+48]
  001b5	52		 push	 edx
  001b6	8d 44 24 1c	 lea	 eax, DWORD PTR $T202940[esp+52]
  001ba	50		 push	 eax
  001bb	8b ce		 mov	 ecx, esi
  001bd	c7 44 24 18 18
	b0 00 f0	 mov	 DWORD PTR $T202938[esp+56], -268390376 ; f000b018H
  001c5	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202938[esp+60], OFFSET FLAT:?OnGuildNotice@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildNotice
  001cd	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 33   : 	ON_MSG( PACKETTYPE_GUILD_AUTHORITY, OnGuildAuthority );

  001d2	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202941[esp+48]
  001d6	51		 push	 ecx
  001d7	8d 54 24 1c	 lea	 edx, DWORD PTR $T202943[esp+52]
  001db	52		 push	 edx
  001dc	8b ce		 mov	 ecx, esi
  001de	c7 44 24 18 26
	b0 00 f0	 mov	 DWORD PTR $T202941[esp+56], -268390362 ; f000b026H
  001e6	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202941[esp+60], OFFSET FLAT:?OnGuildAuthority@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildAuthority
  001ee	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 34   : 	ON_MSG( PACKETTYPE_GUILD_PENYA, OnGuildPenya );

  001f3	8d 44 24 10	 lea	 eax, DWORD PTR $T202944[esp+48]
  001f7	50		 push	 eax
  001f8	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202946[esp+52]
  001fc	51		 push	 ecx
  001fd	8b ce		 mov	 ecx, esi
  001ff	c7 44 24 18 27
	b0 00 f0	 mov	 DWORD PTR $T202944[esp+56], -268390361 ; f000b027H
  00207	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202944[esp+60], OFFSET FLAT:?OnGuildPenya@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildPenya
  0020f	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 35   : 	ON_MSG( PACKETTYPE_GUILD_SETNAME, OnGuildSetName );

  00214	8d 54 24 10	 lea	 edx, DWORD PTR $T202947[esp+48]
  00218	52		 push	 edx
  00219	8d 44 24 1c	 lea	 eax, DWORD PTR $T202949[esp+52]
  0021d	50		 push	 eax
  0021e	8b ce		 mov	 ecx, esi
  00220	c7 44 24 18 32
	b0 00 f0	 mov	 DWORD PTR $T202947[esp+56], -268390350 ; f000b032H
  00228	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202947[esp+60], OFFSET FLAT:?OnGuildSetName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildSetName
  00230	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 36   : 	ON_MSG( PACKETTYPE_GUILD_MEMBER_LEVEL, OnGuildMemberLv );

  00235	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202950[esp+48]
  00239	51		 push	 ecx
  0023a	8d 54 24 1c	 lea	 edx, DWORD PTR $T202952[esp+52]
  0023e	52		 push	 edx
  0023f	8b ce		 mov	 ecx, esi
  00241	c7 44 24 18 3a
	ff ff ff	 mov	 DWORD PTR $T202950[esp+56], -198 ; ffffff3aH
  00249	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202950[esp+60], OFFSET FLAT:?OnGuildMemberLv@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildMemberLv
  00251	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 37   : 	ON_MSG( PACKETTYPE_GUILD_CLASS, OnGuildClass );

  00256	8d 44 24 10	 lea	 eax, DWORD PTR $T202953[esp+48]
  0025a	50		 push	 eax
  0025b	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202955[esp+52]
  0025f	51		 push	 ecx
  00260	8b ce		 mov	 ecx, esi
  00262	c7 44 24 18 74
	ff ff ff	 mov	 DWORD PTR $T202953[esp+56], -140 ; ffffff74H
  0026a	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202953[esp+60], OFFSET FLAT:?OnGuildClass@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildClass
  00272	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 38   : 	ON_MSG( PACKETTYPE_GUILD_NICKNAME, OnGuildNickName );

  00277	8d 54 24 10	 lea	 edx, DWORD PTR $T202956[esp+48]
  0027b	52		 push	 edx
  0027c	8d 44 24 1c	 lea	 eax, DWORD PTR $T202958[esp+52]
  00280	50		 push	 eax
  00281	8b ce		 mov	 ecx, esi
  00283	c7 44 24 18 75
	ff ff ff	 mov	 DWORD PTR $T202956[esp+56], -139 ; ffffff75H
  0028b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202956[esp+60], OFFSET FLAT:?OnGuildNickName@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnGuildNickName
  00293	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 39   : 	ON_MSG( PACKETTYPE_ACPT_GUILD_WAR, OnAcptWar );

  00298	c7 44 24 10 37
	b0 00 f0	 mov	 DWORD PTR $T202959[esp+48], -268390345 ; f000b037H
  002a0	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR $T202959[esp+52], OFFSET FLAT:?OnAcptWar@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAcptWar
  002a8	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202959[esp+48]
  002ac	51		 push	 ecx
  002ad	8d 54 24 1c	 lea	 edx, DWORD PTR $T202961[esp+52]
  002b1	52		 push	 edx
  002b2	8b ce		 mov	 ecx, esi
  002b4	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 40   : 	ON_MSG( PACKETTYPE_WAR_END, OnWarEnd );

  002b9	8d 44 24 10	 lea	 eax, DWORD PTR $T202962[esp+48]
  002bd	50		 push	 eax
  002be	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202964[esp+52]
  002c2	51		 push	 ecx
  002c3	8b ce		 mov	 ecx, esi
  002c5	c7 44 24 18 46
	b0 00 f0	 mov	 DWORD PTR $T202962[esp+56], -268390330 ; f000b046H
  002cd	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202962[esp+60], OFFSET FLAT:?OnWarEnd@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnWarEnd
  002d5	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 41   : 	ON_MSG( PACKETTYPE_SURRENDER, OnSurrender );

  002da	8d 54 24 10	 lea	 edx, DWORD PTR $T202965[esp+48]
  002de	52		 push	 edx
  002df	8d 44 24 1c	 lea	 eax, DWORD PTR $T202967[esp+52]
  002e3	50		 push	 eax
  002e4	8b ce		 mov	 ecx, esi
  002e6	c7 44 24 18 47
	b0 00 f0	 mov	 DWORD PTR $T202965[esp+56], -268390329 ; f000b047H
  002ee	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202965[esp+60], OFFSET FLAT:?OnSurrender@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnSurrender
  002f6	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 42   : 	ON_MSG( PACKETTYPE_WAR_DEAD, OnWarDead );

  002fb	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202968[esp+48]
  002ff	51		 push	 ecx
  00300	8d 54 24 1c	 lea	 edx, DWORD PTR $T202970[esp+52]
  00304	52		 push	 edx
  00305	8b ce		 mov	 ecx, esi
  00307	c7 44 24 18 45
	b0 00 f0	 mov	 DWORD PTR $T202968[esp+56], -268390331 ; f000b045H
  0030f	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202968[esp+60], OFFSET FLAT:?OnWarDead@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnWarDead
  00317	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 43   : 	ON_MSG( PACKETTYPE_WAR_MASTER_ABSENT, OnWarMasterAbsent );

  0031c	8d 44 24 10	 lea	 eax, DWORD PTR $T202971[esp+48]
  00320	50		 push	 eax
  00321	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202973[esp+52]
  00325	51		 push	 ecx
  00326	8b ce		 mov	 ecx, esi
  00328	c7 44 24 18 4b
	b0 00 f0	 mov	 DWORD PTR $T202971[esp+56], -268390325 ; f000b04bH
  00330	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202971[esp+60], OFFSET FLAT:?OnWarMasterAbsent@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnWarMasterAbsent
  00338	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 44   : 	ON_MSG( PACKETTYPE_CD_ADDVOTE ,			OnAddVote );

  0033d	8d 54 24 10	 lea	 edx, DWORD PTR $T202974[esp+48]
  00341	52		 push	 edx
  00342	8d 44 24 1c	 lea	 eax, DWORD PTR $T202976[esp+52]
  00346	50		 push	 eax
  00347	8b ce		 mov	 ecx, esi
  00349	c7 44 24 18 3c
	b0 00 f0	 mov	 DWORD PTR $T202974[esp+56], -268390340 ; f000b03cH
  00351	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202974[esp+60], OFFSET FLAT:?OnAddVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnAddVote
  00359	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 45   : 	ON_MSG( PACKETTYPE_CD_REMOVEVOTE,		OnRemoveVote );

  0035e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202977[esp+48]
  00362	51		 push	 ecx
  00363	8d 54 24 1c	 lea	 edx, DWORD PTR $T202979[esp+52]
  00367	52		 push	 edx
  00368	8b ce		 mov	 ecx, esi
  0036a	c7 44 24 18 3d
	b0 00 f0	 mov	 DWORD PTR $T202977[esp+56], -268390339 ; f000b03dH
  00372	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202977[esp+60], OFFSET FLAT:?OnRemoveVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnRemoveVote
  0037a	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 46   : 	ON_MSG( PACKETTYPE_CD_CLOSEVOTE	,		OnCloseVote );

  0037f	8d 44 24 10	 lea	 eax, DWORD PTR $T202980[esp+48]
  00383	50		 push	 eax
  00384	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202982[esp+52]
  00388	51		 push	 ecx
  00389	8b ce		 mov	 ecx, esi
  0038b	c7 44 24 18 3e
	b0 00 f0	 mov	 DWORD PTR $T202980[esp+56], -268390338 ; f000b03eH
  00393	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202980[esp+60], OFFSET FLAT:?OnCloseVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnCloseVote
  0039b	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 47   : 	ON_MSG( PACKETTYPE_CD_CASTVOTE	,		OnCastVote );

  003a0	8d 54 24 10	 lea	 edx, DWORD PTR $T202983[esp+48]
  003a4	52		 push	 edx
  003a5	8d 44 24 1c	 lea	 eax, DWORD PTR $T202985[esp+52]
  003a9	50		 push	 eax
  003aa	8b ce		 mov	 ecx, esi
  003ac	c7 44 24 18 3f
	b0 00 f0	 mov	 DWORD PTR $T202983[esp+56], -268390337 ; f000b03fH
  003b4	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202983[esp+60], OFFSET FLAT:?OnCastVote@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnCastVote
  003bc	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 48   : 	ON_MSG( PACKETTYPE_CT_WANTED	,		OnWanted );

  003c1	8d 4c 24 10	 lea	 ecx, DWORD PTR $T202986[esp+48]
  003c5	51		 push	 ecx
  003c6	8d 54 24 1c	 lea	 edx, DWORD PTR $T202988[esp+52]
  003ca	52		 push	 edx
  003cb	8b ce		 mov	 ecx, esi
  003cd	c7 44 24 18 f8
	00 ff 00	 mov	 DWORD PTR $T202986[esp+56], 16711928 ; 00ff00f8H
  003d5	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202986[esp+60], OFFSET FLAT:?OnWanted@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnWanted
  003dd	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 49   : 	ON_MSG( PACKETTYPE_SETSNOOPGUILD, OnSnoopGuild );

  003e2	8d 44 24 10	 lea	 eax, DWORD PTR $T202989[esp+48]
  003e6	c7 44 24 10 22
	00 00 00	 mov	 DWORD PTR $T202989[esp+48], 34 ; 00000022H
  003ee	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR $T202989[esp+52], OFFSET FLAT:?OnSnoopGuild@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnSnoopGuild
  003f6	50		 push	 eax
  003f7	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T202991[esp+52]
  003fb	51		 push	 ecx
  003fc	8b ce		 mov	 ecx, esi
  003fe	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 50   : 	ON_MSG( PACKETTYPE_CHG_MASTER, OnChgMaster );

  00403	8d 54 24 10	 lea	 edx, DWORD PTR $T202992[esp+48]
  00407	52		 push	 edx
  00408	8d 44 24 1c	 lea	 eax, DWORD PTR $T202994[esp+52]
  0040c	50		 push	 eax
  0040d	8b ce		 mov	 ecx, esi
  0040f	c7 44 24 18 00
	f0 00 f0	 mov	 DWORD PTR $T202992[esp+56], -268374016 ; f000f000H
  00417	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T202992[esp+60], OFFSET FLAT:?OnChgMaster@CDPCoreSrvr@@AAEXAAVCAr@@PAEK@Z ; CDPCoreSrvr::OnChgMaster
  0041f	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long),std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void (__thiscall CDPCoreSrvr::*)(CAr &,unsigned char *,unsigned long)> >,0> >::insert

; 51   : 
; 52   : #ifdef __SERVERLIST0911
; 53   : 	ON_MSG( PACKETTYPE_SERVER_ENABLE, OnServerEnable );
; 54   : #endif	// __SERVERLIST0911
; 55   : }

  00424	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  00428	8b c7		 mov	 eax, edi
  0042a	5f		 pop	 edi
  0042b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00432	5e		 pop	 esi
  00433	8b e5		 mov	 esp, ebp
  00435	5d		 pop	 ebp
  00436	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L202995:
  00000	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDPMng@@UAE@XZ	; CDPMng::~CDPMng
$L202996:
  00008	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$map@KP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@ZU?$less@K@std@@V?$allocator@U?$pair@$$CBKP8CDPCoreSrvr@@AEXAAVCAr@@PAEK@Z@std@@@4@@std@@QAE@XZ
__ehhandler$??0CDPCoreSrvr@@QAE@XZ:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T203299
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDPCoreSrvr@@QAE@XZ ENDP				; CDPCoreSrvr::CDPCoreSrvr
; Function compile flags: /Ogty
;	COMDAT ??_GCDPCoreSrvr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDPCoreSrvr@@UAEPAXI@Z PROC NEAR			; CDPCoreSrvr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CDPCoreSrvr@@UAE@XZ	; CDPCoreSrvr::~CDPCoreSrvr
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L203305
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L203305:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCDPCoreSrvr@@UAEPAXI@Z ENDP				; CDPCoreSrvr::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ		; CDPCoreSrvr::SendEventLuaNotice
EXTRN	?GetNoticeMessage@CEventLua@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:NEAR ; CEventLua::GetNoticeMessage
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T203625 DD	0ffffffffH
	DD	FLAT:$L203310
	DD	00H
	DD	FLAT:$L203311
	DD	01H
	DD	FLAT:$L203312
$T203620 DD	019930520H
	DD	03H
	DD	FLAT:$T203625
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\databaseserver\dpcoresrvr.cpp
xdata$x	ENDS
;	COMDAT ?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ
_TEXT	SEGMENT
__Cat$203614 = -16460					; size = 1
__Cat$203456 = -16460					; size = 1
_nBufSize$ = -16460					; size = 4
_vecstrMessage$ = -16456				; size = 16
$T203309 = -16440					; size = 16
$T203618 = -16424					; size = 4
_ar$ = -16420						; size = 16404
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ PROC NEAR	; CDPCoreSrvr::SendEventLuaNotice, COMDAT
; _this$ = ecx

; 484  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	b8 40 40 00 00	 mov	 eax, 16448		; 00004040H
  00013	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001a	e8 00 00 00 00	 call	 __chkstk
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c4		 xor	 eax, esp
  00026	53		 push	 ebx
  00027	55		 push	 ebp
  00028	56		 push	 esi
  00029	57		 push	 edi

; 485  : 	BEFORESEND( ar, PACKETTYPE_EVENTLUA_NOTICE );

  0002a	33 ed		 xor	 ebp, ebp
  0002c	55		 push	 ebp
  0002d	89 4c 24 38	 mov	 DWORD PTR $T203618[esp+16480], ecx
  00031	55		 push	 ebp
  00032	8d 4c 24 40	 lea	 ecx, DWORD PTR _ar$[esp+16484]
  00036	89 84 24 54 40
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+16484], eax
  0003d	e8 00 00 00 00	 call	 ??0CAr@@QAE@PAXI@Z	; CAr::CAr
  00042	6a 04		 push	 4
  00044	8d 4c 24 3c	 lea	 ecx, DWORD PTR _ar$[esp+16480]
  00048	89 ac 24 5c 40
	00 00		 mov	 DWORD PTR __$EHRec$[esp+16488], ebp
  0004f	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00054	8b 44 24 40	 mov	 eax, DWORD PTR _ar$[esp+16484]
  00058	c7 00 20 f1 00
	f0		 mov	 DWORD PTR [eax], -268373728 ; f000f120H
  0005e	83 44 24 40 04	 add	 DWORD PTR _ar$[esp+16484], 4

; 486  : 	vector<string> vecstrMessage;

  00063	89 6c 24 18	 mov	 DWORD PTR _vecstrMessage$[esp+16480], ebp
  00067	89 6c 24 1c	 mov	 DWORD PTR _vecstrMessage$[esp+16484], ebp
  0006b	89 6c 24 20	 mov	 DWORD PTR _vecstrMessage$[esp+16488], ebp

; 487  : 	vecstrMessage = prj.m_EventLua.GetNoticeMessage();

  0006f	8d 4c 24 24	 lea	 ecx, DWORD PTR $T203309[esp+16476]
  00073	51		 push	 ecx
  00074	b3 01		 mov	 bl, 1
  00076	b9 88 00 00 00	 mov	 ecx, OFFSET FLAT:?prj@@3VCProject@@A+136
  0007b	88 9c 24 5c 40
	00 00		 mov	 BYTE PTR __$EHRec$[esp+16488], bl
  00082	e8 00 00 00 00	 call	 ?GetNoticeMessage@CEventLua@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; CEventLua::GetNoticeMessage
  00087	50		 push	 eax
  00088	8d 4c 24 18	 lea	 ecx, DWORD PTR _vecstrMessage$[esp+16480]
  0008c	c6 84 24 5c 40
	00 00 02	 mov	 BYTE PTR __$EHRec$[esp+16488], 2
  00094	e8 00 00 00 00	 call	 ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
  00099	8b 44 24 28	 mov	 eax, DWORD PTR $T203309[esp+16480]
  0009d	3b c5		 cmp	 eax, ebp
  0009f	88 9c 24 58 40
	00 00		 mov	 BYTE PTR __$EHRec$[esp+16484], bl
  000a6	74 22		 je	 SHORT $L203458
  000a8	8b 54 24 10	 mov	 edx, DWORD PTR __Cat$203456[esp+16476]
  000ac	52		 push	 edx
  000ad	8b 54 24 30	 mov	 edx, DWORD PTR $T203309[esp+16488]
  000b1	8d 4c 24 28	 lea	 ecx, DWORD PTR $T203309[esp+16480]
  000b5	51		 push	 ecx
  000b6	52		 push	 edx
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000bd	8b 44 24 38	 mov	 eax, DWORD PTR $T203309[esp+16496]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
$L203458:

; 488  : 	ar << vecstrMessage.size();

  000ca	8b 7c 24 18	 mov	 edi, DWORD PTR _vecstrMessage$[esp+16480]
  000ce	3b fd		 cmp	 edi, ebp
  000d0	89 6c 24 28	 mov	 DWORD PTR $T203309[esp+16480], ebp
  000d4	89 6c 24 2c	 mov	 DWORD PTR $T203309[esp+16484], ebp
  000d8	89 6c 24 30	 mov	 DWORD PTR $T203309[esp+16488], ebp
  000dc	75 04		 jne	 SHORT $L203466
  000de	33 f6		 xor	 esi, esi
  000e0	eb 19		 jmp	 SHORT $L203467
$L203466:
  000e2	8b 4c 24 1c	 mov	 ecx, DWORD PTR _vecstrMessage$[esp+16484]
  000e6	2b cf		 sub	 ecx, edi
  000e8	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000ed	f7 e9		 imul	 ecx
  000ef	03 d1		 add	 edx, ecx
  000f1	c1 fa 04	 sar	 edx, 4
  000f4	8b f2		 mov	 esi, edx
  000f6	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  000f9	03 f2		 add	 esi, edx
$L203467:
  000fb	6a 04		 push	 4
  000fd	8d 4c 24 3c	 lea	 ecx, DWORD PTR _ar$[esp+16480]
  00101	e8 00 00 00 00	 call	 ?CheckBuf@CAr@@QAEXI@Z	; CAr::CheckBuf
  00106	8b 4c 24 40	 mov	 ecx, DWORD PTR _ar$[esp+16484]
  0010a	89 31		 mov	 DWORD PTR [ecx], esi
  0010c	83 44 24 40 04	 add	 DWORD PTR _ar$[esp+16484], 4

; 489  : 	for( DWORD i=0; i<vecstrMessage.size(); i++ )

  00111	33 f6		 xor	 esi, esi
  00113	8d 5f 04	 lea	 ebx, DWORD PTR [edi+4]
$L194380:
  00116	3b fd		 cmp	 edi, ebp
  00118	74 47		 je	 SHORT $L203622
  0011a	8b 4c 24 1c	 mov	 ecx, DWORD PTR _vecstrMessage$[esp+16484]
  0011e	2b cf		 sub	 ecx, edi
  00120	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00125	f7 e9		 imul	 ecx
  00127	03 d1		 add	 edx, ecx
  00129	c1 fa 04	 sar	 edx, 4
  0012c	8b c2		 mov	 eax, edx
  0012e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00131	03 c2		 add	 eax, edx
  00133	3b f0		 cmp	 esi, eax
  00135	73 2a		 jae	 SHORT $L203622

; 490  : 	ar.WriteString( vecstrMessage[i].c_str() );

  00137	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H
  0013b	72 12		 jb	 SHORT $L203550
  0013d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0013f	50		 push	 eax
  00140	8d 4c 24 3c	 lea	 ecx, DWORD PTR _ar$[esp+16480]
  00144	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString
  00149	46		 inc	 esi
  0014a	83 c3 1c	 add	 ebx, 28			; 0000001cH
  0014d	eb c7		 jmp	 SHORT $L194380
$L203550:
  0014f	8b c3		 mov	 eax, ebx
  00151	50		 push	 eax
  00152	8d 4c 24 3c	 lea	 ecx, DWORD PTR _ar$[esp+16480]
  00156	e8 00 00 00 00	 call	 ?WriteString@CAr@@QAEXPBD@Z ; CAr::WriteString
  0015b	46		 inc	 esi
  0015c	83 c3 1c	 add	 ebx, 28			; 0000001cH
  0015f	eb b5		 jmp	 SHORT $L194380
$L203622:

; 491  : 	SEND( ar, this, DPID_ALLPLAYERS );

  00161	8d 54 24 10	 lea	 edx, DWORD PTR _nBufSize$[esp+16476]
  00165	52		 push	 edx
  00166	8d 4c 24 3c	 lea	 ecx, DWORD PTR _ar$[esp+16480]
  0016a	e8 00 00 00 00	 call	 ?GetBuffer@CAr@@QAEPAEPAH@Z ; CAr::GetBuffer
  0016f	8b 4c 24 34	 mov	 ecx, DWORD PTR $T203618[esp+16476]
  00173	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00176	3b cd		 cmp	 ecx, ebp
  00178	74 0c		 je	 SHORT $L203555
  0017a	8b 54 24 10	 mov	 edx, DWORD PTR _nBufSize$[esp+16476]
  0017e	55		 push	 ebp
  0017f	52		 push	 edx
  00180	50		 push	 eax
  00181	e8 00 00 00 00	 call	 ?Send@CDPSock@@QAEHPADKK@Z ; CDPSock::Send
$L203555:

; 492  : }

  00186	3b fd		 cmp	 edi, ebp
  00188	74 1e		 je	 SHORT $L203615
  0018a	8b 44 24 10	 mov	 eax, DWORD PTR __Cat$203614[esp+16476]
  0018e	8b 54 24 1c	 mov	 edx, DWORD PTR _vecstrMessage$[esp+16484]
  00192	50		 push	 eax
  00193	8d 4c 24 18	 lea	 ecx, DWORD PTR _vecstrMessage$[esp+16480]
  00197	51		 push	 ecx
  00198	52		 push	 edx
  00199	57		 push	 edi
  0019a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0019f	57		 push	 edi
  001a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a5	83 c4 14	 add	 esp, 20			; 00000014H
$L203615:
  001a8	8d 4c 24 38	 lea	 ecx, DWORD PTR _ar$[esp+16476]
  001ac	c7 84 24 58 40
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+16484], -1
  001b7	e8 00 00 00 00	 call	 ??1CAr@@QAE@XZ		; CAr::~CAr
  001bc	8b 8c 24 50 40
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+16476]
  001c3	5f		 pop	 edi
  001c4	5e		 pop	 esi
  001c5	5d		 pop	 ebp
  001c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001cd	8b 8c 24 40 40
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16464]
  001d4	5b		 pop	 ebx
  001d5	33 cc		 xor	 ecx, esp
  001d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001dc	81 c4 4c 40 00
	00		 add	 esp, 16460		; 0000404cH
  001e2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L203310:
  00000	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _ar$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CAr@@QAE@XZ		; CAr::~CAr
$L203311:
  0000b	8d 8d b8 bf ff
	ff		 lea	 ecx, DWORD PTR _vecstrMessage$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$L203312:
  00016	8d 8d c8 bf ff
	ff		 lea	 ecx, DWORD PTR $T203309[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ:
  00021	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T203620
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendEventLuaNotice@CDPCoreSrvr@@QAEXXZ ENDP		; CDPCoreSrvr::SendEventLuaNotice
EXTRN	_atexit:NEAR
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Ogty
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 505  : CDPCoreSrvr		g_dpCoreSrvr;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpCoreSrvr@@3VCDPCoreSrvr@@A
  00005	e8 00 00 00 00	 call	 ??0CDPCoreSrvr@@QAE@XZ	; CDPCoreSrvr::CDPCoreSrvr
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
_$E1	ENDP
; Function compile flags: /Ogty
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_dpCoreSrvr@@3VCDPCoreSrvr@@A
  00005	e9 00 00 00 00	 jmp	 ??1CDPCoreSrvr@@UAE@XZ	; CDPCoreSrvr::~CDPCoreSrvr
_$E2	ENDP
text$yd	ENDS
PUBLIC	?g_dpCoreSrvr@@3VCDPCoreSrvr@@A			; g_dpCoreSrvr
_BSS	SEGMENT
?g_dpCoreSrvr@@3VCDPCoreSrvr@@A DB 01cH DUP (?)		; g_dpCoreSrvr
_BSS	ENDS
END
