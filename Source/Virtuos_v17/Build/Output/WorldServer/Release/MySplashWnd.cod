; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	.\MySplashWnd.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ??0CMySplashWnd@@QAE@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMySplashWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMySplashWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMySplashWnd@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CMySplashWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTimer@CMySplashWnd@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsFull@?$CStack@K@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVCCtrl@@@std@@QAE@ABKABQAVCCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMax@?$CItemContainer@VCItemElem@@@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEAAPAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEAAPAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_val@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBEABQAUtagACTMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBEABQAUtagMAGICATKMSG@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@IAE@V?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagACTMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagACTMSG@@@std@@QAEXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Deque_map@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@IAE@V?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagMAGICATKMSG@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAEXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagACTMSG@@V?$allocator@PAUtagACTMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$deque@PAUtagMAGICATKMSG@@V?$allocator@PAUtagMAGICATKMSG@@@std@@@std@@QAE@IPBV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagACTMSG@@@std@@QAEXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAUtagMAGICATKMSG@@@std@@QAEXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABVconst_iterator@?$vector@EV?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Assign@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__SPAWNREGION@CEventLua@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAU__SPAWNREGION@CEventLua@@IU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@IABU12@AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAJPAJV?$allocator@J@std@@@std@@YAPAJPAJ00AAV?$allocator@J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAJPAJ@std@@YAPAJPAJ00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagDROPITEM@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagDROPITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagDROPITEM@@V?$allocator@UtagDROPITEM@@@std@@@std@@YAXPAUtagDROPITEM@@0AAV?$allocator@UtagDROPITEM@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUWORMON@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWORMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UWORMON@@V?$allocator@UWORMON@@@std@@@std@@YAXPAUWORMON@@0AAV?$allocator@UWORMON@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEMGAME@CMiniGame@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEMGAME@CMiniGame@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEMGAME@CMiniGame@@V?$allocator@U__ITEMGAME@CMiniGame@@@std@@@std@@YAXPAU__ITEMGAME@CMiniGame@@0AAV?$allocator@U__ITEMGAME@CMiniGame@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@HV?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__ITEM@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__ITEM@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__ITEM@CExchange@@V?$allocator@U__ITEM@CExchange@@@std@@@std@@YAXPAU__ITEM@CExchange@@0AAV?$allocator@U__ITEM@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU__POINT@CExchange@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU__POINT@CExchange@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__POINT@CExchange@@V?$allocator@U__POINT@CExchange@@@std@@@std@@YAXPAU__POINT@CExchange@@0AAV?$allocator@U__POINT@CExchange@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU__SPAWNREGION@CEventLua@@PAU12@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUD3DXVECTOR3@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@0AAV?$allocator@UD3DXVECTOR3@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_GIFTBOX@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_GIFTBOX@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U_GIFTBOX@@V?$allocator@U_GIFTBOX@@@std@@@std@@YAXPAU_GIFTBOX@@0AAV?$allocator@U_GIFTBOX@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@JV?$allocator@J@std@@@std@@YAXPAJ0AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@JIJ@std@@YAXPAJIABJAAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U__SPAWNREGION@CEventLua@@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAXPAU__SPAWNREGION@CEventLua@@0AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagACTMSG@@@?$allocator@PAPAUtagACTMSG@@@std@@QAE@ABV?$allocator@PAUtagACTMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagACTMSG@@@std@@YAXPAPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUtagMAGICATKMSG@@@?$allocator@PAPAUtagMAGICATKMSG@@@std@@QAE@ABV?$allocator@PAUtagMAGICATKMSG@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAUtagMAGICATKMSG@@@std@@YAXPAPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagACTMSG@@@std@@YAXPAPAUtagACTMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAUtagMAGICATKMSG@@@std@@YAXPAPAUtagMAGICATKMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagDROPITEM@@@std@@QAEXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UWORMON@@@std@@QAEXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEMGAME@CMiniGame@@@std@@QAEXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__ITEM@CExchange@@@std@@QAEXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__POINT@CExchange@@@std@@QAEXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@ABU34@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U__SPAWNREGION@CEventLua@@@std@@QAEXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UD3DXVECTOR3@@@std@@QAEXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_GIFTBOX@@@std@@QAEXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@EV?$allocator@E@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@AAPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAEV?$allocator@E@3@@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEAAV?$allocator@E@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@JJ@std@@YAPAJPAJ00AAV?$allocator@J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAU__SPAWNREGION@CEventLua@@PAU12@V?$allocator@U__SPAWNREGION@CEventLua@@@std@@@std@@YAPAU__SPAWNREGION@CEventLua@@PAU12@00AAV?$allocator@U__SPAWNREGION@CEventLua@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAJIJ@std@@YAXPAJIABJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagDROPITEM@@@std@@YAXPAUtagDROPITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UWORMON@@@std@@YAXPAUWORMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEMGAME@CMiniGame@@@std@@YAXPAU__ITEMGAME@CMiniGame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__ITEM@CExchange@@@std@@YAXPAU__ITEM@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__POINT@CExchange@@@std@@YAXPAU__POINT@CExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@U__SPAWNREGION@CEventLua@@U12@@std@@YAXPAU__SPAWNREGION@CEventLua@@ABU12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U__SPAWNREGION@CEventLua@@@std@@YAXPAU__SPAWNREGION@CEventLua@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UD3DXVECTOR3@@@std@@YAXPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_GIFTBOX@@@std@@YAXPAU_GIFTBOX@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@E@std@@QAEXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@E@std@@QAEXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Insert@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@EE@std@@YAXPAEABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@E@std@@YAXPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@I@std@@YAXVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAEPAEV?$allocator@E@std@@@std@@YAPAEPAE00AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Advance@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@H@std@@YAXAAVconst_iterator@?$vector@EV?$allocator@E@std@@@0@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@PAE@std@@YAPAEVconst_iterator@?$vector@EV?$allocator@E@std@@@0@0PAEU_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAEPAE@std@@YAPAEPAE00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@EE@std@@YAPAEPAE00AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@EV?$allocator@E@std@@@std@@@?$vector@EV?$allocator@E@std@@@std@@IAEPAEVconst_iterator@01@0PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KEU?$less@K@std@@V?$allocator@U?$pair@$$CBKE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCCtrl@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCCtrl@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCUser@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCUser@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTimer@CWnd@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RealizePalette@CDC@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDeviceCaps@CDC@@QBEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreatePalette@CPalette@@QAEHPAUtagLOGPALETTE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateHalftonePalette@CPalette@@QAEHPAVCDC@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetObjectA@CGdiObject@@QBEHHPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CMySplashWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CMySplashWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPalette@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMySplashWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OnPaint@CMySplashWnd@@QAEXXZ			; CMySplashWnd::OnPaint
PUBLIC	?OnTimer@CMySplashWnd@@QAEXI@Z			; CMySplashWnd::OnTimer
PUBLIC	?_messageEntries@CMySplashWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CMySplashWnd::_messageEntries
PUBLIC	?messageMap@CMySplashWnd@@1UAFX_MSGMAP@@B	; CMySplashWnd::messageMap
EXTRN	?messageMap@CWnd@@1UAFX_MSGMAP@@B:QWORD		; CWnd::messageMap
;	COMDAT ?_messageEntries@CMySplashWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CMySplashWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 0fH ; CMySplashWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnPaint@CMySplashWnd@@QAEXXZ
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	011H
	DD	FLAT:?OnTimer@CMySplashWnd@@QAEXI@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CMySplashWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CMySplashWnd@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CWnd@@1UAFX_MSGMAP@@B ; CMySplashWnd::messageMap
	DD	FLAT:?_messageEntries@CMySplashWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ ; CMySplashWnd::GetMessageMap
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\worldserver\mysplashwnd.cpp
;	COMDAT ?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMySplashWnd::GetMessageMap, COMDAT
; _this$ = ecx

; 11   : BEGIN_MESSAGE_MAP( CMySplashWnd, CWnd )

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CMySplashWnd@@1UAFX_MSGMAP@@B ; CMySplashWnd::messageMap
  00005	c3		 ret	 0
?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMySplashWnd::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltypes.inl
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT
; _this$ = ecx

; 110  : 	{ /* random filled */ }

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
; Function compile flags: /Ogty
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT
; _this$ = ecx

; 123  : 	{ return right - left; }

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
; Function compile flags: /Ogty
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT
; _this$ = ecx

; 125  : 	{ return bottom - top; }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00006	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
PUBLIC	??0CObject@@IAE@XZ				; CObject::CObject
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT
??0CObject@@IAE@XZ PROC NEAR				; CObject::CObject, COMDAT
; _this$ = ecx

; 21   : 	{ }

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CObject@@IAE@XZ ENDP					; CObject::CObject
_TEXT	ENDS
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
; Function compile flags: /Ogty
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
??1CObject@@UAE@XZ PROC NEAR				; CObject::~CObject, COMDAT
; _this$ = ecx

; 23   : 	{ }

  00000	c3		 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
PUBLIC	?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ	; AfxGetInstanceHandle
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ PROC NEAR	; AfxGetInstanceHandle, COMDAT

; 24   : 		return afxCurrentInstanceHandle; }

  00000	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00005	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00008	c3		 ret	 0
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ENDP	; AfxGetInstanceHandle
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CGdiObject@@QBEPAXXZ		; CGdiObject::GetSafeHandle
; Function compile flags: /Ogty
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT
?GetSafeHandle@CGdiObject@@QBEPAXXZ PROC NEAR		; CGdiObject::GetSafeHandle, COMDAT
; _this$ = ecx

; 80   : 	{ return this == NULL ? NULL : m_hObject; }

  00000	85 c9		 test	 ecx, ecx
  00002	75 03		 jne	 SHORT $L227951
  00004	33 c0		 xor	 eax, eax
  00006	c3		 ret	 0
$L227951:
  00007	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000a	c3		 ret	 0
?GetSafeHandle@CGdiObject@@QBEPAXXZ ENDP		; CGdiObject::GetSafeHandle
_TEXT	ENDS
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	??0CGdiObject@@QAE@XZ				; CGdiObject::CGdiObject
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:NEAR ; CGdiObject::GetRuntimeClass
EXTRN	??_ECGdiObject@@UAEPAXI@Z:NEAR			; CGdiObject::`vector deleting destructor'
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ ; CGdiObject::`vftable'
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT
??0CGdiObject@@QAE@XZ PROC NEAR				; CGdiObject::CGdiObject, COMDAT
; _this$ = ecx

; 82   : 	{ m_hObject = NULL; }

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGdiObject@@6B@
  00008	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0000f	c3		 ret	 0
??0CGdiObject@@QAE@XZ ENDP				; CGdiObject::CGdiObject
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:NEAR		; CGdiObject::DeleteObject
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
??1CGdiObject@@UAE@XZ PROC NEAR				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 84   : 	{ DeleteObject(); }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGdiObject@@6B@
  00006	e9 00 00 00 00	 jmp	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
_TEXT	ENDS
PUBLIC	?GetObjectA@CGdiObject@@QBEHHPAX@Z		; CGdiObject::GetObjectA
EXTRN	__imp__GetObjectA@12:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetObjectA@CGdiObject@@QBEHHPAX@Z
_TEXT	SEGMENT
_nCount$ = 8						; size = 4
_lpObject$ = 12						; size = 4
?GetObjectA@CGdiObject@@QBEHHPAX@Z PROC NEAR		; CGdiObject::GetObjectA, COMDAT
; _this$ = ecx

; 86   : 	{ ASSERT(m_hObject != NULL); return ::GetObject(m_hObject, nCount, lpObject); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _lpObject$[esp-4]
  00004	8b 54 24 04	 mov	 edx, DWORD PTR _nCount$[esp-4]
  00008	50		 push	 eax
  00009	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000c	52		 push	 edx
  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
  00014	c2 08 00	 ret	 8
?GetObjectA@CGdiObject@@QBEHHPAX@Z ENDP			; CGdiObject::GetObjectA
_TEXT	ENDS
PUBLIC	??0CBitmap@@QAE@XZ				; CBitmap::CBitmap
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:NEAR ; CBitmap::GetRuntimeClass
EXTRN	??_ECBitmap@@UAEPAXI@Z:NEAR			; CBitmap::`vector deleting destructor'
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ ; CBitmap::`vftable'
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT
??0CBitmap@@QAE@XZ PROC NEAR				; CBitmap::CBitmap, COMDAT
; _this$ = ecx

; 177  : 	{ }

  00000	8b c1		 mov	 eax, ecx
  00002	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00009	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CBitmap@@6B@
  0000f	c3		 ret	 0
??0CBitmap@@QAE@XZ ENDP					; CBitmap::CBitmap
_TEXT	ENDS
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
; Function compile flags: /Ogty
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
??1CBitmap@@UAE@XZ PROC NEAR				; CBitmap::~CBitmap, COMDAT
; _this$ = ecx

; 179  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGdiObject@@6B@
  00006	e9 00 00 00 00	 jmp	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
PUBLIC	??0CPalette@@QAE@XZ				; CPalette::CPalette
PUBLIC	??_7CPalette@@6B@				; CPalette::`vftable'
PUBLIC	??_GCPalette@@UAEPAXI@Z				; CPalette::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CPalette@@UBEPAUCRuntimeClass@@XZ:NEAR ; CPalette::GetRuntimeClass
EXTRN	??_ECPalette@@UAEPAXI@Z:NEAR			; CPalette::`vector deleting destructor'
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT
??_7CPalette@@6B@ DD FLAT:?GetRuntimeClass@CPalette@@UBEPAUCRuntimeClass@@XZ ; CPalette::`vftable'
	DD	FLAT:??_ECPalette@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CPalette@@QAE@XZ
_TEXT	SEGMENT
??0CPalette@@QAE@XZ PROC NEAR				; CPalette::CPalette, COMDAT
; _this$ = ecx

; 230  : 	{ }

  00000	8b c1		 mov	 eax, ecx
  00002	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00009	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPalette@@6B@
  0000f	c3		 ret	 0
??0CPalette@@QAE@XZ ENDP				; CPalette::CPalette
_TEXT	ENDS
PUBLIC	??1CPalette@@UAE@XZ				; CPalette::~CPalette
; Function compile flags: /Ogty
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT
??1CPalette@@UAE@XZ PROC NEAR				; CPalette::~CPalette, COMDAT
; _this$ = ecx

; 232  : 	{ }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGdiObject@@6B@
  00006	e9 00 00 00 00	 jmp	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
??1CPalette@@UAE@XZ ENDP				; CPalette::~CPalette
_TEXT	ENDS
PUBLIC	?CreatePalette@CPalette@@QAEHPAUtagLOGPALETTE@@@Z ; CPalette::CreatePalette
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:NEAR		; CGdiObject::Attach
EXTRN	__imp__CreatePalette@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?CreatePalette@CPalette@@QAEHPAUtagLOGPALETTE@@@Z
_TEXT	SEGMENT
_lpLogPalette$ = 8					; size = 4
?CreatePalette@CPalette@@QAEHPAUtagLOGPALETTE@@@Z PROC NEAR ; CPalette::CreatePalette, COMDAT
; _this$ = ecx

; 234  : 	{ return Attach(::CreatePalette(lpLogPalette)); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _lpLogPalette$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePalette@4
  0000e	50		 push	 eax
  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
  00016	5e		 pop	 esi
  00017	c2 04 00	 ret	 4
?CreatePalette@CPalette@@QAEHPAUtagLOGPALETTE@@@Z ENDP	; CPalette::CreatePalette
_TEXT	ENDS
PUBLIC	?CreateHalftonePalette@CPalette@@QAEHPAVCDC@@@Z	; CPalette::CreateHalftonePalette
EXTRN	__imp__CreateHalftonePalette@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?CreateHalftonePalette@CPalette@@QAEHPAVCDC@@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
?CreateHalftonePalette@CPalette@@QAEHPAVCDC@@@Z PROC NEAR ; CPalette::CreateHalftonePalette, COMDAT
; _this$ = ecx

; 237  : 		::CreateHalftonePalette(pDC->m_hDC)); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pDC$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateHalftonePalette@4
  00011	50		 push	 eax
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
  00019	5e		 pop	 esi
  0001a	c2 04 00	 ret	 4
?CreateHalftonePalette@CPalette@@QAEHPAVCDC@@@Z ENDP	; CPalette::CreateHalftonePalette
_TEXT	ENDS
PUBLIC	??BCDC@@QBEPAUHDC__@@XZ				; CDC::operator HDC__ *
; Function compile flags: /Ogty
;	COMDAT ??BCDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT
??BCDC@@QBEPAUHDC__@@XZ PROC NEAR			; CDC::operator HDC__ *, COMDAT
; _this$ = ecx

; 314  : 	{ return this == NULL ? NULL : m_hDC; }

  00000	85 c9		 test	 ecx, ecx
  00002	75 03		 jne	 SHORT $L228015
  00004	33 c0		 xor	 eax, eax
  00006	c3		 ret	 0
$L228015:
  00007	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000a	c3		 ret	 0
??BCDC@@QBEPAUHDC__@@XZ ENDP				; CDC::operator HDC__ *
_TEXT	ENDS
PUBLIC	?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ		; CDC::GetSafeHdc
; Function compile flags: /Ogty
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ PROC NEAR		; CDC::GetSafeHdc, COMDAT
; _this$ = ecx

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  00000	85 c9		 test	 ecx, ecx
  00002	75 03		 jne	 SHORT $L228020
  00004	33 c0		 xor	 eax, eax
  00006	c3		 ret	 0
$L228020:
  00007	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000a	c3		 ret	 0
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ENDP			; CDC::GetSafeHdc
_TEXT	ENDS
PUBLIC	?CreateCompatibleDC@CDC@@QAEHPAV1@@Z		; CDC::CreateCompatibleDC
EXTRN	?Attach@CDC@@QAEHPAUHDC__@@@Z:NEAR		; CDC::Attach
EXTRN	__imp__CreateCompatibleDC@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z
_TEXT	SEGMENT
_pDC$ = 8						; size = 4
?CreateCompatibleDC@CDC@@QAEHPAV1@@Z PROC NEAR		; CDC::CreateCompatibleDC, COMDAT
; _this$ = ecx

; 330  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pDC$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	75 13		 jne	 SHORT $L228030
  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  00012	50		 push	 eax
  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
$L228030:
  0001e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  00028	50		 push	 eax
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
  00030	5e		 pop	 esi
  00031	c2 04 00	 ret	 4
?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ENDP		; CDC::CreateCompatibleDC
_TEXT	ENDS
PUBLIC	?GetDeviceCaps@CDC@@QBEHH@Z			; CDC::GetDeviceCaps
EXTRN	__imp__GetDeviceCaps@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetDeviceCaps@CDC@@QBEHH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetDeviceCaps@CDC@@QBEHH@Z PROC NEAR			; CDC::GetDeviceCaps, COMDAT
; _this$ = ecx

; 334  : 	{ ASSERT(m_hAttribDC != NULL); return ::GetDeviceCaps(m_hAttribDC, nIndex); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIndex$[esp-4]
  00004	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  0000f	c2 04 00	 ret	 4
?GetDeviceCaps@CDC@@QBEHH@Z ENDP			; CDC::GetDeviceCaps
_TEXT	ENDS
PUBLIC	?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z	; CDC::SelectObject
EXTRN	?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z:NEAR ; CDC::SelectGdiObject
; Function compile flags: /Ogty
;	COMDAT ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z
_TEXT	SEGMENT
_pBitmap$ = 8						; size = 4
?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z PROC NEAR	; CDC::SelectObject, COMDAT
; _this$ = ecx

; 361  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pBitmap$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	75 0d		 jne	 SHORT $L228042
  00008	50		 push	 eax
  00009	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
  00012	c2 04 00	 ret	 4
$L228042:
  00015	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00018	50		 push	 eax
  00019	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
  00022	c2 04 00	 ret	 4
?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z ENDP		; CDC::SelectObject
_TEXT	ENDS
PUBLIC	?RealizePalette@CDC@@QAEIXZ			; CDC::RealizePalette
EXTRN	__imp__RealizePalette@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?RealizePalette@CDC@@QAEIXZ
_TEXT	SEGMENT
?RealizePalette@CDC@@QAEIXZ PROC NEAR			; CDC::RealizePalette, COMDAT
; _this$ = ecx

; 370  : 	{ ASSERT(m_hDC != NULL); return ::RealizePalette(m_hDC); }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RealizePalette@4
  0000a	c3		 ret	 0
?RealizePalette@CDC@@QAEIXZ ENDP			; CDC::RealizePalette
_TEXT	ENDS
PUBLIC	?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z			; CDC::BitBlt
EXTRN	__imp__BitBlt@36:NEAR
; Function compile flags: /Ogty
;	COMDAT ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_nWidth$ = 16						; size = 4
_nHeight$ = 20						; size = 4
_pSrcDC$ = 24						; size = 4
_xSrc$ = 28						; size = 4
_ySrc$ = 32						; size = 4
_dwRop$ = 36						; size = 4
?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z PROC NEAR		; CDC::BitBlt, COMDAT
; _this$ = ecx

; 549  : 		pSrcDC->GetSafeHdc(), xSrc, ySrc, dwRop); }

  00000	8b 44 24 14	 mov	 eax, DWORD PTR _pSrcDC$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 03		 je	 SHORT $L228057
$L228056:
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L228057:
  0000b	8b 54 24 20	 mov	 edx, DWORD PTR _dwRop$[esp-4]
  0000f	52		 push	 edx
  00010	8b 54 24 20	 mov	 edx, DWORD PTR _ySrc$[esp]
  00014	52		 push	 edx
  00015	8b 54 24 20	 mov	 edx, DWORD PTR _xSrc$[esp+4]
  00019	52		 push	 edx
  0001a	8b 54 24 18	 mov	 edx, DWORD PTR _nWidth$[esp+8]
  0001e	50		 push	 eax
  0001f	8b 44 24 20	 mov	 eax, DWORD PTR _nHeight$[esp+12]
  00023	50		 push	 eax
  00024	8b 44 24 1c	 mov	 eax, DWORD PTR _y$[esp+16]
  00028	52		 push	 edx
  00029	8b 54 24 1c	 mov	 edx, DWORD PTR _x$[esp+20]
  0002d	50		 push	 eax
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	52		 push	 edx
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
  00039	c2 20 00	 ret	 32			; 00000020H
?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z ENDP			; CDC::BitBlt
_TEXT	ENDS
PUBLIC	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetWindowRect
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetWindowRect, COMDAT
; _this$ = ecx

; 105  : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _lpRect$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  0000f	c2 04 00	 ret	 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetWindowRect
_TEXT	ENDS
PUBLIC	?UpdateWindow@CWnd@@QAEXXZ			; CWnd::UpdateWindow
EXTRN	__imp__UpdateWindow@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT
?UpdateWindow@CWnd@@QAEXXZ PROC NEAR			; CWnd::UpdateWindow, COMDAT
; _this$ = ecx

; 127  : 	{ ASSERT(::IsWindow(m_hWnd)); ::UpdateWindow(m_hWnd); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	50		 push	 eax
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4
  0000a	c3		 ret	 0
?UpdateWindow@CWnd@@QAEXXZ ENDP				; CWnd::UpdateWindow
_TEXT	ENDS
PUBLIC	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z	; CWnd::SetTimer
EXTRN	__imp__SetTimer@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
_nElapse$ = 12						; size = 4
_lpfnTimer$ = 16					; size = 4
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z PROC NEAR	; CWnd::SetTimer, COMDAT
; _this$ = ecx

; 183  : 		lpfnTimer); }

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _lpfnTimer$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _nElapse$[esp-4]
  00008	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0000b	50		 push	 eax
  0000c	8b 44 24 08	 mov	 eax, DWORD PTR _nIDEvent$[esp]
  00010	52		 push	 edx
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16
  00019	c2 0c 00	 ret	 12			; 0000000cH
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ENDP	; CWnd::SetTimer
_TEXT	ENDS
PUBLIC	?KillTimer@CWnd@@QAEHI@Z			; CWnd::KillTimer
EXTRN	__imp__KillTimer@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
?KillTimer@CWnd@@QAEHI@Z PROC NEAR			; CWnd::KillTimer, COMDAT
; _this$ = ecx

; 185  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::KillTimer(m_hWnd, nIDEvent); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIDEvent$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8
  0000f	c2 04 00	 ret	 4
?KillTimer@CWnd@@QAEHI@Z ENDP				; CWnd::KillTimer
_TEXT	ENDS
PUBLIC	?OnTimer@CWnd@@IAEXI@Z				; CWnd::OnTimer
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
; Function compile flags: /Ogty
;	COMDAT ?OnTimer@CWnd@@IAEXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?OnTimer@CWnd@@IAEXI@Z PROC NEAR			; CWnd::OnTimer, COMDAT
; _this$ = ecx

; 488  : 	{ Default(); }

  00000	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  00005	c2 04 00	 ret	 4
?OnTimer@CWnd@@IAEXI@Z ENDP				; CWnd::OnTimer
_TEXT	ENDS
PUBLIC	??0CMySplashWnd@@QAE@II@Z			; CMySplashWnd::CMySplashWnd
PUBLIC	?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z ; CMySplashWnd::PreTranslateMessage
PUBLIC	??_7CMySplashWnd@@6B@				; CMySplashWnd::`vftable'
PUBLIC	??_GCMySplashWnd@@UAEPAXI@Z			; CMySplashWnd::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??_ECMySplashWnd@@UAEPAXI@Z:NEAR		; CMySplashWnd::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
xdata$x	SEGMENT
$T228104 DD	0ffffffffH
	DD	FLAT:$L228076
	DD	00H
	DD	FLAT:$L228077
	DD	01H
	DD	FLAT:$L228078
$T228101 DD	019930520H
	DD	03H
	DD	FLAT:$T228104
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CMySplashWnd@@6B@
CONST	SEGMENT
??_7CMySplashWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMySplashWnd::`vftable'
	DD	FLAT:??_ECMySplashWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMySplashWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\worldserver\mysplashwnd.cpp
CONST	ENDS
;	COMDAT ??0CMySplashWnd@@QAE@II@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBitmapID$ = 8						; size = 4
_nDuration$ = 12					; size = 4
??0CMySplashWnd@@QAE@II@Z PROC NEAR			; CMySplashWnd::CMySplashWnd, COMDAT
; _this$ = ecx

; 6    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CMySplashWnd@@QAE@II@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00022	33 c0		 xor	 eax, eax
  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CMySplashWnd@@6B@
  0002a	89 44 24 10	 mov	 DWORD PTR __$EHRec$[esp+28], eax
  0002e	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00031	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], OFFSET FLAT:??_7CBitmap@@6B@
  00038	89 46 68	 mov	 DWORD PTR [esi+104], eax
  0003b	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], OFFSET FLAT:??_7CPalette@@6B@
  00042	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  00045	c6 44 24 10 02	 mov	 BYTE PTR __$EHRec$[esp+28], 2
  0004a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd

; 7    : 	m_nBitmapID		= nBitmapID;
; 8    : 	m_nDuration		= nDuration;

  0004f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _nDuration$[esp+16]
  00053	8b 44 24 18	 mov	 eax, DWORD PTR _nBitmapID$[esp+16]
  00057	89 4e 54	 mov	 DWORD PTR [esi+84], ecx

; 9    : }

  0005a	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0005e	89 46 50	 mov	 DWORD PTR [esi+80], eax
  00061	8b c6		 mov	 eax, esi
  00063	5e		 pop	 esi
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L228076:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
$L228077:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 5c	 add	 ecx, 92			; 0000005cH
  0000e	e9 00 00 00 00	 jmp	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
$L228078:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 64	 add	 ecx, 100		; 00000064H
  00019	e9 00 00 00 00	 jmp	 ??1CPalette@@UAE@XZ	; CPalette::~CPalette
__ehhandler$??0CMySplashWnd@@QAE@II@Z:
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228101
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMySplashWnd@@QAE@II@Z ENDP				; CMySplashWnd::CMySplashWnd
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	6a 00		 push	 0
  00005	50		 push	 eax
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000c	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	6a 01		 push	 1
  00005	50		 push	 eax
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000c	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z ; CMySplashWnd::GetBitmapAndPalette
EXTRN	??1CDC@@UAE@XZ:NEAR				; CDC::~CDC
EXTRN	??0CClientDC@@QAE@PAVCWnd@@@Z:NEAR		; CClientDC::CClientDC
EXTRN	??1CClientDC@@UAE@XZ:NEAR			; CClientDC::~CClientDC
EXTRN	__imp__GetDIBColorTable@16:NEAR
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
EXTRN	??0CDC@@QAE@XZ:NEAR				; CDC::CDC
EXTRN	__imp__LoadImageA@24:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
xdata$x	SEGMENT
$T228182 DD	0ffffffffH
	DD	FLAT:$L228127
	DD	00H
	DD	FLAT:$L228128
$T228178 DD	019930520H
	DD	02H
	DD	FLAT:$T228182
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\worldserver\mysplashwnd.cpp
xdata$x	ENDS
;	COMDAT ?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z
_TEXT	SEGMENT
_memDC$226640 = -132					; size = 16
_dc$ = -116						; size = 20
_ds$ = -96						; size = 84
__$EHRec$ = -12						; size = 12
_nIDResource$ = 8					; size = 4
_bitmap$ = 12						; size = 4
_pal$ = 16						; size = 4
?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z PROC NEAR ; CMySplashWnd::GetBitmapAndPalette, COMDAT
; _this$ = ecx

; 45   : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 78	 sub	 esp, 120		; 00000078H
  00018	53		 push	 ebx

; 46   : 	LPCTSTR lpszResourceName	= (LPCTSTR)nIDResource;
; 47   : 
; 48   : 	HBITMAP hBmp	= (HBITMAP)::LoadImage( AfxGetInstanceHandle(), lpszResourceName, IMAGE_BITMAP, 0, 0, LR_CREATEDIBSECTION );

  00019	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  0001e	8b 8c 24 8c 00
	00 00		 mov	 ecx, DWORD PTR _nIDResource$[esp+132]
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	68 00 20 00 00	 push	 8192			; 00002000H
  0002d	33 db		 xor	 ebx, ebx
  0002f	53		 push	 ebx
  00030	53		 push	 ebx
  00031	53		 push	 ebx
  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24

; 49   : 
; 50   : 	if( hBmp == NULL)

  0003a	3b c3		 cmp	 eax, ebx
  0003c	75 17		 jne	 SHORT $L226630

; 51   : 		return FALSE;

  0003e	33 c0		 xor	 eax, eax
  00040	5b		 pop	 ebx

; 96   : }

  00041	8b 4c 24 78	 mov	 ecx, DWORD PTR __$EHRec$[esp+132]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004c	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00052	c2 0c 00	 ret	 12			; 0000000cH
$L226630:
  00055	56		 push	 esi
  00056	57		 push	 edi

; 52   : 
; 53   : 	bitmap.Attach( hBmp );

  00057	8b bc 24 98 00
	00 00		 mov	 edi, DWORD PTR _bitmap$[esp+140]
  0005e	50		 push	 eax
  0005f	8b cf		 mov	 ecx, edi
  00061	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 54   : 
; 55   : 	// Create a logical palette for the bitmap
; 56   : 	DIBSECTION ds;
; 57   : 	BITMAPINFOHEADER &bmInfo	= ds.dsBmih;
; 58   : 	bitmap.GetObject( sizeof(ds), &ds );

  00066	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00069	8d 54 24 30	 lea	 edx, DWORD PTR _ds$[esp+144]
  0006d	52		 push	 edx
  0006e	6a 54		 push	 84			; 00000054H
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12

; 59   : 
; 60   : 	int nColors		= bmInfo.biClrUsed ? bmInfo.biClrUsed : 1 << bmInfo.biBitCount;

  00077	8b 74 24 68	 mov	 esi, DWORD PTR _ds$[esp+200]
  0007b	3b f3		 cmp	 esi, ebx
  0007d	75 0b		 jne	 SHORT $L228121
  0007f	8a 4c 24 56	 mov	 cl, BYTE PTR _ds$[esp+182]
  00083	be 01 00 00 00	 mov	 esi, 1
  00088	d3 e6		 shl	 esi, cl
$L228121:

; 61   : 
; 62   : 	// Create a halftone palette if color > 256.
; 63   : 	CClientDC dc( NULL );	// Desktop DC

  0008a	53		 push	 ebx
  0008b	8d 4c 24 20	 lea	 ecx, DWORD PTR _dc$[esp+148]
  0008f	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 64   : 	if( nColors > 256 )

  00094	81 fe 00 01 00
	00		 cmp	 esi, 256		; 00000100H
  0009a	89 9c 24 8c 00
	00 00		 mov	 DWORD PTR __$EHRec$[esp+152], ebx
  000a1	7e 1d		 jle	 SHORT $L226635

; 65   : 	{
; 66   : 		pal.CreateHalftonePalette( &dc );

  000a3	8b 4c 24 20	 mov	 ecx, DWORD PTR _dc$[esp+148]
  000a7	51		 push	 ecx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateHalftonePalette@4
  000ae	8b 8c 24 9c 00
	00 00		 mov	 ecx, DWORD PTR _pal$[esp+140]
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 67   : 	}
; 68   : 	else

  000bb	e9 d7 00 00 00	 jmp	 $L226636
$L226635:

; 69   : 	{
; 70   : 		// Create the palette
; 71   : 		RGBQUAD* pRGB	= new RGBQUAD[nColors];

  000c0	8d 14 b5 00 00
	00 00		 lea	 edx, DWORD PTR [esi*4]
  000c7	55		 push	 ebp
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000ce	83 c4 04	 add	 esp, 4

; 72   : 		CDC memDC;

  000d1	8d 4c 24 10	 lea	 ecx, DWORD PTR _memDC$226640[esp+148]
  000d5	8b e8		 mov	 ebp, eax
  000d7	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC

; 73   : 		memDC.CreateCompatibleDC( &dc );

  000dc	8b 44 24 24	 mov	 eax, DWORD PTR _dc$[esp+152]
  000e0	50		 push	 eax
  000e1	c6 84 24 94 00
	00 00 01	 mov	 BYTE PTR __$EHRec$[esp+160], 1
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  000ef	50		 push	 eax
  000f0	8d 4c 24 14	 lea	 ecx, DWORD PTR _memDC$226640[esp+152]
  000f4	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach

; 74   : 		memDC.SelectObject( &bitmap );

  000f9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000fc	8b 4c 24 14	 mov	 ecx, DWORD PTR _memDC$226640[esp+152]
  00100	50		 push	 eax
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 75   : 		GetDIBColorTable( memDC, 0, nColors, pRGB );

  00107	8b 54 24 14	 mov	 edx, DWORD PTR _memDC$226640[esp+152]
  0010b	55		 push	 ebp
  0010c	56		 push	 esi
  0010d	53		 push	 ebx
  0010e	52		 push	 edx
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDIBColorTable@16

; 76   : 
; 77   : 		UINT nSize	= sizeof(LOGPALETTE) + ( sizeof(PALETTEENTRY) * nColors );

  00115	8d 04 b5 08 00
	00 00		 lea	 eax, DWORD PTR [esi*4+8]

; 78   : 		LOGPALETTE* pLP		= (LOGPALETTE*)new BYTE[nSize];

  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00122	8b f8		 mov	 edi, eax
  00124	83 c4 04	 add	 esp, 4

; 79   : 		pLP->palVersion		= 0x300;
; 80   : 		pLP->palNumEntries	= nColors;
; 81   : 		for( int i = 0; i < nColors; i++ )

  00127	3b f3		 cmp	 esi, ebx
  00129	66 c7 07 00 03	 mov	 WORD PTR [edi], 768	; 00000300H
  0012e	66 89 77 02	 mov	 WORD PTR [edi+2], si
  00132	7e 28		 jle	 SHORT $L226651
  00134	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  00137	8d 4d 01	 lea	 ecx, DWORD PTR [ebp+1]
  0013a	8d 9b 00 00 00
	00		 npad	 6
$L226649:

; 82   : 		{
; 83   : 			pLP->palPalEntry[i].peRed	= pRGB[i].rgbRed;

  00140	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00143	88 50 ff	 mov	 BYTE PTR [eax-1], dl

; 84   : 			pLP->palPalEntry[i].peGreen	= pRGB[i].rgbGreen;

  00146	8a 11		 mov	 dl, BYTE PTR [ecx]
  00148	88 10		 mov	 BYTE PTR [eax], dl

; 85   : 			pLP->palPalEntry[i].peBlue	= pRGB[i].rgbBlue;

  0014a	8a 51 ff	 mov	 dl, BYTE PTR [ecx-1]
  0014d	88 50 01	 mov	 BYTE PTR [eax+1], dl

; 86   : 			pLP->palPalEntry[i].peFlags		= 0;

  00150	88 58 02	 mov	 BYTE PTR [eax+2], bl
  00153	83 c1 04	 add	 ecx, 4
  00156	83 c0 04	 add	 eax, 4
  00159	4e		 dec	 esi
  0015a	75 e4		 jne	 SHORT $L226649
$L226651:

; 87   : 		}
; 88   : 
; 89   : 		pal.CreatePalette( pLP );

  0015c	57		 push	 edi
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePalette@4
  00163	8b 8c 24 a0 00
	00 00		 mov	 ecx, DWORD PTR _pal$[esp+144]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach

; 90   : 
; 91   : 		SAFE_DELETE_ARRAY( pLP );

  00170	57		 push	 edi
  00171	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00176	83 c4 04	 add	 esp, 4

; 92   : 		SAFE_DELETE_ARRAY( pRGB );

  00179	3b eb		 cmp	 ebp, ebx
  0017b	74 09		 je	 SHORT $L226655
  0017d	55		 push	 ebp
  0017e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00183	83 c4 04	 add	 esp, 4
$L226655:

; 93   : 	}

  00186	8d 4c 24 10	 lea	 ecx, DWORD PTR _memDC$226640[esp+148]
  0018a	88 9c 24 90 00
	00 00		 mov	 BYTE PTR __$EHRec$[esp+156], bl
  00191	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00196	5d		 pop	 ebp
$L226636:

; 94   : 		
; 95   : 	return TRUE;

  00197	8d 4c 24 1c	 lea	 ecx, DWORD PTR _dc$[esp+144]
  0019b	c7 84 24 8c 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+152], -1
  001a6	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC

; 96   : }

  001ab	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+144]
  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	b8 01 00 00 00	 mov	 eax, 1
  001b9	5b		 pop	 ebx
  001ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c1	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  001c7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L228127:
  00000	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
$L228128:
  00008	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$226640[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__ehhandler$?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228178
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z ENDP ; CMySplashWnd::GetBitmapAndPalette
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:NEAR		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:NEAR			; CPaintDC::~CPaintDC
EXTRN	?SelectPalette@CDC@@QAEPAVCPalette@@PAV2@H@Z:NEAR ; CDC::SelectPalette
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
xdata$x	SEGMENT
$T228275 DD	0ffffffffH
	DD	FLAT:$L228189
	DD	00H
	DD	FLAT:$L228190
$T228270 DD	019930520H
	DD	02H
	DD	FLAT:$T228275
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\worldserver\mysplashwnd.cpp
xdata$x	ENDS
;	COMDAT ?OnPaint@CMySplashWnd@@QAEXXZ
_TEXT	SEGMENT
_memDC$ = -132						; size = 16
_rcWnd$ = -116						; size = 16
_dc$ = -100						; size = 84
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnPaint@CMySplashWnd@@QAEXXZ PROC NEAR			; CMySplashWnd::OnPaint, COMDAT
; _this$ = ecx

; 99   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CMySplashWnd@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 78	 sub	 esp, 120		; 00000078H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c4		 xor	 eax, esp
  0001f	56		 push	 esi
  00020	8b f1		 mov	 esi, ecx
  00022	57		 push	 edi

; 100  : 	CPaintDC dc( this );	// device contect for painting

  00023	56		 push	 esi
  00024	8d 4c 24 2c	 lea	 ecx, DWORD PTR _dc$[esp+144]
  00028	89 84 24 80 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+144], eax
  0002f	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 101  : 
; 102  : 	// Create a memory DC compatible with the paint DC
; 103  : 	CDC memDC;

  00034	8d 4c 24 08	 lea	 ecx, DWORD PTR _memDC$[esp+140]
  00038	c7 84 24 88 00
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+148], 0
  00043	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC

; 104  : 	memDC.CreateCompatibleDC( &dc );

  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dc$[esp+144]
  0004c	50		 push	 eax
  0004d	c6 84 24 8c 00
	00 00 01	 mov	 BYTE PTR __$EHRec$[esp+152], 1
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  0005b	50		 push	 eax
  0005c	8d 4c 24 0c	 lea	 ecx, DWORD PTR _memDC$[esp+144]
  00060	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach

; 105  : 
; 106  : 	CBitmap* pBmpOld	= memDC.SelectObject( &m_bitmap );

  00065	8d 46 5c	 lea	 eax, DWORD PTR [esi+92]
  00068	85 c0		 test	 eax, eax
  0006a	74 03		 je	 SHORT $L228217
$L228216:
  0006c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L228217:
  0006f	8b 4c 24 0c	 mov	 ecx, DWORD PTR _memDC$[esp+144]
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 107  : 
; 108  : 	// Select and realize the palette
; 109  : 	if( dc.GetDeviceCaps( RASTERCAPS ) & RC_PALETTE && m_pal.m_hObject != NULL )

  0007a	8b 54 24 30	 mov	 edx, DWORD PTR _dc$[esp+148]
  0007e	6a 26		 push	 38			; 00000026H
  00080	52		 push	 edx
  00081	8b f8		 mov	 edi, eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00089	f6 c4 01	 test	 ah, 1
  0008c	74 21		 je	 SHORT $L228224
  0008e	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  00091	85 c0		 test	 eax, eax
  00093	74 1a		 je	 SHORT $L228224

; 110  : 	{
; 111  : 		dc.SelectPalette( &m_pal, FALSE );

  00095	6a 00		 push	 0
  00097	8d 46 64	 lea	 eax, DWORD PTR [esi+100]
  0009a	50		 push	 eax
  0009b	8d 4c 24 30	 lea	 ecx, DWORD PTR _dc$[esp+148]
  0009f	e8 00 00 00 00	 call	 ?SelectPalette@CDC@@QAEPAVCPalette@@PAV2@H@Z ; CDC::SelectPalette

; 112  : 		dc.RealizePalette();

  000a4	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dc$[esp+144]
  000a8	51		 push	 ecx
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RealizePalette@4
$L228224:

; 113  : 	}
; 114  : 
; 115  : 	// Window is same size as bitmap
; 116  : 	CRect rcWnd;
; 117  : 	GetWindowRect( &rcWnd );

  000af	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000b2	8d 54 24 18	 lea	 edx, DWORD PTR _rcWnd$[esp+140]
  000b6	52		 push	 edx
  000b7	50		 push	 eax
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 118  : 	dc.BitBlt( 0, 0, rcWnd.Width(), rcWnd.Height(), &memDC, 0, 0, SRCCOPY );

  000be	8b 4c 24 1c	 mov	 ecx, DWORD PTR _rcWnd$[esp+144]
  000c2	8b 44 24 24	 mov	 eax, DWORD PTR _rcWnd$[esp+152]
  000c6	8b 54 24 0c	 mov	 edx, DWORD PTR _memDC$[esp+144]
  000ca	8b 74 24 18	 mov	 esi, DWORD PTR _rcWnd$[esp+140]
  000ce	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	2b c1		 sub	 eax, ecx
  000d9	8b 4c 24 2c	 mov	 ecx, DWORD PTR _rcWnd$[esp+160]
  000dd	52		 push	 edx
  000de	50		 push	 eax
  000df	8b 44 24 40	 mov	 eax, DWORD PTR _dc$[esp+164]
  000e3	2b ce		 sub	 ecx, esi
  000e5	51		 push	 ecx
  000e6	6a 00		 push	 0
  000e8	6a 00		 push	 0
  000ea	50		 push	 eax
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36

; 119  : 
; 120  : 	// Restore bitmap in memDC
; 121  : 	memDC.SelectObject( pBmpOld );

  000f1	85 ff		 test	 edi, edi
  000f3	74 03		 je	 SHORT $L228266
$L228265:
  000f5	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
$L228266:
  000f8	8b 4c 24 0c	 mov	 ecx, DWORD PTR _memDC$[esp+144]
  000fc	57		 push	 edi
  000fd	51		 push	 ecx
  000fe	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject

; 122  : 
; 123  : 	// Do not call CWnd::OnPaint() for painting message
; 124  : }

  00103	8d 4c 24 08	 lea	 ecx, DWORD PTR _memDC$[esp+140]
  00107	c6 84 24 88 00
	00 00 00	 mov	 BYTE PTR __$EHRec$[esp+148], 0
  0010f	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00114	8d 4c 24 28	 lea	 ecx, DWORD PTR _dc$[esp+140]
  00118	c7 84 24 88 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+148], -1
  00123	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  00128	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+140]
  0012f	5f		 pop	 edi
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b 4c 24 78	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+136]
  0013b	5e		 pop	 esi
  0013c	33 cc		 xor	 ecx, esp
  0013e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00143	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00149	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L228189:
  00000	8d 4d 9c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
$L228190:
  00008	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _memDC$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__ehhandler$?OnPaint@CMySplashWnd@@QAEXXZ:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228270
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnPaint@CMySplashWnd@@QAEXXZ ENDP			; CMySplashWnd::OnPaint
; Function compile flags: /Ogty
;	COMDAT ?OnTimer@CMySplashWnd@@QAEXI@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
?OnTimer@CMySplashWnd@@QAEXI@Z PROC NEAR		; CMySplashWnd::OnTimer, COMDAT
; _this$ = ecx

; 127  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 128  : 	if( m_nTimerID == nIDEvent )

  00003	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00006	3b 44 24 08	 cmp	 eax, DWORD PTR _nIDEvent$[esp]
  0000a	75 21		 jne	 SHORT $L226672

; 129  : 	{
; 130  : 		// Destroy the timer and splash window
; 131  : 		KillTimer( m_nTimerID );

  0000c	50		 push	 eax
  0000d	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8

; 132  : 		m_wndInvisible.DestroyWindow();

  00017	8b 56 6c	 mov	 edx, DWORD PTR [esi+108]
  0001a	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  0001d	ff 52 60	 call	 DWORD PTR [edx+96]

; 133  : 		safe_delete( this );

  00020	8b 06		 mov	 eax, DWORD PTR [esi]
  00022	6a 01		 push	 1
  00024	8b ce		 mov	 ecx, esi
  00026	ff 50 04	 call	 DWORD PTR [eax+4]
  00029	5e		 pop	 esi

; 138  : }

  0002a	c2 04 00	 ret	 4
$L226672:

; 134  : 		return;
; 135  : 	}
; 136  : 	
; 137  : 	CWnd::OnTimer( nIDEvent );

  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  00034	5e		 pop	 esi

; 138  : }

  00035	c2 04 00	 ret	 4
?OnTimer@CMySplashWnd@@QAEXI@Z ENDP			; CMySplashWnd::OnTimer
_TEXT	ENDS
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
; Function compile flags: /Ogty
;	COMDAT ?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z PROC NEAR ; CMySplashWnd::PreTranslateMessage, COMDAT
; _this$ = ecx

; 141  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 142  : 	ASSERT( pMsg != NULL );
; 143  : 
; 144  : 	if( pMsg->message == WM_KEYDOWN ||
; 145  : 		pMsg->message == WM_SYSKEYDOWN ||
; 146  : 		pMsg->message == WM_LBUTTONDOWN ||
; 147  : 		pMsg->message == WM_RBUTTONDOWN ||
; 148  : 		pMsg->message == WM_MBUTTONDOWN )

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pMsg$[esp]
  00007	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000a	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0000f	74 28		 je	 SHORT $L226682
  00011	3d 04 01 00 00	 cmp	 eax, 260		; 00000104H
  00016	74 21		 je	 SHORT $L226682
  00018	3d 01 02 00 00	 cmp	 eax, 513		; 00000201H
  0001d	74 1a		 je	 SHORT $L226682
  0001f	3d 04 02 00 00	 cmp	 eax, 516		; 00000204H
  00024	74 13		 je	 SHORT $L226682
  00026	3d 07 02 00 00	 cmp	 eax, 519		; 00000207H
  0002b	74 0c		 je	 SHORT $L226682

; 154  : 	}
; 155  : 	
; 156  : 	return CWnd::PreTranslateMessage( pMsg );

  0002d	51		 push	 ecx
  0002e	8b ce		 mov	 ecx, esi
  00030	e8 00 00 00 00	 call	 ?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z ; CWnd::PreTranslateMessage
  00035	5e		 pop	 esi

; 157  : }

  00036	c2 04 00	 ret	 4
$L226682:

; 149  : 	{
; 150  : 		KillTimer( m_nTimerID );

  00039	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  0003c	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8

; 151  : 		m_wndInvisible.DestroyWindow();

  00047	8b 56 6c	 mov	 edx, DWORD PTR [esi+108]
  0004a	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  0004d	ff 52 60	 call	 DWORD PTR [edx+96]

; 152  : 		safe_delete( this );

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	6a 01		 push	 1
  00054	8b ce		 mov	 ecx, esi
  00056	ff 50 04	 call	 DWORD PTR [eax+4]

; 153  : 		return 1;

  00059	b8 01 00 00 00	 mov	 eax, 1
  0005e	5e		 pop	 esi

; 157  : }

  0005f	c2 04 00	 ret	 4
?PreTranslateMessage@CMySplashWnd@@UAEHPAUtagMSG@@@Z ENDP ; CMySplashWnd::PreTranslateMessage
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC NEAR			; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L228309
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L228309:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBitmap@@UAEPAXI@Z PROC NEAR			; CBitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L228316
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L228316:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPalette@@UAEPAXI@Z PROC NEAR			; CPalette::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CPalette@@UAE@XZ	; CPalette::~CPalette
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L228323
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L228323:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCPalette@@UAEPAXI@Z ENDP				; CPalette::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CMySplashWnd@@UAE@XZ				; CMySplashWnd::~CMySplashWnd
; Function compile flags: /Ogty
;	COMDAT ??_GCMySplashWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMySplashWnd@@UAEPAXI@Z PROC NEAR			; CMySplashWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CMySplashWnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L228330
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L228330:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCMySplashWnd@@UAEPAXI@Z ENDP			; CMySplashWnd::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T228375 DD	0ffffffffH
	DD	FLAT:$L228334
	DD	00H
	DD	FLAT:$L228335
	DD	01H
	DD	FLAT:$L228336
$T228373 DD	019930520H
	DD	03H
	DD	FLAT:$T228375
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??1CMySplashWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMySplashWnd@@UAE@XZ PROC NEAR			; CMySplashWnd::~CMySplashWnd, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CMySplashWnd@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  00020	c7 44 24 10 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 2
  00028	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0002d	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00030	c6 44 24 10 01	 mov	 BYTE PTR __$EHRec$[esp+28], 1
  00035	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGdiObject@@6B@
  0003b	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
  00040	8d 4e 5c	 lea	 ecx, DWORD PTR [esi+92]
  00043	c6 44 24 10 00	 mov	 BYTE PTR __$EHRec$[esp+28], 0
  00048	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGdiObject@@6B@
  0004e	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
  00053	8b ce		 mov	 ecx, esi
  00055	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  0005d	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00062	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00066	5e		 pop	 esi
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L228334:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
$L228335:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 5c	 add	 ecx, 92			; 0000005cH
  0000e	e9 00 00 00 00	 jmp	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
$L228336:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 64	 add	 ecx, 100		; 00000064H
  00019	e9 00 00 00 00	 jmp	 ??1CPalette@@UAE@XZ	; CPalette::~CPalette
__ehhandler$??1CMySplashWnd@@UAE@XZ:
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228373
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMySplashWnd@@UAE@XZ ENDP				; CMySplashWnd::~CMySplashWnd
PUBLIC	?Create@CMySplashWnd@@QAEHXZ			; CMySplashWnd::Create
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z:NEAR ; AfxRegisterWndClass
EXTRN	?CenterWindow@CWnd@@QAEXPAV1@@Z:NEAR		; CWnd::CenterWindow
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogty
; File c:\documents and settings\test\mes documents\source\virtuos_v17\build\program\worldserver\mysplashwnd.cpp
CONST	ENDS
;	COMDAT ?Create@CMySplashWnd@@QAEHXZ
_TEXT	SEGMENT
_bm$ = -24						; size = 24
?Create@CMySplashWnd@@QAEHXZ PROC NEAR			; CMySplashWnd::Create, COMDAT
; _this$ = ecx

; 17   : {

  00000	83 ec 18	 sub	 esp, 24			; 00000018H
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 18   : 	if( GetBitmapAndPalette( m_nBitmapID, m_bitmap, m_pal ) == FALSE )

  00006	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  00009	8d 46 64	 lea	 eax, DWORD PTR [esi+100]
  0000c	50		 push	 eax
  0000d	8d 4e 5c	 lea	 ecx, DWORD PTR [esi+92]
  00010	51		 push	 ecx
  00011	52		 push	 edx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?GetBitmapAndPalette@CMySplashWnd@@IAEHIAAVCBitmap@@AAVCPalette@@@Z ; CMySplashWnd::GetBitmapAndPalette
  00019	85 c0		 test	 eax, eax
  0001b	75 05		 jne	 SHORT $L226615
  0001d	5e		 pop	 esi

; 42   : }

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
$L226615:

; 19   : 	{
; 20   : 		TRACE1( "Could not load bitmap resource - %d\n", m_nBitmapID );
; 21   : 		return FALSE;
; 22   : 	}
; 23   : 
; 24   : 	BITMAP bm;
; 25   : 	m_bitmap.GetObject( sizeof(BITMAP), &bm );

  00022	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  00025	53		 push	 ebx
  00026	57		 push	 edi
  00027	8d 44 24 0c	 lea	 eax, DWORD PTR _bm$[esp+36]
  0002b	50		 push	 eax
  0002c	6a 18		 push	 24			; 00000018H
  0002e	51		 push	 ecx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12

; 26   : 
; 27   : 	// First create an invisible window
; 28   : 	m_wndInvisible.CreateEx( WS_EX_TOPMOST, AfxRegisterWndClass( CS_CLASSDC ), _T(""), WS_POPUP, 0, 0, bm.bmWidth, bm.bmHeight, NULL, NULL );

  00035	8b 54 24 14	 mov	 edx, DWORD PTR _bm$[esp+44]
  00039	8b 44 24 10	 mov	 eax, DWORD PTR _bm$[esp+40]
  0003d	6a 00		 push	 0
  0003f	6a 00		 push	 0
  00041	8b 5e 6c	 mov	 ebx, DWORD PTR [esi+108]
  00044	6a 00		 push	 0
  00046	52		 push	 edx
  00047	50		 push	 eax
  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00051	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	8d 7e 6c	 lea	 edi, DWORD PTR [esi+108]
  0005f	6a 40		 push	 64			; 00000040H
  00061	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  00066	50		 push	 eax
  00067	6a 08		 push	 8
  00069	8b cf		 mov	 ecx, edi
  0006b	ff 53 5c	 call	 DWORD PTR [ebx+92]

; 29   : 
; 30   : 	// Create the splash window with invisible parent as parent
; 31   : 	BOOL bRetVal	= CWnd::CreateEx( WS_EX_TOPMOST, AfxRegisterWndClass( CS_CLASSDC ), _T(""), WS_POPUP, 0, 0, bm.bmWidth, bm.bmHeight, m_wndInvisible.m_hWnd, NULL );

  0006e	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  00074	8b 54 24 14	 mov	 edx, DWORD PTR _bm$[esp+44]
  00078	8b 44 24 10	 mov	 eax, DWORD PTR _bm$[esp+40]
  0007c	6a 00		 push	 0
  0007e	6a 00		 push	 0
  00080	51		 push	 ecx
  00081	52		 push	 edx
  00082	50		 push	 eax
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00091	6a 00		 push	 0
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a 40		 push	 64			; 00000040H
  00099	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  0009e	50		 push	 eax
  0009f	6a 08		 push	 8
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z ; CWnd::CreateEx

; 32   : 
; 33   : 	CenterWindow();

  000a8	6a 00		 push	 0
  000aa	8b ce		 mov	 ecx, esi
  000ac	8b f8		 mov	 edi, eax
  000ae	e8 00 00 00 00	 call	 ?CenterWindow@CWnd@@QAEXPAV1@@Z ; CWnd::CenterWindow

; 34   : 	ShowWindow( SW_SHOW );

  000b3	6a 05		 push	 5
  000b5	8b ce		 mov	 ecx, esi
  000b7	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 35   : 	UpdateWindow();

  000bc	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4

; 36   : 
; 37   : 	// Create the timer.
; 38   : 	m_nTimerID	= SetTimer( 1, m_nDuration, NULL );

  000c6	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  000c9	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  000cc	6a 00		 push	 0
  000ce	50		 push	 eax
  000cf	6a 01		 push	 1
  000d1	52		 push	 edx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16
  000d8	89 46 58	 mov	 DWORD PTR [esi+88], eax

; 39   : 	ASSERT( m_nTimerID );
; 40   : 
; 41   : 	return bRetVal;

  000db	8b c7		 mov	 eax, edi
  000dd	5f		 pop	 edi
  000de	5b		 pop	 ebx
  000df	5e		 pop	 esi

; 42   : }

  000e0	83 c4 18	 add	 esp, 24			; 00000018H
  000e3	c3		 ret	 0
?Create@CMySplashWnd@@QAEHXZ ENDP			; CMySplashWnd::Create
_TEXT	ENDS
END
